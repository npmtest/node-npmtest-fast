{"/home/travis/build/npmtest/node-npmtest-fast/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-fast/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_fast */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-fast/lib.npmtest_fast.js":{"path":"/home/travis/build/npmtest/node-npmtest-fast/lib.npmtest_fast.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":49}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":55}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_fast */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_fast = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_fast = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-fast/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-fast/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":48}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":62},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-fast && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_fast */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_fast","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_fast.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_fast.rollup.js'] =","            local.assetsDict['/assets.npmtest_fast.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_fast.__dirname + '/lib.npmtest_fast.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-fast/node_modules/fast/lib/fast.js":{"path":"/home/travis/build/npmtest/node-npmtest-fast/node_modules/fast/lib/fast.js","s":{"1":4,"2":0,"3":0,"4":0},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":42}},"2":{"start":{"line":16,"column":0},"end":{"line":16,"column":42}},"3":{"start":{"line":18,"column":0},"end":{"line":18,"column":43}},"4":{"start":{"line":19,"column":0},"end":{"line":19,"column":43}}},"branchMap":{},"code":["/*"," * This Source Code Form is subject to the terms of the Mozilla Public"," * License, v. 2.0. If a copy of the MPL was not distributed with this"," * file, You can obtain one at http://mozilla.org/MPL/2.0/."," */","","/*"," * Copyright (c) 2016, Joyent, Inc."," */","","/*"," * lib/fast.js: public node-fast interface"," */","","var mod_client = require('./fast_client');","var mod_server = require('./fast_server');","","exports.FastClient = mod_client.FastClient;","exports.FastServer = mod_server.FastServer;",""],"l":{"15":4,"16":0,"18":0,"19":0}},"/home/travis/build/npmtest/node-npmtest-fast/node_modules/fast/lib/fast_client.js":{"path":"/home/travis/build/npmtest/node-npmtest-fast/node_modules/fast/lib/fast_client.js","s":{"1":6,"2":6,"3":6,"4":6,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":1,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0},"fnMap":{"1":{"name":"FastClient","line":67,"loc":{"start":{"line":67,"column":0},"end":{"line":68,"column":0}}},"2":{"name":"isReqIdAllocated","line":91,"loc":{"start":{"line":91,"column":20},"end":{"line":91,"column":50}}},"3":{"name":"(anonymous_3)","line":156,"loc":{"start":{"line":156,"column":27},"end":{"line":157,"column":0}}},"4":{"name":"(anonymous_4)","line":221,"loc":{"start":{"line":221,"column":31},"end":{"line":221,"column":43}}},"5":{"name":"onRpcTimeout","line":237,"loc":{"start":{"line":237,"column":35},"end":{"line":237,"column":59}}},"6":{"name":"(anonymous_6)","line":278,"loc":{"start":{"line":278,"column":44},"end":{"line":279,"column":0}}},"7":{"name":"(anonymous_7)","line":293,"loc":{"start":{"line":293,"column":20},"end":{"line":293,"column":33}}},"8":{"name":"(anonymous_8)","line":301,"loc":{"start":{"line":301,"column":21},"end":{"line":301,"column":36}}},"9":{"name":"(anonymous_9)","line":309,"loc":{"start":{"line":309,"column":19},"end":{"line":309,"column":31}}},"10":{"name":"(anonymous_10)","line":324,"loc":{"start":{"line":324,"column":30},"end":{"line":325,"column":0}}},"11":{"name":"(anonymous_11)","line":356,"loc":{"start":{"line":356,"column":37},"end":{"line":357,"column":0}}},"12":{"name":"(anonymous_12)","line":361,"loc":{"start":{"line":361,"column":39},"end":{"line":362,"column":0}}},"13":{"name":"(anonymous_13)","line":372,"loc":{"start":{"line":372,"column":37},"end":{"line":373,"column":0}}},"14":{"name":"(anonymous_14)","line":416,"loc":{"start":{"line":416,"column":30},"end":{"line":417,"column":0}}},"15":{"name":"onDecoderMessage","line":431,"loc":{"start":{"line":431,"column":5},"end":{"line":431,"column":40}}},"16":{"name":"onDecoderError","line":433,"loc":{"start":{"line":433,"column":5},"end":{"line":433,"column":34}}},"17":{"name":"onTransportEnd","line":444,"loc":{"start":{"line":444,"column":30},"end":{"line":444,"column":56}}},"18":{"name":"onTransportError","line":464,"loc":{"start":{"line":464,"column":27},"end":{"line":464,"column":58}}},"19":{"name":"(anonymous_19)","line":477,"loc":{"start":{"line":477,"column":38},"end":{"line":478,"column":0}}},"20":{"name":"(anonymous_20)","line":487,"loc":{"start":{"line":487,"column":34},"end":{"line":488,"column":0}}},"21":{"name":"(anonymous_21)","line":504,"loc":{"start":{"line":504,"column":41},"end":{"line":505,"column":0}}},"22":{"name":"(anonymous_22)","line":522,"loc":{"start":{"line":522,"column":38},"end":{"line":523,"column":0}}},"23":{"name":"(anonymous_23)","line":577,"loc":{"start":{"line":577,"column":35},"end":{"line":578,"column":0}}},"24":{"name":"(anonymous_24)","line":600,"loc":{"start":{"line":600,"column":14},"end":{"line":600,"column":26}}},"25":{"name":"(anonymous_25)","line":608,"loc":{"start":{"line":608,"column":39},"end":{"line":609,"column":0}}},"26":{"name":"(anonymous_26)","line":618,"loc":{"start":{"line":618,"column":30},"end":{"line":618,"column":42}}},"27":{"name":"(anonymous_27)","line":656,"loc":{"start":{"line":656,"column":33},"end":{"line":657,"column":0}}},"28":{"name":"(anonymous_28)","line":764,"loc":{"start":{"line":764,"column":39},"end":{"line":765,"column":0}}},"29":{"name":"(anonymous_29)","line":789,"loc":{"start":{"line":789,"column":32},"end":{"line":789,"column":44}}},"30":{"name":"(anonymous_30)","line":804,"loc":{"start":{"line":804,"column":40},"end":{"line":805,"column":0}}},"31":{"name":"fastClientProviderInit","line":817,"loc":{"start":{"line":817,"column":0},"end":{"line":818,"column":0}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":44}},"2":{"start":{"line":16,"column":0},"end":{"line":16,"column":44}},"3":{"start":{"line":17,"column":0},"end":{"line":17,"column":35}},"4":{"start":{"line":18,"column":0},"end":{"line":18,"column":41}},"5":{"start":{"line":19,"column":0},"end":{"line":19,"column":31}},"6":{"start":{"line":20,"column":0},"end":{"line":20,"column":31}},"7":{"start":{"line":22,"column":0},"end":{"line":22,"column":46}},"8":{"start":{"line":23,"column":0},"end":{"line":23,"column":58}},"9":{"start":{"line":24,"column":0},"end":{"line":24,"column":33}},"10":{"start":{"line":26,"column":0},"end":{"line":26,"column":32}},"11":{"start":{"line":31,"column":0},"end":{"line":31,"column":30}},"12":{"start":{"line":39,"column":0},"end":{"line":39,"column":17}},"13":{"start":{"line":67,"column":0},"end":{"line":116,"column":1}},"14":{"start":{"line":69,"column":1},"end":{"line":69,"column":17}},"15":{"start":{"line":71,"column":1},"end":{"line":71,"column":37}},"16":{"start":{"line":72,"column":1},"end":{"line":72,"column":45}},"17":{"start":{"line":73,"column":1},"end":{"line":73,"column":69}},"18":{"start":{"line":74,"column":1},"end":{"line":74,"column":57}},"19":{"start":{"line":76,"column":1},"end":{"line":76,"column":24}},"20":{"start":{"line":77,"column":1},"end":{"line":77,"column":36}},"21":{"start":{"line":78,"column":1},"end":{"line":78,"column":40}},"22":{"start":{"line":81,"column":1},"end":{"line":81,"column":22}},"23":{"start":{"line":82,"column":1},"end":{"line":82,"column":24}},"24":{"start":{"line":83,"column":1},"end":{"line":83,"column":26}},"25":{"start":{"line":84,"column":1},"end":{"line":84,"column":23}},"26":{"start":{"line":85,"column":1},"end":{"line":85,"column":24}},"27":{"start":{"line":86,"column":1},"end":{"line":86,"column":22}},"28":{"start":{"line":87,"column":1},"end":{"line":87,"column":21}},"29":{"start":{"line":88,"column":1},"end":{"line":95,"column":4}},"30":{"start":{"line":92,"column":2},"end":{"line":93,"column":44}},"31":{"start":{"line":98,"column":1},"end":{"line":98,"column":32}},"32":{"start":{"line":99,"column":1},"end":{"line":99,"column":60}},"33":{"start":{"line":100,"column":1},"end":{"line":100,"column":60}},"34":{"start":{"line":103,"column":1},"end":{"line":103,"column":26}},"35":{"start":{"line":104,"column":1},"end":{"line":104,"column":33}},"36":{"start":{"line":106,"column":1},"end":{"line":108,"column":2}},"37":{"start":{"line":107,"column":2},"end":{"line":107,"column":48}},"38":{"start":{"line":110,"column":1},"end":{"line":110,"column":43}},"39":{"start":{"line":111,"column":1},"end":{"line":111,"column":31}},"40":{"start":{"line":112,"column":1},"end":{"line":112,"column":34}},"41":{"start":{"line":114,"column":1},"end":{"line":114,"column":36}},"42":{"start":{"line":115,"column":1},"end":{"line":115,"column":15}},"43":{"start":{"line":118,"column":0},"end":{"line":118,"column":55}},"44":{"start":{"line":156,"column":0},"end":{"line":248,"column":2}},"45":{"start":{"line":158,"column":1},"end":{"line":158,"column":34}},"46":{"start":{"line":159,"column":1},"end":{"line":159,"column":22}},"47":{"start":{"line":160,"column":1},"end":{"line":160,"column":17}},"48":{"start":{"line":162,"column":1},"end":{"line":162,"column":37}},"49":{"start":{"line":163,"column":1},"end":{"line":163,"column":59}},"50":{"start":{"line":164,"column":1},"end":{"line":164,"column":52}},"51":{"start":{"line":165,"column":1},"end":{"line":165,"column":61}},"52":{"start":{"line":166,"column":1},"end":{"line":166,"column":53}},"53":{"start":{"line":167,"column":1},"end":{"line":168,"column":30}},"54":{"start":{"line":170,"column":1},"end":{"line":173,"column":2}},"55":{"start":{"line":171,"column":2},"end":{"line":171,"column":58}},"56":{"start":{"line":172,"column":2},"end":{"line":172,"column":27}},"57":{"start":{"line":175,"column":1},"end":{"line":175,"column":31}},"58":{"start":{"line":176,"column":1},"end":{"line":176,"column":59}},"59":{"start":{"line":177,"column":1},"end":{"line":177,"column":41}},"60":{"start":{"line":178,"column":1},"end":{"line":189,"column":4}},"61":{"start":{"line":191,"column":1},"end":{"line":191,"column":34}},"62":{"start":{"line":192,"column":1},"end":{"line":192,"column":24}},"63":{"start":{"line":194,"column":1},"end":{"line":202,"column":2}},"64":{"start":{"line":196,"column":2},"end":{"line":196,"column":65}},"65":{"start":{"line":197,"column":2},"end":{"line":197,"column":26}},"66":{"start":{"line":198,"column":2},"end":{"line":200,"column":28}},"67":{"start":{"line":201,"column":2},"end":{"line":201,"column":19}},"68":{"start":{"line":204,"column":1},"end":{"line":214,"column":3}},"69":{"start":{"line":216,"column":1},"end":{"line":219,"column":39}},"70":{"start":{"line":221,"column":1},"end":{"line":231,"column":4}},"71":{"start":{"line":222,"column":5},"end":{"line":230,"column":8}},"72":{"start":{"line":233,"column":1},"end":{"line":233,"column":48}},"73":{"start":{"line":234,"column":1},"end":{"line":234,"column":35}},"74":{"start":{"line":236,"column":1},"end":{"line":245,"column":2}},"75":{"start":{"line":237,"column":2},"end":{"line":244,"column":16}},"76":{"start":{"line":238,"column":3},"end":{"line":243,"column":53}},"77":{"start":{"line":247,"column":1},"end":{"line":247,"column":18}},"78":{"start":{"line":278,"column":0},"end":{"line":318,"column":2}},"79":{"start":{"line":280,"column":1},"end":{"line":280,"column":43}},"80":{"start":{"line":282,"column":1},"end":{"line":282,"column":37}},"81":{"start":{"line":283,"column":1},"end":{"line":283,"column":43}},"82":{"start":{"line":284,"column":1},"end":{"line":285,"column":32}},"83":{"start":{"line":286,"column":1},"end":{"line":286,"column":37}},"84":{"start":{"line":287,"column":1},"end":{"line":287,"column":35}},"85":{"start":{"line":289,"column":1},"end":{"line":289,"column":11}},"86":{"start":{"line":290,"column":1},"end":{"line":290,"column":11}},"87":{"start":{"line":291,"column":1},"end":{"line":291,"column":14}},"88":{"start":{"line":292,"column":1},"end":{"line":292,"column":26}},"89":{"start":{"line":293,"column":1},"end":{"line":299,"column":4}},"90":{"start":{"line":294,"column":2},"end":{"line":294,"column":27}},"91":{"start":{"line":295,"column":2},"end":{"line":295,"column":10}},"92":{"start":{"line":296,"column":2},"end":{"line":298,"column":3}},"93":{"start":{"line":297,"column":3},"end":{"line":297,"column":16}},"94":{"start":{"line":301,"column":1},"end":{"line":307,"column":4}},"95":{"start":{"line":302,"column":2},"end":{"line":302,"column":27}},"96":{"start":{"line":303,"column":2},"end":{"line":303,"column":14}},"97":{"start":{"line":304,"column":2},"end":{"line":304,"column":42}},"98":{"start":{"line":305,"column":2},"end":{"line":305,"column":46}},"99":{"start":{"line":306,"column":2},"end":{"line":306,"column":29}},"100":{"start":{"line":309,"column":1},"end":{"line":315,"column":4}},"101":{"start":{"line":310,"column":2},"end":{"line":310,"column":27}},"102":{"start":{"line":311,"column":2},"end":{"line":311,"column":14}},"103":{"start":{"line":312,"column":2},"end":{"line":312,"column":42}},"104":{"start":{"line":313,"column":2},"end":{"line":313,"column":46}},"105":{"start":{"line":314,"column":2},"end":{"line":314,"column":30}},"106":{"start":{"line":317,"column":1},"end":{"line":317,"column":18}},"107":{"start":{"line":324,"column":0},"end":{"line":338,"column":2}},"108":{"start":{"line":326,"column":1},"end":{"line":328,"column":2}},"109":{"start":{"line":327,"column":2},"end":{"line":327,"column":9}},"110":{"start":{"line":330,"column":1},"end":{"line":330,"column":25}},"111":{"start":{"line":331,"column":1},"end":{"line":331,"column":68}},"112":{"start":{"line":332,"column":1},"end":{"line":332,"column":46}},"113":{"start":{"line":333,"column":1},"end":{"line":333,"column":46}},"114":{"start":{"line":335,"column":1},"end":{"line":337,"column":39}},"115":{"start":{"line":356,"column":0},"end":{"line":359,"column":2}},"116":{"start":{"line":358,"column":1},"end":{"line":358,"column":42}},"117":{"start":{"line":361,"column":0},"end":{"line":370,"column":2}},"118":{"start":{"line":363,"column":1},"end":{"line":365,"column":2}},"119":{"start":{"line":364,"column":2},"end":{"line":364,"column":28}},"120":{"start":{"line":367,"column":1},"end":{"line":367,"column":43}},"121":{"start":{"line":368,"column":1},"end":{"line":369,"column":38}},"122":{"start":{"line":372,"column":0},"end":{"line":410,"column":2}},"123":{"start":{"line":374,"column":1},"end":{"line":374,"column":13}},"124":{"start":{"line":376,"column":1},"end":{"line":388,"column":2}},"125":{"start":{"line":377,"column":2},"end":{"line":377,"column":41}},"126":{"start":{"line":378,"column":2},"end":{"line":386,"column":4}},"127":{"start":{"line":387,"column":2},"end":{"line":387,"column":14}},"128":{"start":{"line":390,"column":1},"end":{"line":390,"column":43}},"129":{"start":{"line":391,"column":1},"end":{"line":391,"column":9}},"130":{"start":{"line":392,"column":1},"end":{"line":392,"column":31}},"131":{"start":{"line":393,"column":1},"end":{"line":393,"column":18}},"132":{"start":{"line":395,"column":1},"end":{"line":399,"column":2}},"133":{"start":{"line":396,"column":2},"end":{"line":396,"column":28}},"134":{"start":{"line":398,"column":2},"end":{"line":398,"column":30}},"135":{"start":{"line":401,"column":1},"end":{"line":401,"column":30}},"136":{"start":{"line":402,"column":1},"end":{"line":402,"column":37}},"137":{"start":{"line":403,"column":1},"end":{"line":403,"column":36}},"138":{"start":{"line":404,"column":1},"end":{"line":404,"column":43}},"139":{"start":{"line":405,"column":1},"end":{"line":405,"column":29}},"140":{"start":{"line":406,"column":1},"end":{"line":406,"column":37}},"141":{"start":{"line":407,"column":1},"end":{"line":407,"column":44}},"142":{"start":{"line":408,"column":1},"end":{"line":408,"column":45}},"143":{"start":{"line":409,"column":1},"end":{"line":409,"column":13}},"144":{"start":{"line":416,"column":0},"end":{"line":472,"column":2}},"145":{"start":{"line":418,"column":1},"end":{"line":418,"column":17}},"146":{"start":{"line":420,"column":1},"end":{"line":420,"column":44}},"147":{"start":{"line":421,"column":1},"end":{"line":421,"column":62}},"148":{"start":{"line":430,"column":1},"end":{"line":431,"column":70}},"149":{"start":{"line":431,"column":42},"end":{"line":431,"column":66}},"150":{"start":{"line":432,"column":1},"end":{"line":433,"column":61}},"151":{"start":{"line":433,"column":36},"end":{"line":433,"column":57}},"152":{"start":{"line":444,"column":1},"end":{"line":462,"column":4}},"153":{"start":{"line":445,"column":2},"end":{"line":445,"column":10}},"154":{"start":{"line":447,"column":2},"end":{"line":447,"column":33}},"155":{"start":{"line":456,"column":2},"end":{"line":461,"column":3}},"156":{"start":{"line":457,"column":3},"end":{"line":459,"column":44}},"157":{"start":{"line":460,"column":3},"end":{"line":460,"column":24}},"158":{"start":{"line":464,"column":1},"end":{"line":469,"column":3}},"159":{"start":{"line":465,"column":2},"end":{"line":468,"column":39}},"160":{"start":{"line":471,"column":1},"end":{"line":471,"column":56}},"161":{"start":{"line":477,"column":0},"end":{"line":480,"column":2}},"162":{"start":{"line":479,"column":1},"end":{"line":479,"column":36}},"163":{"start":{"line":487,"column":0},"end":{"line":499,"column":2}},"164":{"start":{"line":489,"column":1},"end":{"line":489,"column":23}},"165":{"start":{"line":490,"column":1},"end":{"line":490,"column":19}},"166":{"start":{"line":492,"column":1},"end":{"line":494,"column":2}},"167":{"start":{"line":493,"column":2},"end":{"line":493,"column":9}},"168":{"start":{"line":496,"column":1},"end":{"line":496,"column":21}},"169":{"start":{"line":497,"column":1},"end":{"line":497,"column":25}},"170":{"start":{"line":498,"column":1},"end":{"line":498,"column":29}},"171":{"start":{"line":504,"column":0},"end":{"line":514,"column":2}},"172":{"start":{"line":506,"column":1},"end":{"line":506,"column":11}},"173":{"start":{"line":508,"column":1},"end":{"line":513,"column":2}},"174":{"start":{"line":509,"column":2},"end":{"line":510,"column":53}},"175":{"start":{"line":511,"column":2},"end":{"line":511,"column":53}},"176":{"start":{"line":512,"column":2},"end":{"line":512,"column":60}},"177":{"start":{"line":522,"column":0},"end":{"line":572,"column":2}},"178":{"start":{"line":524,"column":1},"end":{"line":524,"column":11}},"179":{"start":{"line":526,"column":1},"end":{"line":528,"column":2}},"180":{"start":{"line":527,"column":2},"end":{"line":527,"column":9}},"181":{"start":{"line":530,"column":1},"end":{"line":530,"column":39}},"182":{"start":{"line":532,"column":1},"end":{"line":532,"column":27}},"183":{"start":{"line":533,"column":1},"end":{"line":533,"column":54}},"184":{"start":{"line":534,"column":1},"end":{"line":534,"column":30}},"185":{"start":{"line":570,"column":1},"end":{"line":570,"column":48}},"186":{"start":{"line":571,"column":1},"end":{"line":571,"column":34}},"187":{"start":{"line":577,"column":0},"end":{"line":603,"column":2}},"188":{"start":{"line":579,"column":1},"end":{"line":579,"column":47}},"189":{"start":{"line":580,"column":1},"end":{"line":580,"column":30}},"190":{"start":{"line":582,"column":1},"end":{"line":589,"column":22}},"191":{"start":{"line":591,"column":1},"end":{"line":591,"column":31}},"192":{"start":{"line":600,"column":1},"end":{"line":602,"column":4}},"193":{"start":{"line":601,"column":2},"end":{"line":601,"column":43}},"194":{"start":{"line":608,"column":0},"end":{"line":654,"column":2}},"195":{"start":{"line":610,"column":1},"end":{"line":610,"column":11}},"196":{"start":{"line":611,"column":1},"end":{"line":611,"column":17}},"197":{"start":{"line":613,"column":1},"end":{"line":616,"column":2}},"198":{"start":{"line":614,"column":2},"end":{"line":614,"column":36}},"199":{"start":{"line":615,"column":2},"end":{"line":615,"column":29}},"200":{"start":{"line":618,"column":1},"end":{"line":635,"column":4}},"201":{"start":{"line":619,"column":2},"end":{"line":619,"column":18}},"202":{"start":{"line":621,"column":2},"end":{"line":621,"column":14}},"203":{"start":{"line":622,"column":2},"end":{"line":628,"column":3}},"204":{"start":{"line":623,"column":3},"end":{"line":623,"column":41}},"205":{"start":{"line":624,"column":3},"end":{"line":627,"column":5}},"206":{"start":{"line":630,"column":2},"end":{"line":634,"column":5}},"207":{"start":{"line":637,"column":1},"end":{"line":642,"column":2}},"208":{"start":{"line":638,"column":2},"end":{"line":639,"column":29}},"209":{"start":{"line":641,"column":2},"end":{"line":641,"column":63}},"210":{"start":{"line":644,"column":1},"end":{"line":644,"column":27}},"211":{"start":{"line":645,"column":1},"end":{"line":645,"column":52}},"212":{"start":{"line":646,"column":1},"end":{"line":646,"column":54}},"213":{"start":{"line":647,"column":1},"end":{"line":647,"column":33}},"214":{"start":{"line":648,"column":1},"end":{"line":648,"column":21}},"215":{"start":{"line":650,"column":1},"end":{"line":650,"column":33}},"216":{"start":{"line":651,"column":1},"end":{"line":653,"column":2}},"217":{"start":{"line":652,"column":2},"end":{"line":652,"column":28}},"218":{"start":{"line":656,"column":0},"end":{"line":757,"column":2}},"219":{"start":{"line":658,"column":1},"end":{"line":658,"column":31}},"220":{"start":{"line":660,"column":1},"end":{"line":660,"column":48}},"221":{"start":{"line":662,"column":1},"end":{"line":663,"column":47}},"222":{"start":{"line":664,"column":1},"end":{"line":682,"column":2}},"223":{"start":{"line":665,"column":2},"end":{"line":665,"column":43}},"224":{"start":{"line":666,"column":2},"end":{"line":666,"column":44}},"225":{"start":{"line":667,"column":2},"end":{"line":667,"column":20}},"226":{"start":{"line":668,"column":8},"end":{"line":682,"column":2}},"227":{"start":{"line":669,"column":2},"end":{"line":669,"column":45}},"228":{"start":{"line":670,"column":2},"end":{"line":670,"column":43}},"229":{"start":{"line":671,"column":2},"end":{"line":671,"column":19}},"230":{"start":{"line":673,"column":2},"end":{"line":680,"column":22}},"231":{"start":{"line":681,"column":2},"end":{"line":681,"column":9}},"232":{"start":{"line":684,"column":1},"end":{"line":684,"column":47}},"233":{"start":{"line":685,"column":1},"end":{"line":685,"column":28}},"234":{"start":{"line":691,"column":1},"end":{"line":708,"column":2}},"235":{"start":{"line":692,"column":2},"end":{"line":705,"column":3}},"236":{"start":{"line":693,"column":3},"end":{"line":693,"column":58}},"237":{"start":{"line":694,"column":3},"end":{"line":694,"column":49}},"238":{"start":{"line":700,"column":3},"end":{"line":704,"column":4}},"239":{"start":{"line":701,"column":4},"end":{"line":701,"column":37}},"240":{"start":{"line":702,"column":4},"end":{"line":702,"column":34}},"241":{"start":{"line":703,"column":4},"end":{"line":703,"column":18}},"242":{"start":{"line":707,"column":2},"end":{"line":707,"column":9}},"243":{"start":{"line":713,"column":1},"end":{"line":718,"column":2}},"244":{"start":{"line":714,"column":2},"end":{"line":715,"column":55}},"245":{"start":{"line":716,"column":2},"end":{"line":716,"column":25}},"246":{"start":{"line":717,"column":2},"end":{"line":717,"column":9}},"247":{"start":{"line":727,"column":1},"end":{"line":727,"column":47}},"248":{"start":{"line":729,"column":1},"end":{"line":733,"column":2}},"249":{"start":{"line":730,"column":2},"end":{"line":730,"column":22}},"250":{"start":{"line":731,"column":2},"end":{"line":731,"column":41}},"251":{"start":{"line":732,"column":2},"end":{"line":732,"column":9}},"252":{"start":{"line":735,"column":1},"end":{"line":736,"column":52}},"253":{"start":{"line":737,"column":1},"end":{"line":740,"column":34}},"254":{"start":{"line":741,"column":1},"end":{"line":743,"column":2}},"255":{"start":{"line":742,"column":2},"end":{"line":742,"column":37}},"256":{"start":{"line":749,"column":1},"end":{"line":749,"column":40}},"257":{"start":{"line":750,"column":1},"end":{"line":750,"column":46}},"258":{"start":{"line":752,"column":1},"end":{"line":752,"column":34}},"259":{"start":{"line":753,"column":1},"end":{"line":756,"column":21}},"260":{"start":{"line":764,"column":0},"end":{"line":802,"column":2}},"261":{"start":{"line":766,"column":1},"end":{"line":766,"column":10}},"262":{"start":{"line":767,"column":1},"end":{"line":767,"column":17}},"263":{"start":{"line":769,"column":1},"end":{"line":769,"column":51}},"264":{"start":{"line":771,"column":1},"end":{"line":799,"column":2}},"265":{"start":{"line":772,"column":2},"end":{"line":772,"column":24}},"266":{"start":{"line":773,"column":2},"end":{"line":798,"column":3}},"267":{"start":{"line":774,"column":3},"end":{"line":777,"column":4}},"268":{"start":{"line":775,"column":4},"end":{"line":775,"column":32}},"269":{"start":{"line":776,"column":4},"end":{"line":776,"column":13}},"270":{"start":{"line":779,"column":3},"end":{"line":786,"column":35}},"271":{"start":{"line":787,"column":3},"end":{"line":787,"column":18}},"272":{"start":{"line":789,"column":3},"end":{"line":795,"column":6}},"273":{"start":{"line":790,"column":7},"end":{"line":794,"column":10}},"274":{"start":{"line":797,"column":3},"end":{"line":797,"column":19}},"275":{"start":{"line":801,"column":1},"end":{"line":801,"column":15}},"276":{"start":{"line":804,"column":0},"end":{"line":811,"column":2}},"277":{"start":{"line":806,"column":1},"end":{"line":806,"column":43}},"278":{"start":{"line":807,"column":1},"end":{"line":809,"column":43}},"279":{"start":{"line":810,"column":1},"end":{"line":810,"column":67}},"280":{"start":{"line":817,"column":0},"end":{"line":861,"column":1}},"281":{"start":{"line":819,"column":1},"end":{"line":819,"column":9}},"282":{"start":{"line":821,"column":1},"end":{"line":821,"column":53}},"283":{"start":{"line":837,"column":1},"end":{"line":837,"column":59}},"284":{"start":{"line":846,"column":1},"end":{"line":846,"column":48}},"285":{"start":{"line":857,"column":1},"end":{"line":857,"column":48}},"286":{"start":{"line":858,"column":1},"end":{"line":858,"column":14}},"287":{"start":{"line":860,"column":1},"end":{"line":860,"column":14}}},"branchMap":{"1":{"line":92,"type":"binary-expr","locations":[{"start":{"line":92,"column":10},"end":{"line":92,"column":44}},{"start":{"line":93,"column":6},"end":{"line":93,"column":42}}]},"2":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":1},"end":{"line":106,"column":1}},{"start":{"line":106,"column":1},"end":{"line":106,"column":1}}]},"3":{"line":170,"type":"if","locations":[{"start":{"line":170,"column":1},"end":{"line":170,"column":1}},{"start":{"line":170,"column":1},"end":{"line":170,"column":1}}]},"4":{"line":177,"type":"cond-expr","locations":[{"start":{"line":177,"column":18},"end":{"line":177,"column":26}},{"start":{"line":177,"column":29},"end":{"line":177,"column":40}}]},"5":{"line":183,"type":"binary-expr","locations":[{"start":{"line":183,"column":25},"end":{"line":183,"column":46}},{"start":{"line":183,"column":50},"end":{"line":183,"column":55}}]},"6":{"line":194,"type":"if","locations":[{"start":{"line":194,"column":1},"end":{"line":194,"column":1}},{"start":{"line":194,"column":1},"end":{"line":194,"column":1}}]},"7":{"line":194,"type":"binary-expr","locations":[{"start":{"line":194,"column":5},"end":{"line":194,"column":27}},{"start":{"line":194,"column":31},"end":{"line":194,"column":47}},{"start":{"line":195,"column":5},"end":{"line":195,"column":28}}]},"8":{"line":236,"type":"if","locations":[{"start":{"line":236,"column":1},"end":{"line":236,"column":1}},{"start":{"line":236,"column":1},"end":{"line":236,"column":1}}]},"9":{"line":296,"type":"if","locations":[{"start":{"line":296,"column":2},"end":{"line":296,"column":2}},{"start":{"line":296,"column":2},"end":{"line":296,"column":2}}]},"10":{"line":326,"type":"if","locations":[{"start":{"line":326,"column":1},"end":{"line":326,"column":1}},{"start":{"line":326,"column":1},"end":{"line":326,"column":1}}]},"11":{"line":363,"type":"if","locations":[{"start":{"line":363,"column":1},"end":{"line":363,"column":1}},{"start":{"line":363,"column":1},"end":{"line":363,"column":1}}]},"12":{"line":376,"type":"if","locations":[{"start":{"line":376,"column":1},"end":{"line":376,"column":1}},{"start":{"line":376,"column":1},"end":{"line":376,"column":1}}]},"13":{"line":395,"type":"if","locations":[{"start":{"line":395,"column":1},"end":{"line":395,"column":1}},{"start":{"line":395,"column":1},"end":{"line":395,"column":1}}]},"14":{"line":456,"type":"if","locations":[{"start":{"line":456,"column":2},"end":{"line":456,"column":2}},{"start":{"line":456,"column":2},"end":{"line":456,"column":2}}]},"15":{"line":492,"type":"if","locations":[{"start":{"line":492,"column":1},"end":{"line":492,"column":1}},{"start":{"line":492,"column":1},"end":{"line":492,"column":1}}]},"16":{"line":526,"type":"if","locations":[{"start":{"line":526,"column":1},"end":{"line":526,"column":1}},{"start":{"line":526,"column":1},"end":{"line":526,"column":1}}]},"17":{"line":613,"type":"if","locations":[{"start":{"line":613,"column":1},"end":{"line":613,"column":1}},{"start":{"line":613,"column":1},"end":{"line":613,"column":1}}]},"18":{"line":622,"type":"if","locations":[{"start":{"line":622,"column":2},"end":{"line":622,"column":2}},{"start":{"line":622,"column":2},"end":{"line":622,"column":2}}]},"19":{"line":625,"type":"cond-expr","locations":[{"start":{"line":625,"column":21},"end":{"line":625,"column":29}},{"start":{"line":625,"column":32},"end":{"line":625,"column":35}}]},"20":{"line":626,"type":"cond-expr","locations":[{"start":{"line":626,"column":24},"end":{"line":626,"column":35}},{"start":{"line":626,"column":38},"end":{"line":626,"column":41}}]},"21":{"line":637,"type":"if","locations":[{"start":{"line":637,"column":1},"end":{"line":637,"column":1}},{"start":{"line":637,"column":1},"end":{"line":637,"column":1}}]},"22":{"line":651,"type":"if","locations":[{"start":{"line":651,"column":1},"end":{"line":651,"column":1}},{"start":{"line":651,"column":1},"end":{"line":651,"column":1}}]},"23":{"line":664,"type":"if","locations":[{"start":{"line":664,"column":1},"end":{"line":664,"column":1}},{"start":{"line":664,"column":1},"end":{"line":664,"column":1}}]},"24":{"line":668,"type":"if","locations":[{"start":{"line":668,"column":8},"end":{"line":668,"column":8}},{"start":{"line":668,"column":8},"end":{"line":668,"column":8}}]},"25":{"line":691,"type":"if","locations":[{"start":{"line":691,"column":1},"end":{"line":691,"column":1}},{"start":{"line":691,"column":1},"end":{"line":691,"column":1}}]},"26":{"line":692,"type":"if","locations":[{"start":{"line":692,"column":2},"end":{"line":692,"column":2}},{"start":{"line":692,"column":2},"end":{"line":692,"column":2}}]},"27":{"line":700,"type":"if","locations":[{"start":{"line":700,"column":3},"end":{"line":700,"column":3}},{"start":{"line":700,"column":3},"end":{"line":700,"column":3}}]},"28":{"line":713,"type":"if","locations":[{"start":{"line":713,"column":1},"end":{"line":713,"column":1}},{"start":{"line":713,"column":1},"end":{"line":713,"column":1}}]},"29":{"line":729,"type":"if","locations":[{"start":{"line":729,"column":1},"end":{"line":729,"column":1}},{"start":{"line":729,"column":1},"end":{"line":729,"column":1}}]},"30":{"line":741,"type":"if","locations":[{"start":{"line":741,"column":1},"end":{"line":741,"column":1}},{"start":{"line":741,"column":1},"end":{"line":741,"column":1}}]},"31":{"line":773,"type":"if","locations":[{"start":{"line":773,"column":2},"end":{"line":773,"column":2}},{"start":{"line":773,"column":2},"end":{"line":773,"column":2}}]},"32":{"line":774,"type":"if","locations":[{"start":{"line":774,"column":3},"end":{"line":774,"column":3}},{"start":{"line":774,"column":3},"end":{"line":774,"column":3}}]},"33":{"line":810,"type":"binary-expr","locations":[{"start":{"line":810,"column":9},"end":{"line":810,"column":35}},{"start":{"line":810,"column":39},"end":{"line":810,"column":65}}]}},"code":["/*"," * This Source Code Form is subject to the terms of the Mozilla Public"," * License, v. 2.0. If a copy of the MPL was not distributed with this"," * file, You can obtain one at http://mozilla.org/MPL/2.0/."," */","","/*"," * Copyright (c) 2016, Joyent, Inc."," */","","/*"," * lib/fast_client.js: public node-fast client interface"," */","","var mod_assertplus = require('assert-plus');","var mod_dtrace = require('dtrace-provider');","var mod_events = require('events');","var mod_microtime = require('microtime');","var mod_util = require('util');","var VError = require('verror');","","var mod_protocol = require('./fast_protocol');","var mod_client_request = require('./fast_client_request');","var mod_subr = require('./subr');","","exports.FastClient = FastClient;","","/*"," * There's one DTrace provider for all clients using this copy of this module."," */","var fastClientProvider = null;","","/*"," * We have one counter for the number of clients in the process.  Note that this"," * is a true JavaScript global, so that different copies of this module"," * (presumably at different versions) will still end up with unique client ids."," */","/* jsl:declare fastNclients */","fastNclients = 0;","","","/*"," * A FastClient is an object used to make RPC requests to a remote Fast server."," * This client does not manage the connection to the remote server.  That's the"," * responsibility of the caller."," *"," * Named arguments:"," *"," *     log\t\tbunyan-style logger"," *"," *     nRecentRequests\tcount of recent requests to keep track of (for"," *     \t\t\tdebugging)"," *"," *     transport\tusually a socket connected to the remote server, but"," *     \t\t\tthis could be any data-mode duplex stream.  This client"," *     \t\t\twill write messages to the transport and parse responses"," *     \t\t\tfrom the transport.  This client listens for 'error'"," *     \t\t\tevents and end-of-stream only so that it can report"," *     \t\t\trequest failures.  The caller is also expected to listen"," *     \t\t\tfor these errors and handle reconnection appropriately."," *"," * On 'error', the caller should assume that the current connection to the"," * server is in an undefined state and should not be used any more.  Any"," * in-flight RPC will be terminated gracefully (i.e., with an \"error\" or \"end\""," * event)."," */","function FastClient(args)","{","\tvar self = this;","","\tmod_assertplus.object(args, 'args');","\tmod_assertplus.object(args.log, 'args.log');","\tmod_assertplus.number(args.nRecentRequests, 'args.nRecentRequests');","\tmod_assertplus.object(args.transport, 'args.transport');","","\tthis.fc_log = args.log;","\tthis.fc_transport = args.transport;","\tthis.fc_nrecent = args.nRecentRequests;","","\t/* RPC and protocol state */","\tthis.fc_pending = {}; \t\t/* pending requests */","\tthis.fc_abandoned = {};\t\t/* abandoned, outstanding requests */","\tthis.fc_nrpc_started = 0;\t/* requests issued */","\tthis.fc_nrpc_done = 0;\t\t/* requests completed */","\tthis.fc_recentrpc = [];\t\t/* recently completed requests */","\tthis.fc_error = null;\t\t/* first fatal error, if any */","\tthis.fc_nerrors = 0;\t\t/* count of fatal errors */","\tthis.fc_rqidalloc = new mod_subr.IdAllocator({","\t    'min': 1,","\t    'max': mod_protocol.FP_MSGID_MAX,","\t    'isAllocated': function isReqIdAllocated(id) {","\t\treturn (self.fc_pending.hasOwnProperty(id) ||","\t\t    self.fc_abandoned.hasOwnProperty(id));","\t    }","\t});","","\t/* transport and message helper objects */","\tthis.fc_transport_onerr = null;\t/* error listener */","\tthis.fc_msgencoder = new mod_protocol.FastMessageEncoder();","\tthis.fc_msgdecoder = new mod_protocol.FastMessageDecoder();","","\t/* transport state */","\tthis.fc_detached = false;\t /* caller detached us */","\tthis.fc_transport_ended = false; /* transport detached us */","","\tif (fastClientProvider === null) {","\t\tfastClientProvider = fastClientProviderInit();","\t}","","\tmod_assertplus.object(fastClientProvider);","\tthis.fc_dtid = ++fastNclients;","\tthis.fc_dtp = fastClientProvider;","","\tmod_events.EventEmitter.call(this);","\tthis.attach();","}","","mod_util.inherits(FastClient, mod_events.EventEmitter);","","/*"," * [public] Initiate an RPC request.  Named parameters include:"," *"," *     rpcmethod\t(string)\tname of the RPC method to invoke"," *"," *     rpcargs\t\t(object)\tvalues of arguments passed to the RPC"," *"," *     timeout (optional number)\tmilliseconds after which to abandon the"," *     \t\t\t\t\trequest if no response has been received"," *"," *     log        (optional log)\tbunyan-style logger"," *"," *     ignoreNullValues\t\t\tallow null values to be received from"," *     (optional boolean)\t\tthe server and drop them.  This is used"," *     \t\t\t\t\tfor legacy servers that incorrectly sent"," *     \t\t\t\t\tnull values.  If this is not specified"," *     \t\t\t\t\tand a null value is received, this is"," *     \t\t\t\t\ttreated as a protocol error."," *"," * The semantics of \"rpcmethod\" and \"rpcargs\" are defined by the server."," *"," * If \"log\" is not provided, then this request uses a child of the client-level"," * logger."," *"," * The return value is an object-mode readable stream that emits zero or more"," * messages from the server.  As with other readable streams, \"end\" denotes"," * successful completion, and \"error\" denotes unsuccessful completion.  This"," * stream does not support flow control, so the server must be trusted, and the"," * caller must avoid making requests that return large amounts of data faster"," * than the caller can process it.  Additionally, the stream is already reading"," * when the caller gets it, so there's no need to call read(0) to kick off the"," * RPC."," *"," * See rpcBufferAndCallback() for an interface that buffers incoming data and"," * invokes a callback upon completion."," */","FastClient.prototype.rpc = function (args)","{","\tvar msgid, log, request, message;","\tvar timeoutms = null;","\tvar self = this;","","\tmod_assertplus.object(args, 'args');","\tmod_assertplus.string(args.rpcmethod, 'method.rpcmethod');","\tmod_assertplus.array(args.rpcargs, 'args.rpcargs');","\tmod_assertplus.optionalNumber(args.timeout, 'args.timeout');","\tmod_assertplus.optionalObject(args.log, 'args.log');","\tmod_assertplus.optionalBool(args.ignoreNullValues,","\t    'args.ignoreNullValues');","","\tif (typeof (args.timeout) == 'number') {","\t\tmod_assertplus.ok(args.timeout > 0, 'args.timeout > 0');","\t\ttimeoutms = args.timeout;","\t}","","\tmsgid = this.allocMessageId();","\tmod_assertplus.ok(!this.fc_pending.hasOwnProperty(msgid));","\tlog = args.log ? args.log : this.fc_log;","\trequest = new mod_client_request.FastClientRequest({","\t    'client': this,","\t    'msgid': msgid,","\t    'rpcmethod': args.rpcmethod,","\t    'rpcargs': args.rpcargs,","\t    'ignoreNullValues': args.ignoreNullValues || false,","\t    'log': log.child({","\t\t'component': 'FastClientRequest',","\t\t'msgid': msgid,","\t\t'rpcmethod': args.rpcmethod","\t    })","\t});","","\tthis.fc_pending[msgid] = request;","\tthis.fc_nrpc_started++;","","\tif (this.fc_error !== null || this.fc_detached ||","\t    this.fc_transport_ended) {","\t\tthis.fc_log.debug('skipping new request (transport detached)');","\t\trequest.frq_skip = true;","\t\tthis.requestFail(request, new VError({","\t\t    'name': 'FastTransportError'","\t\t}, 'transport detached'));","\t\treturn (request);","\t}","","\tmessage = {","\t    'msgid': msgid,","\t    'status': mod_protocol.FP_STATUS_DATA,","\t    'data': {","\t\t'm': {","\t\t    'uts': mod_microtime.now(),","\t\t    'name': args.rpcmethod","\t\t},","\t\t'd': args.rpcargs","\t    }","\t};","","\trequest.frq_log.debug({","\t    'rpcargs': args.rpcargs,","\t    'timeoutms': timeoutms","\t}, 'rpc %s: entered', args.rpcmethod);","","\tthis.fc_dtp.fire('rpc-start', function () {","\t    return ([","\t\tself.fc_dtid,","\t\trequest.frq_msgid,","\t\targs.rpcmethod,","\t\t{","\t\t    'rpcargs': args.rpcargs,","\t\t    'timeout': timeoutms","\t\t}","\t    ]);","\t});","","\tthis.fc_log.trace(message, 'outgoing message');","\tthis.fc_msgencoder.write(message);","","\tif (timeoutms !== null) {","\t\trequest.frq_timeout = setTimeout(function onRpcTimeout() {","\t\t\tself.requestAbandon(request, new VError({","\t\t\t    'name': 'TimeoutError',","\t\t\t    'info': {","\t\t\t\t'timeout': timeoutms","\t\t\t    }","\t\t\t}, 'timed out after %d milliseconds', timeoutms));","\t\t}, timeoutms);","\t}","","\treturn (request);","};","","/*"," * Make an RPC request just like rpc(), but buffer incoming data messages until"," * the request is complete and invoke \"callback\" as callback(err, data, ndata)"," * when the request is complete.  In the callback:"," *"," *     \"err\" is the error, if any"," *"," *     \"data\" is an array of data objects returned with the RPC"," *     (up to \"maxObjectsToBuffer\" objects)"," *"," *     \"ndata\" is a non-negative integer describing how many data objects were"," *     received.  If \"ndata\" is larger than \"data.length\", then messages were"," *     dropped because maxObjectsToBuffer was too small."," *"," * Note that \"data\" will always be an array and may contain messages even if"," * \"err\" is present.  Similarly, \"ndata\" will always be a non-negative integer."," *"," * This function takes all of the named arguments that rpc() takes, plus the"," * following required argument:"," *"," *     maxObjectsToBuffer\tthe maximum number of data messages to buffer."," *     \t\t\t\tThis allows callers to use this interface to"," *     \t\t\t\tmake an RPC call that they expect may only"," *     \t\t\t\tproduce a small number of data messages and know"," *     \t\t\t\tthat a bounded amount of memory will be used,"," *     \t\t\t\teven if the server returns more than the"," *     \t\t\t\texpected number of messages."," */","FastClient.prototype.rpcBufferAndCallback = function (args, callback)","{","\tvar maxbuffer, request, data, ndata, done;","","\tmod_assertplus.object(args, 'args');","\tmod_assertplus.func(callback, 'callback');","\tmod_assertplus.number(args.maxObjectsToBuffer,","\t    'args.maxObjectsToBuffer');","\tmaxbuffer = args.maxObjectsToBuffer;","\tmod_assertplus.ok(maxbuffer >= 0);","","\tdata = [];","\tndata = 0;","\tdone = false;","\trequest = this.rpc(args);","\trequest.on('data', function (c) {","\t\tmod_assertplus.ok(!done);","\t\tndata++;","\t\tif (data.length < maxbuffer) {","\t\t\tdata.push(c);","\t\t}","\t});","","\trequest.on('error', function (err) {","\t\tmod_assertplus.ok(!done);","\t\tdone = true;","\t\tmod_assertplus.ok(data.length <= ndata);","\t\tmod_assertplus.ok(data.length <= maxbuffer);","\t\tcallback(err, data, ndata);","\t});","","\trequest.on('end', function () {","\t\tmod_assertplus.ok(!done);","\t\tdone = true;","\t\tmod_assertplus.ok(data.length <= ndata);","\t\tmod_assertplus.ok(data.length <= maxbuffer);","\t\tcallback(null, data, ndata);","\t});","","\treturn (request);","};","","/*"," * Disconnect entirely from the underlying transport.  Do not read from it or"," * write to it and remove any event handlers."," */","FastClient.prototype.detach = function ()","{","\tif (this.fc_detached) {","\t\treturn;","\t}","","\tthis.fc_detached = true;","\tthis.fc_transport.removeListener('error', this.fc_transport_onerr);","\tthis.fc_transport.unpipe(this.fc_msgdecoder);","\tthis.fc_msgencoder.unpipe(this.fc_transport);","","\tthis.requestAbandonAll(new VError({","\t    'name': 'FastTransportError'","\t}, 'client detached from transport'));","};","","/*"," * Public methods for exposing debugging data over kang."," *"," * Over kang, we expose objects of types:"," *"," *     fastclient\t  describes a single FastClient, including basic"," *\t\t\t  activity stats, any fatal error, and so on."," *"," *     fastrequest\t  describes a request that's currently outstanding,"," *\t\t\t  including which connection received it, how long it's"," *\t\t\t  been running, and what state it's in"," *"," * We do not provide a kang entry point for stats because we expect that there"," * will be many FastClients in most kang components and they will aggregate up"," * statistics from individual \"fastclient\" objects as desired."," */","FastClient.prototype.kangListTypes = function ()","{","\treturn ([ 'fastclient', 'fastrequest' ]);","};","","FastClient.prototype.kangListObjects = function (type)","{","\tif (type == 'fastclient') {","\t\treturn ([ this.fc_dtid ]);","\t}","","\tmod_assertplus.equal(type, 'fastrequest');","\treturn (Object.keys(this.fc_pending).concat(","\t    Object.keys(this.fc_abandoned)));","};","","FastClient.prototype.kangGetObject = function (type, id)","{","\tvar rv, req;","","\tif (type == 'fastclient') {","\t\tmod_assertplus.equal(id, this.fc_dtid);","\t\trv = {","\t\t    'id': id,","\t\t    'nRpcStarted': this.fc_nrpc_started,","\t\t    'nRpcDone': this.fc_nrpc_done,","\t\t    'nErrors': this.fc_nerrors,","\t\t    'error': this.fc_error,","\t\t    'detached': this.fc_detached,","\t\t    'transportEnded': this.fc_transport_ended","\t\t};","\t\treturn (rv);","\t}","","\tmod_assertplus.equal(type, 'fastrequest');","\trv = {};","\trv['clientId'] = this.fc_dtid;","\trv['msgid'] = id;","","\tif (this.fc_pending.hasOwnProperty(id)) {","\t\treq = this.fc_pending[id];","\t} else {","\t\treq = this.fc_abandoned[id];","\t}","","\trv['skipped'] = req.frq_skip;","\trv['rpcmethod'] = req.frq_rpcmethod;","\trv['nDataEmitted'] = req.frq_ndata;","\trv['nMessagesIgnored'] = req.frq_nignored;","\trv['error'] = req.frq_error;","\trv['abandoned'] = req.frq_abandoned;","\trv['doneGraceful'] = req.frq_done_graceful;","\trv['hasTimeout'] = req.frq_timeout !== null;","\treturn (rv);","};","","/*"," * private methods"," */","","FastClient.prototype.attach = function ()","{","\tvar self = this;","","\tthis.fc_transport.pipe(this.fc_msgdecoder);","\tthis.fc_msgencoder.pipe(this.fc_transport, { 'end': false });","","\t/*","\t * It's non-idiomatic to use the \"data\" event because it defeats flow","\t * control.  However, this abstraction cannot support flow control","\t * anyway, but clients can already deal with this by limiting the size","\t * of responses.  Since we know our message decoder is an object-mode","\t * stream, we may as well just read objects with this handler.","\t */","\tthis.fc_msgdecoder.on('data',","\t    function onDecoderMessage(message) { self.onMessage(message); });","\tthis.fc_msgdecoder.on('error',","\t    function onDecoderError(err) { self.fatalError(err); });","","\t/*","\t * By the nature of this abstraction, we don't own the transport.  But","\t * we still want to know when it either emits \"end\" or \"error\" so that","\t * we can know that any outstanding requests will not be completed.","\t * Some modules use \"close\" for this, but transports are not required to","\t * emit that event.  They should emit one of these two.  We listen for","\t * \"end\" on the message decoder rather than the transport to deal with","\t * the fact that there may be queueing of data in between them.","\t */","\tthis.fc_msgdecoder.on('end', function onTransportEnd() {","\t\tvar err;","","\t\tself.fc_transport_ended = true;","","\t\t/*","\t\t * There's no problem with seeing end-of-stream as long as we","\t\t * have no requests pending and are not asked to make any more","\t\t * requests.  Remember, the caller is separately responsible for","\t\t * detecting this case for the purpose of reconnection, if","\t\t * desired.","\t\t */","\t\tif (self.fc_nrpc_started > self.fc_nrpc_done) {","\t\t\terr = new VError({","\t\t\t    'name': 'FastProtocolError'","\t\t\t}, 'unexpected end of transport stream');","\t\t\tself.fatalError(err);","\t\t}","\t});","","\tthis.fc_transport_onerr = function onTransportError(err) {","\t\tself.fatalError(new VError({","\t\t    'name': 'FastTransportError',","\t\t    'cause': err","\t\t}, 'unexpected error on transport'));","\t};","","\tthis.fc_transport.on('error', this.fc_transport_onerr);","};","","/*"," * Return the next message id."," */","FastClient.prototype.allocMessageId = function ()","{","\treturn (this.fc_rqidalloc.alloc());","};","","/*"," * Record an error that's fatal to this client.  We emit the first one and"," * abandon all outstanding requests.  If we see more than one, we simply log and"," * count subsequent ones."," */","FastClient.prototype.fatalError = function (err)","{","\tthis.fc_log.warn(err);","\tthis.fc_nerrors++;","","\tif (this.fc_error !== null) {","\t\treturn;","\t}","","\tthis.fc_error = err;","\tthis.emit('error', err);","\tthis.requestAbandonAll(err);","};","","/*"," * Abandon all pending requests, as with requestAbandon(request, error)."," */","FastClient.prototype.requestAbandonAll = function (error)","{","\tvar msgid;","","\tfor (msgid in this.fc_pending) {","\t\tmod_assertplus.ok(","\t\t    this.requestIsPending(this.fc_pending[msgid]));","\t\tthis.requestAbandon(this.fc_pending[msgid], error);","\t\tmod_assertplus.ok(!this.fc_pending.hasOwnProperty(msgid));","\t}","};","","/*"," * Abandon the given request with an error indicating the request was abandoned."," * If \"error\" is provided, then the given error will be provided as the cause of"," * the abandon error.  If the request has already completed in any way"," * (including having been previously abandoned), this will do nothing."," */","FastClient.prototype.requestAbandon = function (request, error)","{","\tvar msgid;","","\tif (!this.requestIsPending(request)) {","\t\treturn;","\t}","","\tmod_assertplus.object(error, 'error');","","\tmsgid = request.frq_msgid;","\tmod_assertplus.ok(this.fc_pending[msgid] == request);","\trequest.frq_abandoned = true;","","\t/*","\t * The history of cancellation in node-fast is somewhat complicated.","\t * Early versions did not support cancellation of in-flight requests.","\t * Cancellation was added, but old servers would interpret the","\t * cancellation message as a new request for the same RPC, which is","\t * extremely dangerous.  (Usually, the arguments would be invalid, but","\t * that's only the best-case outcome.)  We could try to avoid this by","\t * avoiding specifying the RPC method name in the cancellation request.","\t * Since the protocol was never well-documented, the correctness of this","\t * approach is mainly determined by what other servers do with it.","\t * Unfortunately, old servers are likely to handle it as an RPC method","\t * of some kind, which triggers an unrelated bug: if old servers","\t * received a request for a method that's not registered, they just","\t * hang on it, resulting in a resource leak.","\t *","\t * Things are a little better on more modern versions of the fast","\t * server, where if you send a cancellation request and the RPC is not","\t * yet complete when the server processes it, then the server may stop","\t * processing the RPC and send back an acknowledgment of sorts.","\t * However, that doesn't mean the request did not complete, since the","\t * implementation may not have responded to the cancellation.  And more","\t * seriously, if the RPC isn't running, the server won't send back","\t * anything, so we don't know whether we need to expect something or","\t * not.","\t *","\t * To summarize: if we were to send a cancellation request, we would not","\t * know whether to expect a response, and it's possible that we would","\t * inadvertently invoke the same RPC again (which could be very","\t * destructive) or leak resources in the remote server.  For now, we","\t * punt and declare that request abandonment is purely a client-side","\t * convenience that directs the client to stop doing anything with","\t * messages for this request.  We won't actually ask the server to stop","\t * doing anything.","\t */","\tthis.fc_abandoned[request.frq_msgid] = request;","\tthis.requestFail(request, error);","};","","/*"," * Mark the given request as completed with the specified error."," */","FastClient.prototype.requestFail = function (request, error)","{","\tmod_assertplus.ok(request.frq_error === null);","\tmod_assertplus.object(error);","","\trequest.frq_error = new VError({","\t    'name': 'FastRequestError',","\t    'cause': error,","\t    'info': {","\t\t'rpcMsgid': request.frq_msgid,","\t\t'rpcMethod': request.frq_rpcmethod","\t    }","\t}, 'request failed');","","\tthis.requestComplete(request);","","\t/*","\t * We may be called in the context of a user action (e.g., if they","\t * issued a request while the transport was disconnected, or if they're","\t * abandoning a request).  Defer the 'error' event so they don't have to","\t * deal with it being emitted synchronously during the execution of that","\t * action.","\t */","\tsetImmediate(function () {","\t\trequest.emit('error', request.frq_error);","\t});","};","","/*"," * Mark the given request as completed."," */","FastClient.prototype.requestComplete = function (request)","{","\tvar msgid;","\tvar self = this;","","\tif (request.frq_timeout !== null) {","\t\tclearTimeout(request.frq_timeout);","\t\trequest.frq_timeout = null;","\t}","","\tthis.fc_dtp.fire('rpc-done', function () {","\t\tvar result, err;","","\t\tresult = {};","\t\tif (request.frq_error !== null) {","\t\t\terr = VError.cause(request.frq_error);","\t\t\tresult['error'] = {","\t\t\t    'name': err ? err.name : '?',","\t\t\t    'message': err ? err.message : '?'","\t\t\t};","\t\t}","","\t\treturn ([","\t\t    self.fc_dtid,","\t\t    request.frq_msgid,","\t\t    result","\t\t]);","\t});","","\tif (request.frq_error !== null) {","\t\trequest.frq_log.debug(request.frq_error, 'rpc %s: failed',","\t\t    request.frq_rpcmethod);","\t} else {","\t\trequest.frq_log.debug('rpc %s: done', request.frq_rpcmethod);","\t}","","\tmsgid = request.frq_msgid;","\tmod_assertplus.ok(!this.requestIsPending(request));","\tmod_assertplus.ok(this.fc_pending[msgid] == request);","\tdelete (this.fc_pending[msgid]);","\tthis.fc_nrpc_done++;","","\tthis.fc_recentrpc.push(request);","\tif (this.fc_recentrpc.length > this.fc_nrecent) {","\t\tthis.fc_recentrpc.shift();","\t}","};","","FastClient.prototype.onMessage = function (message)","{","\tvar request, abandoned, cause;","","\tthis.fc_log.trace(message, 'incoming message');","","\tmod_assertplus.number(message.msgid,","\t    'decoder provided message with no msgid');","\tif (this.fc_pending.hasOwnProperty(message.msgid)) {","\t\trequest = this.fc_pending[message.msgid];","\t\tmod_assertplus.ok(!request.frq_abandoned);","\t\tabandoned = false;","\t} else if (this.fc_abandoned.hasOwnProperty(message.msgid)) {","\t\trequest = this.fc_abandoned[message.msgid];","\t\tmod_assertplus.ok(request.frq_abandoned);","\t\tabandoned = true;","\t} else {","\t\tthis.fatalError(new VError({","\t\t    'name': 'FastProtocolError',","\t\t    'info': {","\t\t\t'fastReason': 'unknown_msgid',","\t\t\t'fastMsgid': message.msgid","\t\t    }","\t\t}, 'fast protocol: received message with unknown msgid %d',","\t\t    message.msgid));","\t\treturn;","\t}","","\tmod_assertplus.ok(!request.frq_done_graceful);","\trequest.frq_last = message;","","\t/*","\t * \"end\" messages are always meaningful because they allow us to clean","\t * up both normal and abandoned requests.","\t */","\tif (message.status == mod_protocol.FP_STATUS_END) {","\t\tif (abandoned) {","\t\t\trequest.frq_log.debug('cleaning up abandoned request');","\t\t\tdelete (this.fc_abandoned[request.frq_msgid]);","\t\t} else {","\t\t\t/*","\t\t\t * Although seldom used, it's technically allowed for","\t\t\t * END messages to contain data.","\t\t\t */","\t\t\tif (this.requestEmitData(request, message)) {","\t\t\t\trequest.frq_done_graceful = true;","\t\t\t\tthis.requestComplete(request);","\t\t\t\trequest.end();","\t\t\t}","\t\t}","","\t\treturn;","\t}","","\t/*","\t * If the request was abandoned, then ignore all other messages.","\t */","\tif (abandoned) {","\t\trequest.frq_log.trace(","\t\t    'ignoring incoming message (request abandoned)');","\t\trequest.frq_nignored++;","\t\treturn;","\t}","","\t/*","\t * The only reasons we can have an error are because we never sent the","\t * request out at all (which can never result in us getting here), we","\t * abandoned the request (which we handled above), or the server already","\t * sent us an error (in which case we also shouldn't be able to get","\t * here).","\t */","\tmod_assertplus.ok(request.frq_error === null);","","\tif (message.status == mod_protocol.FP_STATUS_DATA) {","\t\trequest.frq_ndata++;","\t\tthis.requestEmitData(request, message);","\t\treturn;","\t}","","\tmod_assertplus.equal(message.status, mod_protocol.FP_STATUS_ERROR,","\t    'decoder emitted message with invalid status');","\tcause = new VError({","\t    'name': message.data.d.name,","\t    'info': message.data.d.info","\t}, '%s', message.data.d.message);","\tif (message.data.d.stack) {","\t\tcause.stack = message.data.d.stack;","\t}","","\t/*","\t * \"context\" and \"ase_errors\" are reconstituted for historical reasons.","\t * There's a similar note in lib/fast_server.js.","\t */","\tcause.context = message.data.d.context;","\tcause.ase_errors = message.data.d.ase_errors;","","\trequest.frq_done_graceful = true;","\tthis.requestFail(request, new VError({","\t    'name': 'FastServerError',","\t    'cause': cause","\t}, 'server error'));","};","","/*"," * Emits data contained in \"message\".  Returns true if there was no problem"," * processing this data.  If there was an issue, then the request will be"," * abandoned."," */","FastClient.prototype.requestEmitData = function (request, message)","{","\tvar i, d;","\tvar self = this;","","\tmod_assertplus.ok(this.requestIsPending(request));","","\tfor (i = 0; i < message.data.d.length; i++) {","\t\td = message.data.d[i];","\t\tif (d === null) {","\t\t\tif (request.frq_ignorenull) {","\t\t\t\trequest.frq_nignored_null++;","\t\t\t\tcontinue;","\t\t\t}","","\t\t\tthis.requestAbandon(request, new VError({","\t\t\t    'name': 'FastProtocolError',","\t\t\t    'info': {","\t\t\t\t'rpcMsgid': request.frq_msgid,","\t\t\t\t'rpcMethod': request.frq_rpcmethod,","\t\t\t        'rpcMessage': message","\t\t\t    }","\t\t\t}, 'server sent \"null\" value'));","\t\t\treturn (false);","\t\t} else {","\t\t\tthis.fc_dtp.fire('rpc-data', function () {","\t\t\t    return ([","\t\t\t\tself.fc_dtid,","\t\t\t\trequest.frq_msgid,","\t\t\t\td","\t\t\t    ]);","\t\t\t});","","\t\t\trequest.push(d);","\t\t}","\t}","","\treturn (true);","};","","FastClient.prototype.requestIsPending = function (request)","{","\tmod_assertplus.object(request, 'request');","\tmod_assertplus.ok(request instanceof","\t    mod_client_request.FastClientRequest,","\t    'request is not a FastClientRequest');","\treturn (!request.frq_done_graceful && request.frq_error === null);","};","","","/*"," * Initialize the DTrace provider for the Fast client."," */","function fastClientProviderInit()","{","\tvar dtp;","","\tdtp = mod_dtrace.createDTraceProvider('fastclient');","","\t/*","\t * The rpc-start probe provides arguments:","\t *","\t *     arg0   int\tUnique identifier for this client in this","\t *     \t\t\tprocess.","\t *     arg1   int       Message identifier (request identifier).","\t *     \t\t\tThis is only unique among active requests for a","\t *     \t\t\tsingle client.  See arg2 for a unique","\t *     \t\t\tidentifier.","\t *     arg2   string    RPC method name","\t *     arg3   string    JSON object with properties for \"rpcargs\" and","\t *     \t\t\t\"timeout\" (optionally).  Additional properties","\t *     \t\t\tmay be added here in the future.","\t */","\tdtp.addProbe('rpc-start', 'int', 'int', 'char *', 'json');","","\t/*","\t * The rpc-data probe provides arguments:","\t *","\t *     arg0   int       Same as for rpc-start.","\t *     arg1   int       Same as for rpc-start.","\t *     arg2   string    JSON object describing received data.","\t */","\tdtp.addProbe('rpc-data', 'int', 'int', 'json');","","\t/*","\t * The rpc-done probe provides arguments:","\t *","\t *     arg0   int       Same as for rpc-start.","\t *     arg1   int       Same as for rpc-start.","\t *     arg2   string    JSON object with properties for \"error\".","\t *     \t\t\tAdditional properties may be added here in the","\t *     \t\t\tfuture.","\t */","\tdtp.addProbe('rpc-done', 'int', 'int', 'json');","\tdtp.enable();","","\treturn (dtp);","}",""],"l":{"15":6,"16":6,"17":6,"18":6,"19":0,"20":0,"22":0,"23":0,"24":0,"26":0,"31":0,"39":0,"67":1,"69":0,"71":0,"72":0,"73":0,"74":0,"76":0,"77":0,"78":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"92":0,"98":0,"99":0,"100":0,"103":0,"104":0,"106":0,"107":0,"110":0,"111":0,"112":0,"114":0,"115":0,"118":0,"156":0,"158":0,"159":0,"160":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"170":0,"171":0,"172":0,"175":0,"176":0,"177":0,"178":0,"191":0,"192":0,"194":0,"196":0,"197":0,"198":0,"201":0,"204":0,"216":0,"221":0,"222":0,"233":0,"234":0,"236":0,"237":0,"238":0,"247":0,"278":0,"280":0,"282":0,"283":0,"284":0,"286":0,"287":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"317":0,"324":0,"326":0,"327":0,"330":0,"331":0,"332":0,"333":0,"335":0,"356":0,"358":0,"361":0,"363":0,"364":0,"367":0,"368":0,"372":0,"374":0,"376":0,"377":0,"378":0,"387":0,"390":0,"391":0,"392":0,"393":0,"395":0,"396":0,"398":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"408":0,"409":0,"416":0,"418":0,"420":0,"421":0,"430":0,"431":0,"432":0,"433":0,"444":0,"445":0,"447":0,"456":0,"457":0,"460":0,"464":0,"465":0,"471":0,"477":0,"479":0,"487":0,"489":0,"490":0,"492":0,"493":0,"496":0,"497":0,"498":0,"504":0,"506":0,"508":0,"509":0,"511":0,"512":0,"522":0,"524":0,"526":0,"527":0,"530":0,"532":0,"533":0,"534":0,"570":0,"571":0,"577":0,"579":0,"580":0,"582":0,"591":0,"600":0,"601":0,"608":0,"610":0,"611":0,"613":0,"614":0,"615":0,"618":0,"619":0,"621":0,"622":0,"623":0,"624":0,"630":0,"637":0,"638":0,"641":0,"644":0,"645":0,"646":0,"647":0,"648":0,"650":0,"651":0,"652":0,"656":0,"658":0,"660":0,"662":0,"664":0,"665":0,"666":0,"667":0,"668":0,"669":0,"670":0,"671":0,"673":0,"681":0,"684":0,"685":0,"691":0,"692":0,"693":0,"694":0,"700":0,"701":0,"702":0,"703":0,"707":0,"713":0,"714":0,"716":0,"717":0,"727":0,"729":0,"730":0,"731":0,"732":0,"735":0,"737":0,"741":0,"742":0,"749":0,"750":0,"752":0,"753":0,"764":0,"766":0,"767":0,"769":0,"771":0,"772":0,"773":0,"774":0,"775":0,"776":0,"779":0,"787":0,"789":0,"790":0,"797":0,"801":0,"804":0,"806":0,"807":0,"810":0,"817":1,"819":0,"821":0,"837":0,"846":0,"857":0,"858":0,"860":0}},"/home/travis/build/npmtest/node-npmtest-fast/node_modules/fast/lib/bench.js":{"path":"/home/travis/build/npmtest/node-npmtest-fast/node_modules/fast/lib/bench.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":1,"8":1,"9":0,"10":1,"11":0,"12":1,"13":1,"14":0,"15":1,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"fastBenchWorkloads","line":34,"loc":{"start":{"line":34,"column":0},"end":{"line":35,"column":0}}},"2":{"name":"FastWorkloadSync","line":39,"loc":{"start":{"line":39,"column":0},"end":{"line":39,"column":28}}},"3":{"name":"(anonymous_3)","line":40,"loc":{"start":{"line":40,"column":34},"end":{"line":40,"column":46}}},"4":{"name":"(anonymous_4)","line":41,"loc":{"start":{"line":41,"column":41},"end":{"line":42,"column":0}}},"5":{"name":"FastWorkloadSleep150","line":49,"loc":{"start":{"line":49,"column":0},"end":{"line":49,"column":32}}},"6":{"name":"(anonymous_6)","line":50,"loc":{"start":{"line":50,"column":38},"end":{"line":50,"column":50}}},"7":{"name":"(anonymous_7)","line":51,"loc":{"start":{"line":51,"column":45},"end":{"line":52,"column":0}}},"8":{"name":"fastWorkloadRequest","line":59,"loc":{"start":{"line":59,"column":0},"end":{"line":60,"column":0}}},"9":{"name":"(anonymous_9)","line":83,"loc":{"start":{"line":83,"column":16},"end":{"line":83,"column":29}}},"10":{"name":"(anonymous_10)","line":89,"loc":{"start":{"line":89,"column":15},"end":{"line":89,"column":28}}},"11":{"name":"(anonymous_11)","line":97,"loc":{"start":{"line":97,"column":17},"end":{"line":97,"column":32}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":44}},"2":{"start":{"line":16,"column":0},"end":{"line":16,"column":31}},"3":{"start":{"line":18,"column":0},"end":{"line":18,"column":48}},"4":{"start":{"line":20,"column":0},"end":{"line":32,"column":2}},"5":{"start":{"line":34,"column":0},"end":{"line":37,"column":1}},"6":{"start":{"line":36,"column":1},"end":{"line":36,"column":29}},"7":{"start":{"line":39,"column":0},"end":{"line":39,"column":30}},"8":{"start":{"line":40,"column":0},"end":{"line":40,"column":67}},"9":{"start":{"line":40,"column":48},"end":{"line":40,"column":64}},"10":{"start":{"line":41,"column":0},"end":{"line":47,"column":2}},"11":{"start":{"line":43,"column":1},"end":{"line":46,"column":15}},"12":{"start":{"line":49,"column":0},"end":{"line":49,"column":34}},"13":{"start":{"line":50,"column":0},"end":{"line":50,"column":75}},"14":{"start":{"line":50,"column":52},"end":{"line":50,"column":72}},"15":{"start":{"line":51,"column":0},"end":{"line":57,"column":2}},"16":{"start":{"line":53,"column":1},"end":{"line":56,"column":15}},"17":{"start":{"line":59,"column":0},"end":{"line":100,"column":1}},"18":{"start":{"line":61,"column":1},"end":{"line":61,"column":37}},"19":{"start":{"line":63,"column":1},"end":{"line":63,"column":30}},"20":{"start":{"line":64,"column":1},"end":{"line":74,"column":3}},"21":{"start":{"line":76,"column":1},"end":{"line":78,"column":2}},"22":{"start":{"line":77,"column":2},"end":{"line":77,"column":43}},"23":{"start":{"line":80,"column":1},"end":{"line":80,"column":31}},"24":{"start":{"line":82,"column":1},"end":{"line":82,"column":11}},"25":{"start":{"line":83,"column":1},"end":{"line":87,"column":4}},"26":{"start":{"line":84,"column":2},"end":{"line":85,"column":53}},"27":{"start":{"line":86,"column":2},"end":{"line":86,"column":10}},"28":{"start":{"line":89,"column":1},"end":{"line":95,"column":4}},"29":{"start":{"line":90,"column":2},"end":{"line":94,"column":3}},"30":{"start":{"line":91,"column":3},"end":{"line":91,"column":54}},"31":{"start":{"line":93,"column":3},"end":{"line":93,"column":14}},"32":{"start":{"line":97,"column":1},"end":{"line":99,"column":4}},"33":{"start":{"line":98,"column":2},"end":{"line":98,"column":55}}},"branchMap":{"1":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":1},"end":{"line":76,"column":1}},{"start":{"line":76,"column":1},"end":{"line":76,"column":1}}]},"2":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":2},"end":{"line":90,"column":2}},{"start":{"line":90,"column":2},"end":{"line":90,"column":2}}]}},"code":["/*"," * This Source Code Form is subject to the terms of the Mozilla Public"," * License, v. 2.0. If a copy of the MPL was not distributed with this"," * file, You can obtain one at http://mozilla.org/MPL/2.0/."," */","","/*"," * Copyright (c) 2016, Joyent, Inc."," */","","/*"," * lib/bench.js: common facilities for basic benchmarking"," */","","var mod_assertplus = require('assert-plus');","var VError = require('verror');","","exports.fastBenchWorkloads = fastBenchWorkloads;","","var FastBenchWorkloads = {","    'sync': {","\t'name': 'sync',","\t'description': 'uniform, moderate-sized, synchronous requests',","\t'cons': FastWorkloadSync","    },","","    'sleep150': {","\t'name': 'sleep150',","\t'description': 'uniform, moderate-sized requests with 150ms sleep',","\t'cons': FastWorkloadSleep150","    }","};","","function fastBenchWorkloads()","{","\treturn (FastBenchWorkloads);","}","","function FastWorkloadSync() {}","FastWorkloadSync.prototype.name = function () { return ('sync'); };","FastWorkloadSync.prototype.nextRequest = function (fastclient, callback)","{","\treturn (fastWorkloadRequest({","\t    'fastClient': fastclient,","\t    'delay': null","\t}, callback));","};","","function FastWorkloadSleep150() {}","FastWorkloadSleep150.prototype.name = function () { return ('sleep150'); };","FastWorkloadSleep150.prototype.nextRequest = function (fastclient, callback)","{","\treturn (fastWorkloadRequest({","\t    'fastClient': fastclient,","\t    'delay': 150","\t}, callback));","};","","function fastWorkloadRequest(args, callback)","{","\tvar fastclient, rpcargs, req, ndata;","","\tfastclient = args.fastClient;","\trpcargs = {","\t    'rpcmethod': 'fastbench',","\t    'rpcargs': [ {","\t\t'echo': [","\t\t    [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 ],","\t\t    [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 ],","\t\t    [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 ],","\t\t    [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 ]","\t\t]","\t    } ]","\t};","","\tif (args.delay !== null) {","\t\trpcargs.rpcargs[0]['delay'] = args.delay;","\t}","","\treq = fastclient.rpc(rpcargs);","","\tndata = 0;","\treq.on('data', function (d) {","\t\tmod_assertplus.deepEqual(d,","\t\t    { 'value': [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 ] });","\t\tndata++;","\t});","","\treq.on('end', function (e) {","\t\tif (ndata != 4) {","\t\t\tcallback(new Error('unexpected data in response'));","\t\t} else {","\t\t\tcallback();","\t\t}","\t});","","\treq.on('error', function (err) {","\t\tcallback(new VError(err, 'unexpected server error'));","\t});","}",""],"l":{"15":1,"16":1,"18":1,"20":1,"34":1,"36":0,"39":1,"40":1,"41":1,"43":0,"49":1,"50":1,"51":1,"53":0,"59":1,"61":0,"63":0,"64":0,"76":0,"77":0,"80":0,"82":0,"83":0,"84":0,"86":0,"89":0,"90":0,"91":0,"93":0,"97":0,"98":0}},"/home/travis/build/npmtest/node-npmtest-fast/node_modules/fast/lib/demo_server.js":{"path":"/home/travis/build/npmtest/node-npmtest-fast/node_modules/fast/lib/demo_server.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1,"50":0,"51":0,"52":0,"53":1,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":1,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"fnMap":{"1":{"name":"demoRpcs","line":34,"loc":{"start":{"line":34,"column":0},"end":{"line":35,"column":0}}},"2":{"name":"fastRpcDate","line":39,"loc":{"start":{"line":39,"column":0},"end":{"line":40,"column":0}}},"3":{"name":"fastRpcEcho","line":54,"loc":{"start":{"line":54,"column":0},"end":{"line":55,"column":0}}},"4":{"name":"(anonymous_4)","line":56,"loc":{"start":{"line":56,"column":20},"end":{"line":56,"column":33}}},"5":{"name":"fastRpcFail","line":60,"loc":{"start":{"line":60,"column":0},"end":{"line":61,"column":0}}},"6":{"name":"(anonymous_6)","line":78,"loc":{"start":{"line":78,"column":23},"end":{"line":78,"column":36}}},"7":{"name":"(anonymous_7)","line":90,"loc":{"start":{"line":90,"column":14},"end":{"line":90,"column":26}}},"8":{"name":"fastRpcFastbench","line":93,"loc":{"start":{"line":93,"column":0},"end":{"line":94,"column":0}}},"9":{"name":"fastRpcFastbenchFinish","line":118,"loc":{"start":{"line":118,"column":0},"end":{"line":119,"column":0}}},"10":{"name":"(anonymous_10)","line":120,"loc":{"start":{"line":120,"column":16},"end":{"line":120,"column":29}}},"11":{"name":"fastRpcSleep","line":124,"loc":{"start":{"line":124,"column":0},"end":{"line":125,"column":0}}},"12":{"name":"(anonymous_12)","line":141,"loc":{"start":{"line":141,"column":12},"end":{"line":141,"column":24}}},"13":{"name":"fastRpcWords","line":144,"loc":{"start":{"line":144,"column":0},"end":{"line":145,"column":0}}},"14":{"name":"(anonymous_14)","line":161,"loc":{"start":{"line":161,"column":20},"end":{"line":161,"column":46}}},"15":{"name":"(anonymous_15)","line":167,"loc":{"start":{"line":167,"column":24},"end":{"line":167,"column":39}}},"16":{"name":"fastRpcYes","line":172,"loc":{"start":{"line":172,"column":0},"end":{"line":173,"column":0}}}},"statementMap":{"1":{"start":{"line":16,"column":0},"end":{"line":16,"column":27}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":37}},"3":{"start":{"line":18,"column":0},"end":{"line":18,"column":35}},"4":{"start":{"line":20,"column":0},"end":{"line":20,"column":31}},"5":{"start":{"line":22,"column":0},"end":{"line":22,"column":28}},"6":{"start":{"line":24,"column":0},"end":{"line":32,"column":2}},"7":{"start":{"line":34,"column":0},"end":{"line":37,"column":1}},"8":{"start":{"line":36,"column":1},"end":{"line":36,"column":18}},"9":{"start":{"line":39,"column":0},"end":{"line":52,"column":1}},"10":{"start":{"line":41,"column":1},"end":{"line":41,"column":10}},"11":{"start":{"line":43,"column":1},"end":{"line":51,"column":2}},"12":{"start":{"line":44,"column":2},"end":{"line":44,"column":47}},"13":{"start":{"line":46,"column":2},"end":{"line":46,"column":20}},"14":{"start":{"line":47,"column":2},"end":{"line":50,"column":5}},"15":{"start":{"line":54,"column":0},"end":{"line":58,"column":1}},"16":{"start":{"line":56,"column":1},"end":{"line":56,"column":65}},"17":{"start":{"line":56,"column":35},"end":{"line":56,"column":61}},"18":{"start":{"line":57,"column":1},"end":{"line":57,"column":11}},"19":{"start":{"line":60,"column":0},"end":{"line":91,"column":1}},"20":{"start":{"line":62,"column":1},"end":{"line":62,"column":17}},"21":{"start":{"line":64,"column":1},"end":{"line":67,"column":2}},"22":{"start":{"line":65,"column":2},"end":{"line":65,"column":43}},"23":{"start":{"line":66,"column":2},"end":{"line":66,"column":9}},"24":{"start":{"line":69,"column":1},"end":{"line":69,"column":25}},"25":{"start":{"line":70,"column":1},"end":{"line":75,"column":2}},"26":{"start":{"line":73,"column":2},"end":{"line":73,"column":39}},"27":{"start":{"line":74,"column":2},"end":{"line":74,"column":9}},"28":{"start":{"line":77,"column":1},"end":{"line":81,"column":2}},"29":{"start":{"line":78,"column":2},"end":{"line":80,"column":5}},"30":{"start":{"line":79,"column":3},"end":{"line":79,"column":29}},"31":{"start":{"line":83,"column":1},"end":{"line":86,"column":27}},"32":{"start":{"line":87,"column":1},"end":{"line":88,"column":31}},"33":{"start":{"line":88,"column":2},"end":{"line":88,"column":31}},"34":{"start":{"line":90,"column":1},"end":{"line":90,"column":45}},"35":{"start":{"line":90,"column":28},"end":{"line":90,"column":41}},"36":{"start":{"line":93,"column":0},"end":{"line":116,"column":1}},"37":{"start":{"line":95,"column":1},"end":{"line":95,"column":16}},"38":{"start":{"line":97,"column":1},"end":{"line":97,"column":19}},"39":{"start":{"line":98,"column":1},"end":{"line":102,"column":2}},"40":{"start":{"line":100,"column":2},"end":{"line":100,"column":62}},"41":{"start":{"line":101,"column":2},"end":{"line":101,"column":9}},"42":{"start":{"line":104,"column":1},"end":{"line":104,"column":16}},"43":{"start":{"line":105,"column":1},"end":{"line":108,"column":2}},"44":{"start":{"line":106,"column":2},"end":{"line":106,"column":43}},"45":{"start":{"line":107,"column":2},"end":{"line":107,"column":9}},"46":{"start":{"line":110,"column":1},"end":{"line":115,"column":2}},"47":{"start":{"line":111,"column":2},"end":{"line":112,"column":20}},"48":{"start":{"line":114,"column":2},"end":{"line":114,"column":44}},"49":{"start":{"line":118,"column":0},"end":{"line":122,"column":1}},"50":{"start":{"line":120,"column":1},"end":{"line":120,"column":61}},"51":{"start":{"line":120,"column":31},"end":{"line":120,"column":57}},"52":{"start":{"line":121,"column":1},"end":{"line":121,"column":11}},"53":{"start":{"line":124,"column":0},"end":{"line":142,"column":1}},"54":{"start":{"line":126,"column":1},"end":{"line":126,"column":29}},"55":{"start":{"line":128,"column":1},"end":{"line":128,"column":19}},"56":{"start":{"line":129,"column":1},"end":{"line":132,"column":2}},"57":{"start":{"line":130,"column":2},"end":{"line":130,"column":47}},"58":{"start":{"line":131,"column":2},"end":{"line":131,"column":9}},"59":{"start":{"line":134,"column":1},"end":{"line":134,"column":21}},"60":{"start":{"line":135,"column":1},"end":{"line":135,"column":28}},"61":{"start":{"line":136,"column":1},"end":{"line":139,"column":2}},"62":{"start":{"line":137,"column":2},"end":{"line":137,"column":44}},"63":{"start":{"line":138,"column":2},"end":{"line":138,"column":9}},"64":{"start":{"line":141,"column":1},"end":{"line":141,"column":48}},"65":{"start":{"line":141,"column":26},"end":{"line":141,"column":36}},"66":{"start":{"line":144,"column":0},"end":{"line":170,"column":1}},"67":{"start":{"line":146,"column":1},"end":{"line":146,"column":42}},"68":{"start":{"line":148,"column":1},"end":{"line":151,"column":2}},"69":{"start":{"line":149,"column":2},"end":{"line":149,"column":46}},"70":{"start":{"line":150,"column":2},"end":{"line":150,"column":9}},"71":{"start":{"line":153,"column":1},"end":{"line":153,"column":30}},"72":{"start":{"line":154,"column":1},"end":{"line":154,"column":48}},"73":{"start":{"line":155,"column":1},"end":{"line":155,"column":29}},"74":{"start":{"line":156,"column":1},"end":{"line":156,"column":26}},"75":{"start":{"line":157,"column":1},"end":{"line":160,"column":4}},"76":{"start":{"line":161,"column":1},"end":{"line":164,"column":3}},"77":{"start":{"line":162,"column":2},"end":{"line":162,"column":27}},"78":{"start":{"line":163,"column":2},"end":{"line":163,"column":25}},"79":{"start":{"line":165,"column":1},"end":{"line":165,"column":21}},"80":{"start":{"line":166,"column":1},"end":{"line":166,"column":17}},"81":{"start":{"line":167,"column":1},"end":{"line":169,"column":4}},"82":{"start":{"line":168,"column":2},"end":{"line":168,"column":56}},"83":{"start":{"line":172,"column":0},"end":{"line":200,"column":1}},"84":{"start":{"line":174,"column":1},"end":{"line":174,"column":27}},"85":{"start":{"line":176,"column":1},"end":{"line":176,"column":19}},"86":{"start":{"line":177,"column":1},"end":{"line":180,"column":2}},"87":{"start":{"line":178,"column":2},"end":{"line":178,"column":47}},"88":{"start":{"line":179,"column":2},"end":{"line":179,"column":9}},"89":{"start":{"line":182,"column":1},"end":{"line":182,"column":23}},"90":{"start":{"line":183,"column":1},"end":{"line":183,"column":23}},"91":{"start":{"line":184,"column":1},"end":{"line":193,"column":2}},"92":{"start":{"line":185,"column":2},"end":{"line":191,"column":55}},"93":{"start":{"line":192,"column":2},"end":{"line":192,"column":9}},"94":{"start":{"line":195,"column":1},"end":{"line":197,"column":2}},"95":{"start":{"line":196,"column":2},"end":{"line":196,"column":32}},"96":{"start":{"line":199,"column":1},"end":{"line":199,"column":11}}},"branchMap":{"1":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":1},"end":{"line":43,"column":1}},{"start":{"line":43,"column":1},"end":{"line":43,"column":1}}]},"2":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":1},"end":{"line":64,"column":1}},{"start":{"line":64,"column":1},"end":{"line":64,"column":1}}]},"3":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":1},"end":{"line":70,"column":1}},{"start":{"line":70,"column":1},"end":{"line":70,"column":1}}]},"4":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":5},"end":{"line":70,"column":38}},{"start":{"line":71,"column":5},"end":{"line":71,"column":41}},{"start":{"line":72,"column":6},"end":{"line":72,"column":32}},{"start":{"line":72,"column":36},"end":{"line":72,"column":69}}]},"5":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":1},"end":{"line":77,"column":1}},{"start":{"line":77,"column":1},"end":{"line":77,"column":1}}]},"6":{"line":77,"type":"binary-expr","locations":[{"start":{"line":77,"column":5},"end":{"line":77,"column":17}},{"start":{"line":77,"column":21},"end":{"line":77,"column":48}}]},"7":{"line":85,"type":"binary-expr","locations":[{"start":{"line":85,"column":13},"end":{"line":85,"column":25}},{"start":{"line":85,"column":29},"end":{"line":85,"column":31}}]},"8":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":1},"end":{"line":87,"column":1}},{"start":{"line":87,"column":1},"end":{"line":87,"column":1}}]},"9":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":1},"end":{"line":98,"column":1}},{"start":{"line":98,"column":1},"end":{"line":98,"column":1}}]},"10":{"line":98,"type":"binary-expr","locations":[{"start":{"line":98,"column":5},"end":{"line":98,"column":21}},{"start":{"line":98,"column":25},"end":{"line":98,"column":53}},{"start":{"line":99,"column":5},"end":{"line":99,"column":21}}]},"11":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":1},"end":{"line":105,"column":1}},{"start":{"line":105,"column":1},"end":{"line":105,"column":1}}]},"12":{"line":105,"type":"binary-expr","locations":[{"start":{"line":105,"column":5},"end":{"line":105,"column":33}},{"start":{"line":105,"column":37},"end":{"line":105,"column":65}}]},"13":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":1},"end":{"line":110,"column":1}},{"start":{"line":110,"column":1},"end":{"line":110,"column":1}}]},"14":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":1},"end":{"line":129,"column":1}},{"start":{"line":129,"column":1},"end":{"line":129,"column":1}}]},"15":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":1},"end":{"line":136,"column":1}},{"start":{"line":136,"column":1},"end":{"line":136,"column":1}}]},"16":{"line":136,"type":"binary-expr","locations":[{"start":{"line":136,"column":5},"end":{"line":136,"column":32}},{"start":{"line":136,"column":36},"end":{"line":136,"column":46}},{"start":{"line":136,"column":50},"end":{"line":136,"column":68}}]},"17":{"line":148,"type":"if","locations":[{"start":{"line":148,"column":1},"end":{"line":148,"column":1}},{"start":{"line":148,"column":1},"end":{"line":148,"column":1}}]},"18":{"line":177,"type":"if","locations":[{"start":{"line":177,"column":1},"end":{"line":177,"column":1}},{"start":{"line":177,"column":1},"end":{"line":177,"column":1}}]},"19":{"line":184,"type":"if","locations":[{"start":{"line":184,"column":1},"end":{"line":184,"column":1}},{"start":{"line":184,"column":1},"end":{"line":184,"column":1}}]},"20":{"line":184,"type":"binary-expr","locations":[{"start":{"line":184,"column":5},"end":{"line":184,"column":31}},{"start":{"line":184,"column":35},"end":{"line":184,"column":44}},{"start":{"line":184,"column":48},"end":{"line":184,"column":62}}]}},"code":["/*"," * This Source Code Form is subject to the terms of the Mozilla Public"," * License, v. 2.0. If a copy of the MPL was not distributed with this"," * file, You can obtain one at http://mozilla.org/MPL/2.0/."," */","","/*"," * Copyright (c) 2016, Joyent, Inc."," */","","/*"," * lib/demo_server.js: implementations of some RPC functions useful in both the"," * demo server and test suite."," */","","var mod_fs = require('fs');","var mod_lstream = require('lstream');","var mod_stream = require('stream');","","var VError = require('verror');","","exports.demoRpcs = demoRpcs;","","var demoRpc = [","    { 'rpcmethod': 'date',\t'rpchandler': fastRpcDate      },","    { 'rpcmethod': 'echo',\t'rpchandler': fastRpcEcho      },","    { 'rpcmethod': 'fail',\t'rpchandler': fastRpcFail      },","    { 'rpcmethod': 'fastbench',\t'rpchandler': fastRpcFastbench },","    { 'rpcmethod': 'sleep',\t'rpchandler': fastRpcSleep     },","    { 'rpcmethod': 'words',\t'rpchandler': fastRpcWords     },","    { 'rpcmethod': 'yes',\t'rpchandler': fastRpcYes       }","];","","function demoRpcs()","{","\treturn (demoRpc);","}","","function fastRpcDate(rpc)","{","\tvar when;","","\tif (rpc.argv().length !== 0) {","\t\trpc.fail(new Error('expected no arguments'));","\t} else {","\t\twhen = new Date();","\t\trpc.end({","\t\t    'timestamp': when.getTime(),","\t\t    'iso8601': when.toISOString()","\t\t});","\t}","}","","function fastRpcEcho(rpc)","{","\trpc.argv().forEach(function (a) { rpc.write({ 'value': a }); });","\trpc.end();","}","","function fastRpcFail(rpc)","{","\tvar errspec, rv;","","\tif (rpc.argv().length != 1) {","\t\trpc.fail(new Error('expected argument'));","\t\treturn;","\t}","","\terrspec = rpc.argv()[0];","\tif (typeof (errspec.name) != 'string' ||","\t    typeof (errspec.message) != 'string' ||","\t    (errspec.info !== undefined && typeof (errspec.info) != 'object')) {","\t\trpc.fail(new Error('bad arguments'));","\t\treturn;","\t}","","\tif (errspec.data && Array.isArray(errspec.data)) {","\t\terrspec.data.forEach(function (d) {","\t\t\trpc.write({ 'value': d });","\t\t});","\t}","","\trv = new VError({","\t    'name': errspec.name,","\t    'info': errspec.info || {}","\t}, '%s', errspec.message);","\tif (errspec.context)","\t\trv.context = errspec.context;","","\tsetImmediate(function () { rpc.fail(rv); });","}","","function fastRpcFastbench(rpc)","{","\tvar argv, args;","","\targv = rpc.argv();","\tif (argv.length != 1 || typeof (argv[0]) != 'object' ||","\t    argv[0] === null) {","\t\trpc.fail(new Error('expected exactly one object argument'));","\t\treturn;","\t}","","\targs = argv[0];","\tif (!args.hasOwnProperty('echo') || !Array.isArray(args['echo'])) {","\t\trpc.fail(new Error('expected arg.echo'));","\t\treturn;","\t}","","\tif (typeof (args['delay']) == 'number') {","\t\tsetTimeout(fastRpcFastbenchFinish, args['delay'], rpc,","\t\t    args['echo']);","\t} else {","\t\tfastRpcFastbenchFinish(rpc, args['echo']);","\t}","}","","function fastRpcFastbenchFinish(rpc, values)","{","\tvalues.forEach(function (a) { rpc.write({ 'value': a }); });","\trpc.end();","}","","function fastRpcSleep(rpc)","{","\tvar argv, timems, maxtimems;","","\targv = rpc.argv();","\tif (argv.length != 1) {","\t\trpc.fail(new Error('expected one argument'));","\t\treturn;","\t}","","\ttimems = argv[0].ms;","\tmaxtimems = 30 * 60 * 1000;\t/* 30 minutes */","\tif (typeof (timems) != 'number' || timems < 0 || timems > maxtimems) {","\t\trpc.fail(new Error('bad value for \"ms\"'));","\t\treturn;","\t}","","\tsetTimeout(function () { rpc.end(); }, timems);","}","","function fastRpcWords(rpc)","{","\tvar wordfile, wordstream, lstream, xform;","","\tif (rpc.argv().length !== 0) {","\t\trpc.fail(new Error('expected 0 arguments'));","\t\treturn;","\t}","","\twordfile = '/usr/dict/words';","\twordstream = mod_fs.createReadStream(wordfile);","\tlstream = new mod_lstream();","\twordstream.pipe(lstream);","\txform = new mod_stream.Transform({","\t    'objectMode': true,","\t    'highWaterMark': 1","\t});","\txform._transform = function (c, _, callback) {","\t\tthis.push({ 'word': c });","\t\tsetImmediate(callback);","\t};","\tlstream.pipe(xform);","\txform.pipe(rpc);","\twordstream.on('error', function (err) {","\t\trpc.fail(new VError(err, 'open/read \"%s\"', wordfile));","\t});","}","","function fastRpcYes(rpc)","{","\tvar argv, value, count, i;","","\targv = rpc.argv();","\tif (argv.length != 1) {","\t\trpc.fail(new Error('expected one argument'));","\t\treturn;","\t}","","\tvalue = argv[0].value;","\tcount = argv[0].count;","\tif (typeof (count) != 'number' || count < 1 || count > 102400) {","\t\trpc.fail(new VError({","\t\t    'info': {","\t\t\t'foundValue': count,","\t\t\t'minValue': 1,","\t\t\t'maxValue': 102400","\t\t    }","\t\t}, 'count must be an integer in range [1, 102400]'));","\t\treturn;","\t}","","\tfor (i = 0; i < count; i++) {","\t\trpc.write({ 'value': value });","\t}","","\trpc.end();","}",""],"l":{"16":1,"17":1,"18":1,"20":1,"22":1,"24":1,"34":1,"36":0,"39":1,"41":0,"43":0,"44":0,"46":0,"47":0,"54":1,"56":0,"57":0,"60":1,"62":0,"64":0,"65":0,"66":0,"69":0,"70":0,"73":0,"74":0,"77":0,"78":0,"79":0,"83":0,"87":0,"88":0,"90":0,"93":1,"95":0,"97":0,"98":0,"100":0,"101":0,"104":0,"105":0,"106":0,"107":0,"110":0,"111":0,"114":0,"118":1,"120":0,"121":0,"124":1,"126":0,"128":0,"129":0,"130":0,"131":0,"134":0,"135":0,"136":0,"137":0,"138":0,"141":0,"144":1,"146":0,"148":0,"149":0,"150":0,"153":0,"154":0,"155":0,"156":0,"157":0,"161":0,"162":0,"163":0,"165":0,"166":0,"167":0,"168":0,"172":1,"174":0,"176":0,"177":0,"178":0,"179":0,"182":0,"183":0,"184":0,"185":0,"192":0,"195":0,"196":0,"199":0}},"/home/travis/build/npmtest/node-npmtest-fast/node_modules/fast/lib/fast_client_request.js":{"path":"/home/travis/build/npmtest/node-npmtest-fast/node_modules/fast/lib/fast_client_request.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":1,"33":0,"34":1,"35":0},"b":{},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"FastClientRequest","line":65,"loc":{"start":{"line":65,"column":0},"end":{"line":66,"column":0}}},"2":{"name":"(anonymous_2)","line":129,"loc":{"start":{"line":129,"column":38},"end":{"line":130,"column":0}}},"3":{"name":"(anonymous_3)","line":141,"loc":{"start":{"line":141,"column":40},"end":{"line":142,"column":0}}}},"statementMap":{"1":{"start":{"line":16,"column":0},"end":{"line":16,"column":44}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":35}},"3":{"start":{"line":18,"column":0},"end":{"line":18,"column":31}},"4":{"start":{"line":19,"column":0},"end":{"line":19,"column":31}},"5":{"start":{"line":21,"column":0},"end":{"line":21,"column":46}},"6":{"start":{"line":24,"column":0},"end":{"line":24,"column":46}},"7":{"start":{"line":65,"column":0},"end":{"line":125,"column":1}},"8":{"start":{"line":67,"column":1},"end":{"line":67,"column":37}},"9":{"start":{"line":68,"column":1},"end":{"line":68,"column":51}},"10":{"start":{"line":69,"column":1},"end":{"line":69,"column":49}},"11":{"start":{"line":70,"column":1},"end":{"line":70,"column":57}},"12":{"start":{"line":71,"column":1},"end":{"line":71,"column":52}},"13":{"start":{"line":72,"column":1},"end":{"line":72,"column":45}},"14":{"start":{"line":73,"column":1},"end":{"line":73,"column":69}},"15":{"start":{"line":76,"column":1},"end":{"line":76,"column":31}},"16":{"start":{"line":77,"column":1},"end":{"line":77,"column":29}},"17":{"start":{"line":78,"column":1},"end":{"line":78,"column":37}},"18":{"start":{"line":79,"column":1},"end":{"line":79,"column":33}},"19":{"start":{"line":80,"column":1},"end":{"line":80,"column":45}},"20":{"start":{"line":102,"column":1},"end":{"line":102,"column":32}},"21":{"start":{"line":103,"column":1},"end":{"line":103,"column":28}},"22":{"start":{"line":104,"column":1},"end":{"line":104,"column":23}},"23":{"start":{"line":105,"column":1},"end":{"line":105,"column":25}},"24":{"start":{"line":108,"column":1},"end":{"line":108,"column":25}},"25":{"start":{"line":111,"column":1},"end":{"line":111,"column":23}},"26":{"start":{"line":112,"column":1},"end":{"line":112,"column":20}},"27":{"start":{"line":113,"column":1},"end":{"line":113,"column":23}},"28":{"start":{"line":114,"column":1},"end":{"line":114,"column":28}},"29":{"start":{"line":115,"column":1},"end":{"line":115,"column":22}},"30":{"start":{"line":121,"column":1},"end":{"line":124,"column":4}},"31":{"start":{"line":127,"column":0},"end":{"line":127,"column":61}},"32":{"start":{"line":129,"column":0},"end":{"line":139,"column":2}},"33":{"start":{"line":136,"column":1},"end":{"line":138,"column":35}},"34":{"start":{"line":141,"column":0},"end":{"line":144,"column":2}},"35":{"start":{"line":143,"column":1},"end":{"line":143,"column":25}}},"branchMap":{},"code":["/*"," * This Source Code Form is subject to the terms of the Mozilla Public"," * License, v. 2.0. If a copy of the MPL was not distributed with this"," * file, You can obtain one at http://mozilla.org/MPL/2.0/."," */","","/*"," * Copyright (c) 2016, Joyent, Inc."," */","","/*"," * lib/fast_client_request.js: represents a single RPC request from a fast"," * client.  This object is the caller's handle on an individual request."," */","","var mod_assertplus = require('assert-plus');","var mod_stream = require('stream');","var mod_util = require('util');","var VError = require('verror');","","var mod_protocol = require('./fast_protocol');","","/* Exported interface */","exports.FastClientRequest = FastClientRequest;","","/*"," * This object is constructed internally by the client interface when beginning"," * an RPC request.  Arguments include:"," *"," *     client\t\ta reference back to the FastClient.  Much of the"," *     \t\t\tfunctionality of this request is implemented in the"," *     \t\t\tclient."," *"," *     msgid\t\tunique identifier for this request, scoped to this"," *     \t\t\ttransport connection"," *"," *     rpcmethod\tstring name of the remote RPC method to invoke"," *"," *     rpcargs\t\tarray of arguments to pass to the remote RPC method"," *"," *     ignoreNullValues\tsee \"ignoreNullValues\" argument to Fast client's rpc()"," *     \t\t\tmethod."," *"," *     log\t\tbunyan-style logger"," *"," * A FastClientRequest object is a client-side caller's handle for an"," * outstanding RPC request.  From the caller's perspective, fast requests"," * normally emit zero or more \"data\" messages followed by an \"end\" message.  An"," * \"error\" message at any point along the way indicates that the request will"," * receive no further messages."," *"," * We model this as an object-mode stream.  'data' events are emitted (along"," * with the data payload) for each incoming Fast 'data' message.  When the"," * request completes gracefully, the stream ends (and emits 'end').  If any"," * error occurs along the way, 'error' is emitted, and no further 'data' or"," * 'end' events will be emitted.  Possible sources of error include:"," *"," *     o server-side error: the server explicitly and cleanly sends us an error"," *"," *     o transport or protocol error: we fail the request locally because of an"," *       error maintaining contact with the server"," *"," *     o local abandonment: the caller abandoned the request"," */","function FastClientRequest(args)","{","\tmod_assertplus.object(args, 'args');","\tmod_assertplus.object(args.client, 'args.client');","\tmod_assertplus.number(args.msgid, 'args.msgid');","\tmod_assertplus.string(args.rpcmethod, 'args.rpcmethod');","\tmod_assertplus.array(args.rpcargs, 'args.rpcargs');","\tmod_assertplus.object(args.log, 'args.log');","\tmod_assertplus.bool(args.ignoreNullValues, 'args.ignoreNullValues');","","\t/* rpc parameters */","\tthis.frq_client = args.client;","\tthis.frq_msgid = args.msgid;","\tthis.frq_rpcmethod = args.rpcmethod;","\tthis.frq_rpcargs = args.rpcargs;","\tthis.frq_ignorenull = args.ignoreNullValues;","","\t/*","\t * RPC state: most RPC requests are immediately transmitted (at least to","\t * the underlying transport, even if that component ends up queueing","\t * them).  Once that happens, they complete in one of three ways:","\t *","\t *     o gracefully, when the server sends an \"end\" or \"error\" message","\t *","\t *     o when the local caller issues an abandonment","\t *","\t *     o when there's an error on the transport, after which we do not","\t *       expect to receive a graceful response","\t *","\t * The first two conditions are indicated by frq_done_graceful and","\t * frq_abandoned.  frq_error is set whenever an error is encountered for","\t * this request, which may be in any of these conditions.","\t *","\t * If the transport is disconnected when the user makes the initial","\t * request, then we never bother to transmit the request.  We will set","\t * frq_skip for this case, though only for debugging purposes.","\t */","\tthis.frq_done_graceful = false;\t/* recvd \"end\" or \"error\" from server */","\tthis.frq_abandoned = false;\t/* abandoned locally */","\tthis.frq_error = null;\t\t/* error, if any */","\tthis.frq_timeout = null;\t/* timeout handle, if any */","","\t/* helpers */","\tthis.frq_log = args.log;\t/* logger */","","\t/* debugging state */","\tthis.frq_skip = false;\t\t/* RPC was skipped (no transport) */","\tthis.frq_ndata = 0;\t\t/* data messages emitted */","\tthis.frq_nignored = 0;\t\t/* count of ignored messages */","\tthis.frq_nignored_null = 0;\t/* count of ignored \"null\" values */","\tthis.frq_last = null;\t\t/* last message received */","","\t/*","\t * The high watermark is not really used because we do not support flow","\t * control.","\t */","\tmod_stream.PassThrough.call(this, {","\t    'objectMode': true,","\t    'highWaterMark': 16","\t});","}","","mod_util.inherits(FastClientRequest, mod_stream.PassThrough);","","FastClientRequest.prototype.abandon = function ()","{","\t/*","\t * This method is just a convenience alias for the guts that happen in","\t * the client's requestAbandon() method, where all the real work","\t * happens.","\t */","\treturn (this.frq_client.requestAbandon(this, new VError({","\t    'name': 'FastRequestAbandonedError'","\t}, 'request abandoned by user')));","};","","FastClientRequest.prototype.requestId = function ()","{","\treturn (this.frq_msgid);","};",""],"l":{"16":1,"17":1,"18":1,"19":1,"21":1,"24":1,"65":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"76":0,"77":0,"78":0,"79":0,"80":0,"102":0,"103":0,"104":0,"105":0,"108":0,"111":0,"112":0,"113":0,"114":0,"115":0,"121":0,"127":1,"129":1,"136":0,"141":1,"143":0}},"/home/travis/build/npmtest/node-npmtest-fast/node_modules/fast/lib/fast_protocol.js":{"path":"/home/travis/build/npmtest/node-npmtest-fast/node_modules/fast/lib/fast_protocol.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":1,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":1,"80":0,"81":1,"82":1,"83":0,"84":0,"85":1,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":1,"101":1,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":1,"110":0,"111":0,"112":1,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0},"b":{"1":[0,0,0,0],"2":[0,0,0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0,0],"8":[0,0],"9":[0,0,0,0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0,0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0,0],"22":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"fastMessageEncode","line":139,"loc":{"start":{"line":139,"column":0},"end":{"line":140,"column":0}}},"2":{"name":"fastMessageDecode","line":180,"loc":{"start":{"line":180,"column":0},"end":{"line":181,"column":0}}},"3":{"name":"FastMessageEncoder","line":258,"loc":{"start":{"line":258,"column":0},"end":{"line":259,"column":0}}},"4":{"name":"(anonymous_4)","line":268,"loc":{"start":{"line":268,"column":42},"end":{"line":269,"column":0}}},"5":{"name":"FastMessageDecoder","line":279,"loc":{"start":{"line":279,"column":0},"end":{"line":280,"column":0}}},"6":{"name":"(anonymous_6)","line":307,"loc":{"start":{"line":307,"column":42},"end":{"line":308,"column":0}}},"7":{"name":"(anonymous_7)","line":323,"loc":{"start":{"line":323,"column":38},"end":{"line":324,"column":0}}},"8":{"name":"(anonymous_8)","line":329,"loc":{"start":{"line":329,"column":38},"end":{"line":330,"column":0}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":44}},"2":{"start":{"line":16,"column":0},"end":{"line":16,"column":29}},"3":{"start":{"line":17,"column":0},"end":{"line":17,"column":35}},"4":{"start":{"line":18,"column":0},"end":{"line":18,"column":31}},"5":{"start":{"line":19,"column":0},"end":{"line":19,"column":31}},"6":{"start":{"line":22,"column":0},"end":{"line":22,"column":46}},"7":{"start":{"line":23,"column":0},"end":{"line":23,"column":48}},"8":{"start":{"line":24,"column":0},"end":{"line":24,"column":48}},"9":{"start":{"line":79,"column":0},"end":{"line":79,"column":46}},"10":{"start":{"line":80,"column":0},"end":{"line":80,"column":39}},"11":{"start":{"line":85,"column":0},"end":{"line":85,"column":30}},"12":{"start":{"line":86,"column":0},"end":{"line":86,"column":47}},"13":{"start":{"line":87,"column":0},"end":{"line":87,"column":44}},"14":{"start":{"line":88,"column":0},"end":{"line":88,"column":46}},"15":{"start":{"line":89,"column":0},"end":{"line":89,"column":45}},"16":{"start":{"line":90,"column":0},"end":{"line":90,"column":43}},"17":{"start":{"line":91,"column":0},"end":{"line":91,"column":47}},"18":{"start":{"line":92,"column":0},"end":{"line":92,"column":41}},"19":{"start":{"line":93,"column":0},"end":{"line":93,"column":38}},"20":{"start":{"line":94,"column":0},"end":{"line":94,"column":40}},"21":{"start":{"line":95,"column":0},"end":{"line":95,"column":39}},"22":{"start":{"line":96,"column":0},"end":{"line":96,"column":37}},"23":{"start":{"line":97,"column":0},"end":{"line":97,"column":41}},"24":{"start":{"line":98,"column":0},"end":{"line":98,"column":38}},"25":{"start":{"line":102,"column":0},"end":{"line":102,"column":38}},"26":{"start":{"line":103,"column":0},"end":{"line":103,"column":39}},"27":{"start":{"line":106,"column":0},"end":{"line":106,"column":30}},"28":{"start":{"line":107,"column":0},"end":{"line":107,"column":30}},"29":{"start":{"line":108,"column":0},"end":{"line":108,"column":30}},"30":{"start":{"line":109,"column":0},"end":{"line":109,"column":41}},"31":{"start":{"line":110,"column":0},"end":{"line":110,"column":40}},"32":{"start":{"line":111,"column":0},"end":{"line":111,"column":42}},"33":{"start":{"line":114,"column":0},"end":{"line":114,"column":30}},"34":{"start":{"line":115,"column":0},"end":{"line":115,"column":39}},"35":{"start":{"line":118,"column":0},"end":{"line":118,"column":33}},"36":{"start":{"line":119,"column":0},"end":{"line":119,"column":42}},"37":{"start":{"line":120,"column":0},"end":{"line":120,"column":42}},"38":{"start":{"line":121,"column":0},"end":{"line":121,"column":48}},"39":{"start":{"line":139,"column":0},"end":{"line":172,"column":1}},"40":{"start":{"line":141,"column":1},"end":{"line":141,"column":42}},"41":{"start":{"line":143,"column":1},"end":{"line":143,"column":35}},"42":{"start":{"line":144,"column":1},"end":{"line":147,"column":63}},"43":{"start":{"line":148,"column":1},"end":{"line":148,"column":45}},"44":{"start":{"line":149,"column":1},"end":{"line":149,"column":49}},"45":{"start":{"line":151,"column":1},"end":{"line":158,"column":2}},"46":{"start":{"line":155,"column":2},"end":{"line":155,"column":8}},"47":{"start":{"line":157,"column":2},"end":{"line":157,"column":56}},"48":{"start":{"line":160,"column":1},"end":{"line":160,"column":41}},"49":{"start":{"line":161,"column":1},"end":{"line":161,"column":37}},"50":{"start":{"line":162,"column":1},"end":{"line":162,"column":43}},"51":{"start":{"line":163,"column":1},"end":{"line":163,"column":45}},"52":{"start":{"line":164,"column":1},"end":{"line":164,"column":55}},"53":{"start":{"line":165,"column":1},"end":{"line":165,"column":46}},"54":{"start":{"line":166,"column":1},"end":{"line":166,"column":46}},"55":{"start":{"line":167,"column":1},"end":{"line":167,"column":47}},"56":{"start":{"line":168,"column":1},"end":{"line":168,"column":41}},"57":{"start":{"line":169,"column":1},"end":{"line":169,"column":47}},"58":{"start":{"line":170,"column":1},"end":{"line":170,"column":58}},"59":{"start":{"line":171,"column":1},"end":{"line":171,"column":17}},"60":{"start":{"line":180,"column":0},"end":{"line":252,"column":1}},"61":{"start":{"line":182,"column":1},"end":{"line":182,"column":34}},"62":{"start":{"line":184,"column":1},"end":{"line":184,"column":57}},"63":{"start":{"line":185,"column":1},"end":{"line":185,"column":26}},"64":{"start":{"line":186,"column":1},"end":{"line":186,"column":60}},"65":{"start":{"line":187,"column":1},"end":{"line":187,"column":48}},"66":{"start":{"line":188,"column":1},"end":{"line":188,"column":31}},"67":{"start":{"line":190,"column":1},"end":{"line":200,"column":2}},"68":{"start":{"line":191,"column":2},"end":{"line":199,"column":25}},"69":{"start":{"line":202,"column":1},"end":{"line":212,"column":2}},"70":{"start":{"line":203,"column":2},"end":{"line":203,"column":29}},"71":{"start":{"line":205,"column":2},"end":{"line":211,"column":47}},"72":{"start":{"line":214,"column":1},"end":{"line":221,"column":2}},"73":{"start":{"line":215,"column":2},"end":{"line":220,"column":63}},"74":{"start":{"line":223,"column":1},"end":{"line":232,"column":2}},"75":{"start":{"line":225,"column":2},"end":{"line":231,"column":19}},"76":{"start":{"line":234,"column":1},"end":{"line":245,"column":2}},"77":{"start":{"line":238,"column":2},"end":{"line":244,"column":22}},"78":{"start":{"line":247,"column":1},"end":{"line":251,"column":4}},"79":{"start":{"line":258,"column":0},"end":{"line":264,"column":1}},"80":{"start":{"line":260,"column":1},"end":{"line":263,"column":4}},"81":{"start":{"line":266,"column":0},"end":{"line":266,"column":60}},"82":{"start":{"line":268,"column":0},"end":{"line":272,"column":2}},"83":{"start":{"line":270,"column":1},"end":{"line":270,"column":37}},"84":{"start":{"line":271,"column":1},"end":{"line":271,"column":24}},"85":{"start":{"line":279,"column":0},"end":{"line":303,"column":1}},"86":{"start":{"line":281,"column":1},"end":{"line":283,"column":4}},"87":{"start":{"line":286,"column":1},"end":{"line":286,"column":23}},"88":{"start":{"line":287,"column":1},"end":{"line":287,"column":23}},"89":{"start":{"line":288,"column":1},"end":{"line":288,"column":22}},"90":{"start":{"line":289,"column":1},"end":{"line":289,"column":22}},"91":{"start":{"line":290,"column":1},"end":{"line":290,"column":25}},"92":{"start":{"line":293,"column":1},"end":{"line":293,"column":24}},"93":{"start":{"line":294,"column":1},"end":{"line":294,"column":21}},"94":{"start":{"line":295,"column":1},"end":{"line":295,"column":23}},"95":{"start":{"line":296,"column":1},"end":{"line":296,"column":22}},"96":{"start":{"line":297,"column":1},"end":{"line":297,"column":20}},"97":{"start":{"line":298,"column":1},"end":{"line":298,"column":24}},"98":{"start":{"line":301,"column":1},"end":{"line":301,"column":23}},"99":{"start":{"line":302,"column":1},"end":{"line":302,"column":20}},"100":{"start":{"line":305,"column":0},"end":{"line":305,"column":60}},"101":{"start":{"line":307,"column":0},"end":{"line":321,"column":2}},"102":{"start":{"line":309,"column":1},"end":{"line":309,"column":35}},"103":{"start":{"line":311,"column":1},"end":{"line":317,"column":2}},"104":{"start":{"line":312,"column":2},"end":{"line":312,"column":56}},"105":{"start":{"line":313,"column":2},"end":{"line":313,"column":25}},"106":{"start":{"line":315,"column":2},"end":{"line":316,"column":52}},"107":{"start":{"line":319,"column":1},"end":{"line":319,"column":32}},"108":{"start":{"line":320,"column":1},"end":{"line":320,"column":23}},"109":{"start":{"line":323,"column":0},"end":{"line":327,"column":2}},"110":{"start":{"line":325,"column":1},"end":{"line":325,"column":21}},"111":{"start":{"line":326,"column":1},"end":{"line":326,"column":23}},"112":{"start":{"line":329,"column":0},"end":{"line":473,"column":2}},"113":{"start":{"line":331,"column":1},"end":{"line":331,"column":14}},"114":{"start":{"line":333,"column":1},"end":{"line":335,"column":2}},"115":{"start":{"line":334,"column":2},"end":{"line":334,"column":9}},"116":{"start":{"line":337,"column":1},"end":{"line":337,"column":43}},"117":{"start":{"line":339,"column":1},"end":{"line":457,"column":2}},"118":{"start":{"line":340,"column":2},"end":{"line":340,"column":23}},"119":{"start":{"line":341,"column":2},"end":{"line":341,"column":54}},"120":{"start":{"line":342,"column":2},"end":{"line":342,"column":34}},"121":{"start":{"line":343,"column":2},"end":{"line":343,"column":44}},"122":{"start":{"line":344,"column":2},"end":{"line":344,"column":46}},"123":{"start":{"line":346,"column":2},"end":{"line":346,"column":50}},"124":{"start":{"line":347,"column":2},"end":{"line":357,"column":3}},"125":{"start":{"line":348,"column":3},"end":{"line":355,"column":24}},"126":{"start":{"line":356,"column":3},"end":{"line":356,"column":9}},"127":{"start":{"line":359,"column":2},"end":{"line":359,"column":44}},"128":{"start":{"line":360,"column":2},"end":{"line":370,"column":3}},"129":{"start":{"line":361,"column":3},"end":{"line":368,"column":21}},"130":{"start":{"line":369,"column":3},"end":{"line":369,"column":9}},"131":{"start":{"line":372,"column":2},"end":{"line":372,"column":48}},"132":{"start":{"line":373,"column":2},"end":{"line":388,"column":3}},"133":{"start":{"line":377,"column":3},"end":{"line":377,"column":9}},"134":{"start":{"line":379,"column":3},"end":{"line":386,"column":23}},"135":{"start":{"line":387,"column":3},"end":{"line":387,"column":9}},"136":{"start":{"line":390,"column":2},"end":{"line":392,"column":3}},"137":{"start":{"line":391,"column":3},"end":{"line":391,"column":9}},"138":{"start":{"line":394,"column":2},"end":{"line":394,"column":49}},"139":{"start":{"line":395,"column":2},"end":{"line":404,"column":3}},"140":{"start":{"line":396,"column":3},"end":{"line":402,"column":56}},"141":{"start":{"line":403,"column":3},"end":{"line":403,"column":9}},"142":{"start":{"line":406,"column":2},"end":{"line":406,"column":45}},"143":{"start":{"line":407,"column":2},"end":{"line":407,"column":53}},"144":{"start":{"line":409,"column":2},"end":{"line":423,"column":3}},"145":{"start":{"line":416,"column":3},"end":{"line":416,"column":26}},"146":{"start":{"line":417,"column":3},"end":{"line":417,"column":23}},"147":{"start":{"line":418,"column":3},"end":{"line":418,"column":25}},"148":{"start":{"line":419,"column":3},"end":{"line":419,"column":24}},"149":{"start":{"line":420,"column":3},"end":{"line":420,"column":22}},"150":{"start":{"line":421,"column":3},"end":{"line":421,"column":26}},"151":{"start":{"line":422,"column":3},"end":{"line":422,"column":9}},"152":{"start":{"line":429,"column":2},"end":{"line":429,"column":64}},"153":{"start":{"line":430,"column":2},"end":{"line":431,"column":38}},"154":{"start":{"line":432,"column":2},"end":{"line":432,"column":34}},"155":{"start":{"line":433,"column":2},"end":{"line":440,"column":10}},"156":{"start":{"line":441,"column":2},"end":{"line":444,"column":3}},"157":{"start":{"line":442,"column":3},"end":{"line":442,"column":23}},"158":{"start":{"line":443,"column":3},"end":{"line":443,"column":9}},"159":{"start":{"line":446,"column":2},"end":{"line":446,"column":25}},"160":{"start":{"line":447,"column":2},"end":{"line":447,"column":22}},"161":{"start":{"line":448,"column":2},"end":{"line":448,"column":24}},"162":{"start":{"line":449,"column":2},"end":{"line":449,"column":23}},"163":{"start":{"line":450,"column":2},"end":{"line":450,"column":21}},"164":{"start":{"line":451,"column":2},"end":{"line":451,"column":25}},"165":{"start":{"line":453,"column":2},"end":{"line":453,"column":25}},"166":{"start":{"line":454,"column":2},"end":{"line":454,"column":17}},"167":{"start":{"line":455,"column":2},"end":{"line":455,"column":26}},"168":{"start":{"line":456,"column":2},"end":{"line":456,"column":22}},"169":{"start":{"line":459,"column":1},"end":{"line":466,"column":2}},"170":{"start":{"line":460,"column":2},"end":{"line":465,"column":59}},"171":{"start":{"line":468,"column":1},"end":{"line":472,"column":2}},"172":{"start":{"line":469,"column":2},"end":{"line":469,"column":40}},"173":{"start":{"line":471,"column":2},"end":{"line":471,"column":25}}},"branchMap":{"1":{"line":144,"type":"binary-expr","locations":[{"start":{"line":144,"column":19},"end":{"line":144,"column":49}},{"start":{"line":145,"column":5},"end":{"line":145,"column":39}},{"start":{"line":146,"column":5},"end":{"line":146,"column":19}},{"start":{"line":146,"column":23},"end":{"line":146,"column":48}}]},"2":{"line":151,"type":"switch","locations":[{"start":{"line":152,"column":1},"end":{"line":152,"column":21}},{"start":{"line":153,"column":1},"end":{"line":153,"column":20}},{"start":{"line":154,"column":1},"end":{"line":155,"column":8}},{"start":{"line":156,"column":1},"end":{"line":157,"column":56}}]},"3":{"line":190,"type":"if","locations":[{"start":{"line":190,"column":1},"end":{"line":190,"column":1}},{"start":{"line":190,"column":1},"end":{"line":190,"column":1}}]},"4":{"line":214,"type":"if","locations":[{"start":{"line":214,"column":1},"end":{"line":214,"column":1}},{"start":{"line":214,"column":1},"end":{"line":214,"column":1}}]},"5":{"line":214,"type":"binary-expr","locations":[{"start":{"line":214,"column":5},"end":{"line":214,"column":30}},{"start":{"line":214,"column":34},"end":{"line":214,"column":47}}]},"6":{"line":223,"type":"if","locations":[{"start":{"line":223,"column":1},"end":{"line":223,"column":1}},{"start":{"line":223,"column":1},"end":{"line":223,"column":1}}]},"7":{"line":223,"type":"binary-expr","locations":[{"start":{"line":223,"column":6},"end":{"line":223,"column":37}},{"start":{"line":224,"column":5},"end":{"line":224,"column":35}},{"start":{"line":224,"column":40},"end":{"line":224,"column":62}}]},"8":{"line":234,"type":"if","locations":[{"start":{"line":234,"column":1},"end":{"line":234,"column":1}},{"start":{"line":234,"column":1},"end":{"line":234,"column":1}}]},"9":{"line":234,"type":"binary-expr","locations":[{"start":{"line":234,"column":5},"end":{"line":234,"column":37}},{"start":{"line":235,"column":6},"end":{"line":235,"column":33}},{"start":{"line":235,"column":37},"end":{"line":235,"column":52}},{"start":{"line":236,"column":5},"end":{"line":236,"column":37}},{"start":{"line":237,"column":5},"end":{"line":237,"column":40}}]},"10":{"line":311,"type":"if","locations":[{"start":{"line":311,"column":1},"end":{"line":311,"column":1}},{"start":{"line":311,"column":1},"end":{"line":311,"column":1}}]},"11":{"line":333,"type":"if","locations":[{"start":{"line":333,"column":1},"end":{"line":333,"column":1}},{"start":{"line":333,"column":1},"end":{"line":333,"column":1}}]},"12":{"line":347,"type":"if","locations":[{"start":{"line":347,"column":2},"end":{"line":347,"column":2}},{"start":{"line":347,"column":2},"end":{"line":347,"column":2}}]},"13":{"line":360,"type":"if","locations":[{"start":{"line":360,"column":2},"end":{"line":360,"column":2}},{"start":{"line":360,"column":2},"end":{"line":360,"column":2}}]},"14":{"line":373,"type":"switch","locations":[{"start":{"line":374,"column":2},"end":{"line":374,"column":22}},{"start":{"line":375,"column":2},"end":{"line":375,"column":21}},{"start":{"line":376,"column":2},"end":{"line":377,"column":9}},{"start":{"line":378,"column":2},"end":{"line":387,"column":9}}]},"15":{"line":390,"type":"if","locations":[{"start":{"line":390,"column":2},"end":{"line":390,"column":2}},{"start":{"line":390,"column":2},"end":{"line":390,"column":2}}]},"16":{"line":395,"type":"if","locations":[{"start":{"line":395,"column":2},"end":{"line":395,"column":2}},{"start":{"line":395,"column":2},"end":{"line":395,"column":2}}]},"17":{"line":395,"type":"binary-expr","locations":[{"start":{"line":395,"column":6},"end":{"line":395,"column":23}},{"start":{"line":395,"column":27},"end":{"line":395,"column":55}}]},"18":{"line":409,"type":"if","locations":[{"start":{"line":409,"column":2},"end":{"line":409,"column":2}},{"start":{"line":409,"column":2},"end":{"line":409,"column":2}}]},"19":{"line":441,"type":"if","locations":[{"start":{"line":441,"column":2},"end":{"line":441,"column":2}},{"start":{"line":441,"column":2},"end":{"line":441,"column":2}}]},"20":{"line":459,"type":"if","locations":[{"start":{"line":459,"column":1},"end":{"line":459,"column":1}},{"start":{"line":459,"column":1},"end":{"line":459,"column":1}}]},"21":{"line":459,"type":"binary-expr","locations":[{"start":{"line":459,"column":5},"end":{"line":459,"column":27}},{"start":{"line":459,"column":31},"end":{"line":459,"column":52}},{"start":{"line":459,"column":56},"end":{"line":459,"column":68}}]},"22":{"line":468,"type":"if","locations":[{"start":{"line":468,"column":1},"end":{"line":468,"column":1}},{"start":{"line":468,"column":1},"end":{"line":468,"column":1}}]}},"code":["/*"," * This Source Code Form is subject to the terms of the Mozilla Public"," * License, v. 2.0. If a copy of the MPL was not distributed with this"," * file, You can obtain one at http://mozilla.org/MPL/2.0/."," */","","/*"," * Copyright (c) 2016, Joyent, Inc."," */","","/*"," * lib/fast_protocol.js: fast protocol definitions"," */","","var mod_assertplus = require('assert-plus');","var mod_crc = require('crc');","var mod_stream = require('stream');","var mod_util = require('util');","var VError = require('verror');","","/* Exported interface */","exports.fastMessageEncode = fastMessageEncode;","exports.FastMessageEncoder = FastMessageEncoder;","exports.FastMessageDecoder = FastMessageDecoder;","/* Protocol constants are exported below. */","","/*"," * Protocol definition"," *"," * All fast protocol messages look like the following:"," *"," *    0x00   +---------+--------+---------+---------+"," *           | VERSION | TYPE   | STATUS  | MSGID1  |"," *    0x04   +---------+--------+---------+---------+"," *           | MSGID2  | MSGID3 | MSGID4  | CRC1    |"," *    0x08   +---------+--------+---------+---------+"," *           | CRC2    | CRC3   | CRC4    | DLEN1   |"," *    0x0c   +---------+--------+---------+---------+"," *           | DLEN2   | DLEN3  | DLEN4   | DATA0   |"," *    0x10   +---------+--------+---------+---------+"," *           | DATAN...                             |"," *           +---------+--------+---------+---------+"," *"," * VERSION   1-byte integer.  The only supported value is \"1\"."," *"," * TYPE      1-byte integer.  The only supported value is TYPE_JSON (0x1),"," *           indicating that the data payload is an encoded JSON object."," *"," * STATUS    1-byte integer.  The only supported values are:"," *"," *     STATUS_DATA  0x1  indicates a \"data\" message"," *"," *     STATUS_END   0x2  indicates an \"end\" message"," *"," *     STATUS_ERROR 0x3  indicates an \"error\" message"," *"," * MSGID1...MSGID4    4-byte big-endian unsigned integer, a unique identifier"," *                    for this message"," *"," * CRC1...CRC4        4-byte big-endian unsigned integer representing the CRC16"," *                    value of the data payload"," *"," * DLEN0...DLEN4      4-byte big-endian unsigned integer representing the number"," *                    of bytes of data payload that follow"," *"," * DATA0...DATAN      Data payload.  This is a JSON-encoded object (for TYPE ="," *                    TYPE_JSON).  The encoding length in bytes is given by the"," *                    DLEN0...DLEN4 bytes."," *"," * Due to historical bugs in node-crc, the CRC implementation used in version 1"," * of the protocol is essentially incompatible with any CRC implementation other"," * than the one provided by node-crc version 0.x."," */","","/*"," * Message IDs: each Fast message has a message id, which is scoped to the Fast"," * connection.  We allocate these sequentially from a circular 31-bit space."," */","var FP_MSGID_MAX        = Math.pow(2, 31) - 1;","exports.FP_MSGID_MAX    = FP_MSGID_MAX;","","/*"," * Field offsets"," */","var FP_OFF_VERSION      = 0x0;","var FP_OFF_TYPE         = FP_OFF_VERSION + 0x1;\t/* 0x1 */","var FP_OFF_STATUS       = FP_OFF_TYPE + 0x1;\t/* 0x2 */","var FP_OFF_MSGID        = FP_OFF_STATUS + 0x1;   /* 0x3 */","var FP_OFF_CRC          = FP_OFF_MSGID + 0x4;\t/* 0x7 */","var FP_OFF_DATALEN      = FP_OFF_CRC + 0x4;\t/* 0xb */","var FP_OFF_DATA         = FP_OFF_DATALEN + 0x4;\t/* 0xf */","exports.FP_OFF_VERSION  = FP_OFF_VERSION;","exports.FP_OFF_TYPE     = FP_OFF_TYPE;","exports.FP_OFF_STATUS   = FP_OFF_STATUS;","exports.FP_OFF_MSGID    = FP_OFF_MSGID;","exports.FP_OFF_CRC      = FP_OFF_CRC;","exports.FP_OFF_DATALEN  = FP_OFF_DATALEN;","exports.FP_OFF_DATA     = FP_OFF_DATA;","","","/* size (in bytes) of each message header */","var FP_HEADER_SZ        = FP_OFF_DATA;\t\t/* 0xf */","exports.FP_HEADER_SZ    = FP_HEADER_SZ;","","/* possible values for the \"status\" byte */","var FP_STATUS_DATA      = 0x1;","var FP_STATUS_END       = 0x2;","var FP_STATUS_ERROR     = 0x3;","exports.FP_STATUS_DATA  = FP_STATUS_DATA;","exports.FP_STATUS_END   = FP_STATUS_END;","exports.FP_STATUS_ERROR = FP_STATUS_ERROR;","","/* possible values for the \"type\" byte */","var FP_TYPE_JSON        = 0x1;","exports.FP_TYPE_JSON    = FP_TYPE_JSON;","","/* possible values for the \"version\" byte */","var FP_VERSION_1           = 0x1;","var FP_VERSION_CURRENT     = FP_VERSION_1;","exports.FP_VERSION_1       = FP_VERSION_1;","exports.FP_VERSION_CURRENT = FP_VERSION_CURRENT;","","","/*"," * Encode a logical message for sending over the wire.  This requires the"," * following named properties:"," *"," *     msgid    (number) message identifier -- see lib/fast.js"," *"," *     data     (object) represents message contents.  At this level, this"," *\t\t\t can be any plain-old JavaScript object."," *"," *     status   (number) message \"status\" (one of FP_STATUS_DATA, FP_STATUS_END,"," *\t\t\t or FP_STATUS_ERROR)."," *"," * Failure to match these requirements is a programmer error that may result in"," * a synchronously thrown exception that should not be caught."," */","function fastMessageEncode(msg)","{","\tvar buffer, data_encoded, datalen, crc16;","","\tmod_assertplus.object(msg, 'msg');","\tmod_assertplus.ok(typeof (msg.msgid) == 'number' &&","\t    Math.floor(msg.msgid) == msg.msgid &&","\t    msg.msgid >= 0 && msg.msgid <= FP_MSGID_MAX,","\t    'msg.msgid is not an integer between 0 and FP_MSGID_MAX');","\tmod_assertplus.object(msg.data, 'msg.data');","\tmod_assertplus.number(msg.status, 'msg.status');","","\tswitch (msg.status) {","\tcase FP_STATUS_DATA:","\tcase FP_STATUS_END:","\tcase FP_STATUS_ERROR:","\t\tbreak;","\tdefault:","\t\tthrow (new VError('unsupported fast message status'));","\t}","","\tdata_encoded = JSON.stringify(msg.data);","\tcrc16 = mod_crc.crc16(data_encoded);","\tdatalen = Buffer.byteLength(data_encoded);","\tbuffer = new Buffer(FP_HEADER_SZ + datalen);","\tbuffer.writeUInt8(FP_VERSION_CURRENT, FP_OFF_VERSION);","\tbuffer.writeUInt8(FP_TYPE_JSON, FP_OFF_TYPE);","\tbuffer.writeUInt8(msg.status, FP_OFF_STATUS);","\tbuffer.writeUInt32BE(msg.msgid, FP_OFF_MSGID);","\tbuffer.writeUInt32BE(crc16, FP_OFF_CRC);","\tbuffer.writeUInt32BE(datalen, FP_OFF_DATALEN);","\tbuffer.write(data_encoded, FP_OFF_DATA, datalen, 'utf8');","\treturn (buffer);","}","","/*"," * Decode a fast message from a buffer that's known to contain a single,"," * well-formed message.  All of the protocol fields are known to be valid (e.g.,"," * version, type, status, and msgid) at this point, but the data has not been"," * read, so the CRC has not been validated."," */","function fastMessageDecode(header, buffer)","{","\tvar datalen, datastr, json, calc;","","\tmod_assertplus.number(header.datalen, 'header.datalen');","\tdatalen = header.datalen;","\tmod_assertplus.equal(buffer.length, FP_OFF_DATA + datalen);","\tdatastr = buffer.toString('utf8', FP_OFF_DATA);","\tcalc = mod_crc.crc16(datastr);","","\tif (calc != header.crc) {","\t\treturn (new VError({","\t\t    'name': 'FastProtocolError',","\t\t    'info': {","\t\t\t'fastReason': 'bad_crc',","\t\t\t'crcCalculated': calc,","\t\t\t'crcExpected': header.crc","\t\t    }","\t\t}, 'fast protocol: expected CRC %s, found %s',","\t\t    header.crc, calc));","\t}","","\ttry {","\t\tjson = JSON.parse(datastr);","\t} catch (ex) {","\t\treturn (new VError({","\t\t    'name': 'FastProtocolError',","\t\t    'cause': ex,","\t\t    'info': {","\t\t\t'fastReason': 'invalid_json'","\t\t    }","\t\t}, 'fast protocol: invalid JSON in \"data\"'));","\t}","","\tif (typeof (json) != 'object' || json === null) {","\t\treturn (new VError({","\t\t    'name': 'FastProtocolError',","\t\t    'info': {","\t\t\t'fastReason': 'bad_data'","\t\t    }","\t\t}, 'fast protocol: message data must be a non-null object'));","\t}","","\tif ((header.status == FP_STATUS_DATA ||","\t    header.status == FP_STATUS_END) && !Array.isArray(json.d)) {","\t\treturn (new VError({","\t\t    'name': 'FastProtocolError',","\t\t    'info': {","\t\t\t'fastReason': 'bad_data_d'","\t\t    }","\t\t}, 'fast protocol: data.d for DATA and END messages must be ' +","\t\t    'an array'));","\t}","","\tif (header.status == FP_STATUS_ERROR &&","\t    (typeof (json.d) != 'object' || json.d === null ||","\t    typeof (json.d.name) != 'string' ||","\t    typeof (json.d.message) != 'string')) {","\t\treturn (new VError({","\t\t    'name': 'FastProtocolError',","\t\t    'info': {","\t\t\t'fastReason': 'bad_error'","\t\t    }","\t\t}, 'fast protocol: data.d for ERROR messages must have name ' +","\t\t    'and message'));","\t}","","\treturn ({","\t    'status': header.status,","\t    'msgid': header.msgid,","\t    'data': json","\t});","}","","/*"," * Transform stream that takes logical messages and emits a buffer representing"," * that message (for sending over the wire)."," */","function FastMessageEncoder()","{","\tmod_stream.Transform.call(this, {","\t    'highWaterMark': 16,","\t    'objectMode': true","\t});","}","","mod_util.inherits(FastMessageEncoder, mod_stream.Transform);","","FastMessageEncoder.prototype._transform = function (chunk, _, callback)","{","\tthis.push(fastMessageEncode(chunk));","\tsetImmediate(callback);","};","","","/*"," * Transform stream that takes bytes (via Buffer objects) and emits an object"," * representing the encoded Fast message."," */","function FastMessageDecoder()","{","\tmod_stream.Transform.call(this, {","\t    'objectMode': true","\t});","","\t/* current state */","\tthis.md_buffer = null;\t\t/* unparsed data */","\tthis.md_havebytes = 0;\t\t/* bytes of unparsed data */","\tthis.md_done = false;\t\t/* we've read end-of-stream */","\tthis.md_error = null;\t\t/* fatal error */","\tthis.md_pushing = false;\t/* currently calling push() */","","\t/* current header */","\tthis.md_version = null;","\tthis.md_type = null;","\tthis.md_status = null;","\tthis.md_msgid = null;","\tthis.md_crc = null;","\tthis.md_datalen = null;","","\t/* debug information */","\tthis.md_nmessages = 0;","\tthis.md_nbytes = 0;","}","","mod_util.inherits(FastMessageDecoder, mod_stream.Transform);","","FastMessageDecoder.prototype._transform = function (chunk, _, callback)","{","\tthis.md_havebytes += chunk.length;","","\tif (this.md_buffer === null) {","\t\tmod_assertplus.equal(this.md_havebytes, chunk.length);","\t\tthis.md_buffer = chunk;","\t} else {","\t\tthis.md_buffer = Buffer.concat(","\t\t    [ this.md_buffer, chunk ], this.md_havebytes);","\t}","","\tthis.md_nbytes += chunk.length;","\tthis.decode(callback);","};","","FastMessageDecoder.prototype._flush = function (callback)","{","\tthis.md_done = true;","\tthis.decode(callback);","};","","FastMessageDecoder.prototype.decode = function (callback)","{","\tvar buf, msg;","","\tif (this.md_pushing) {","\t\treturn;","\t}","","\tmod_assertplus.ok(this.md_error === null);","","\twhile (this.md_havebytes >= FP_HEADER_SZ) {","\t\tbuf = this.md_buffer;","\t\tmod_assertplus.equal(buf.length, this.md_havebytes);","\t\tmod_assertplus.ok(buf !== null);","\t\tmod_assertplus.ok(this.md_error === null);","\t\tmod_assertplus.ok(this.md_version === null);","","\t\tthis.md_version = buf.readUInt8(FP_OFF_VERSION);","\t\tif (this.md_version != FP_VERSION_CURRENT) {","\t\t\tthis.md_error = new VError({","\t\t\t    'name': 'FastProtocolError',","\t\t\t    'info': {","\t\t\t\t'fastReason': 'unsupported_version',","\t\t\t\t'foundVersion': this.md_version","\t\t\t    }","\t\t\t}, 'fast protocol: unsupported version %d',","\t\t\t    this.md_version);","\t\t\tbreak;","\t\t}","","\t\tthis.md_type = buf.readUInt8(FP_OFF_TYPE);","\t\tif (this.md_type != FP_TYPE_JSON) {","\t\t\tthis.md_error = new VError({","\t\t\t    'name': 'FastProtocolError',","\t\t\t    'info': {","\t\t\t        'fastReason': 'unsupported_type',","\t\t\t\t'foundType': this.md_type","\t\t\t    }","\t\t\t}, 'fast protocol: unsupported type 0x%x',","\t\t\t    this.md_type);","\t\t\tbreak;","\t\t}","","\t\tthis.md_status = buf.readUInt8(FP_OFF_STATUS);","\t\tswitch (this.md_status) {","\t\tcase FP_STATUS_DATA:","\t\tcase FP_STATUS_END:","\t\tcase FP_STATUS_ERROR:","\t\t\tbreak;","\t\tdefault:","\t\t\tthis.md_error = new VError({","\t\t\t    'name': 'FastProtocolError',","\t\t\t    'info': {","\t\t\t        'fastReason': 'unsupported_status',","\t\t\t\t'foundStatus': this.md_status","\t\t\t    }","\t\t\t}, 'fast protocol: unsupported status 0x%x',","\t\t\t    this.md_status);","\t\t\tbreak;","\t\t}","","\t\tif (this.md_error !== null) {","\t\t\tbreak;","\t\t}","","\t\tthis.md_msgid = buf.readUInt32BE(FP_OFF_MSGID);","\t\tif (this.md_msgid < 0 || this.md_msgid > FP_MSGID_MAX) {","\t\t\tthis.md_error = new VError({","\t\t\t    'name': 'FastProtocolError',","\t\t\t    'info': {","\t\t\t\t'fastReason': 'invalid_msgid',","\t\t\t\t'foundMsgid': this.md_msgid","\t\t\t    }","\t\t\t}, 'fast protocol: invalid msgid %s', this.md_msgid);","\t\t\tbreak;","\t\t}","","\t\tthis.md_crc = buf.readUInt32BE(FP_OFF_CRC);","\t\tthis.md_datalen = buf.readUInt32BE(FP_OFF_DATALEN);","","\t\tif (this.md_havebytes < FP_HEADER_SZ + this.md_datalen) {","\t\t\t/*","\t\t\t * We don't have enough bytes to continue.  Stop now.","\t\t\t * We'll end up re-parsing the header again when we have","\t\t\t * more data.  If that turns out to be expensive, we can","\t\t\t * rework this code to keep track of where we were.","\t\t\t */","\t\t\tthis.md_version = null;","\t\t\tthis.md_type = null;","\t\t\tthis.md_status = null;","\t\t\tthis.md_msgid = null;","\t\t\tthis.md_crc = null;","\t\t\tthis.md_datalen = null;","\t\t\tbreak;","\t\t}","","\t\t/*","\t\t * We have a complete message.  Consume it and update our buffer","\t\t * state.","\t\t */","\t\tbuf = this.md_buffer.slice(0, FP_HEADER_SZ + this.md_datalen);","\t\tthis.md_buffer = this.md_buffer.slice(","\t\t    FP_HEADER_SZ + this.md_datalen);","\t\tthis.md_havebytes -= buf.length;","\t\tmsg = fastMessageDecode({","\t\t    'version': this.md_version,","\t\t    'type': this.md_type,","\t\t    'status': this.md_status,","\t\t    'msgid': this.md_msgid,","\t\t    'crc': this.md_crc,","\t\t    'datalen': this.md_datalen","\t\t}, buf);","\t\tif (msg instanceof Error) {","\t\t\tthis.md_error = msg;","\t\t\tbreak;","\t\t}","","\t\tthis.md_version = null;","\t\tthis.md_type = null;","\t\tthis.md_status = null;","\t\tthis.md_msgid = null;","\t\tthis.md_crc = null;","\t\tthis.md_datalen = null;","","\t\tthis.md_pushing = true;","\t\tthis.push(msg);","\t\tthis.md_pushing = false;","\t\tthis.md_nmessages++;","\t}","","\tif (this.md_error === null && this.md_havebytes > 0 && this.md_done) {","\t\tthis.md_error = new VError({","\t\t    'name': 'FastProtocolError',","\t\t    'info': {","\t\t\t'fastReason': 'incomplete_message'","\t\t    }","\t\t}, 'fast protocol: incomplete message at end-of-stream');","\t}","","\tif (this.md_error !== null) {","\t\tsetImmediate(callback, this.md_error);","\t} else {","\t\tsetImmediate(callback);","\t}","};",""],"l":{"15":1,"16":1,"17":1,"18":1,"19":1,"22":1,"23":1,"24":1,"79":1,"80":1,"85":1,"86":1,"87":1,"88":1,"89":1,"90":1,"91":1,"92":1,"93":1,"94":1,"95":1,"96":1,"97":1,"98":1,"102":1,"103":1,"106":1,"107":1,"108":1,"109":1,"110":1,"111":1,"114":1,"115":1,"118":1,"119":1,"120":1,"121":1,"139":1,"141":0,"143":0,"144":0,"148":0,"149":0,"151":0,"155":0,"157":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"180":1,"182":0,"184":0,"185":0,"186":0,"187":0,"188":0,"190":0,"191":0,"202":0,"203":0,"205":0,"214":0,"215":0,"223":0,"225":0,"234":0,"238":0,"247":0,"258":1,"260":0,"266":1,"268":1,"270":0,"271":0,"279":1,"281":0,"286":0,"287":0,"288":0,"289":0,"290":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"301":0,"302":0,"305":1,"307":1,"309":0,"311":0,"312":0,"313":0,"315":0,"319":0,"320":0,"323":1,"325":0,"326":0,"329":1,"331":0,"333":0,"334":0,"337":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"346":0,"347":0,"348":0,"356":0,"359":0,"360":0,"361":0,"369":0,"372":0,"373":0,"377":0,"379":0,"387":0,"390":0,"391":0,"394":0,"395":0,"396":0,"403":0,"406":0,"407":0,"409":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"429":0,"430":0,"432":0,"433":0,"441":0,"442":0,"443":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"453":0,"454":0,"455":0,"456":0,"459":0,"460":0,"468":0,"469":0,"471":0}},"/home/travis/build/npmtest/node-npmtest-fast/node_modules/fast/lib/fast_server.js":{"path":"/home/travis/build/npmtest/node-npmtest-fast/node_modules/fast/lib/fast_server.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":1,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":1,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":1,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":1,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":1,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":1,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":1,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":1,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"408":1,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0,0,0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0},"fnMap":{"1":{"name":"FastServer","line":165,"loc":{"start":{"line":165,"column":0},"end":{"line":166,"column":0}}},"2":{"name":"isConnIdAllocated","line":187,"loc":{"start":{"line":187,"column":20},"end":{"line":187,"column":51}}},"3":{"name":"onConnection","line":194,"loc":{"start":{"line":194,"column":5},"end":{"line":194,"column":33}}},"4":{"name":"(anonymous_4)","line":215,"loc":{"start":{"line":215,"column":41},"end":{"line":216,"column":0}}},"5":{"name":"(anonymous_5)","line":235,"loc":{"start":{"line":235,"column":29},"end":{"line":236,"column":0}}},"6":{"name":"(anonymous_6)","line":270,"loc":{"start":{"line":270,"column":33},"end":{"line":271,"column":0}}},"7":{"name":"(anonymous_7)","line":284,"loc":{"start":{"line":284,"column":37},"end":{"line":285,"column":0}}},"8":{"name":"(anonymous_8)","line":289,"loc":{"start":{"line":289,"column":39},"end":{"line":290,"column":0}}},"9":{"name":"(anonymous_9)","line":297,"loc":{"start":{"line":297,"column":38},"end":{"line":297,"column":59}}},"10":{"name":"(anonymous_10)","line":298,"loc":{"start":{"line":298,"column":35},"end":{"line":298,"column":52}}},"11":{"name":"(anonymous_11)","line":306,"loc":{"start":{"line":306,"column":37},"end":{"line":307,"column":0}}},"12":{"name":"(anonymous_12)","line":396,"loc":{"start":{"line":396,"column":34},"end":{"line":397,"column":0}}},"13":{"name":"(anonymous_13)","line":412,"loc":{"start":{"line":412,"column":33},"end":{"line":412,"column":45}}},"14":{"name":"onConnectionEnd","line":419,"loc":{"start":{"line":419,"column":16},"end":{"line":419,"column":43}}},"15":{"name":"onConnectionError","line":423,"loc":{"start":{"line":423,"column":18},"end":{"line":423,"column":50}}},"16":{"name":"(anonymous_16)","line":442,"loc":{"start":{"line":442,"column":39},"end":{"line":443,"column":0}}},"17":{"name":"(anonymous_17)","line":466,"loc":{"start":{"line":466,"column":41},"end":{"line":467,"column":0}}},"18":{"name":"(anonymous_18)","line":490,"loc":{"start":{"line":490,"column":41},"end":{"line":491,"column":0}}},"19":{"name":"(anonymous_19)","line":499,"loc":{"start":{"line":499,"column":37},"end":{"line":500,"column":0}}},"20":{"name":"(anonymous_20)","line":518,"loc":{"start":{"line":518,"column":46},"end":{"line":519,"column":0}}},"21":{"name":"(anonymous_21)","line":533,"loc":{"start":{"line":533,"column":33},"end":{"line":534,"column":0}}},"22":{"name":"(anonymous_22)","line":549,"loc":{"start":{"line":549,"column":35},"end":{"line":549,"column":47}}},"23":{"name":"(anonymous_23)","line":576,"loc":{"start":{"line":576,"column":33},"end":{"line":577,"column":0}}},"24":{"name":"(anonymous_24)","line":709,"loc":{"start":{"line":709,"column":22},"end":{"line":709,"column":34}}},"25":{"name":"(anonymous_25)","line":712,"loc":{"start":{"line":712,"column":31},"end":{"line":712,"column":43}}},"26":{"name":"(anonymous_26)","line":759,"loc":{"start":{"line":759,"column":35},"end":{"line":760,"column":0}}},"27":{"name":"(anonymous_27)","line":778,"loc":{"start":{"line":778,"column":39},"end":{"line":779,"column":0}}},"28":{"name":"(anonymous_28)","line":793,"loc":{"start":{"line":793,"column":41},"end":{"line":794,"column":0}}},"29":{"name":"(anonymous_29)","line":817,"loc":{"start":{"line":817,"column":38},"end":{"line":818,"column":0}}},"30":{"name":"(anonymous_30)","line":839,"loc":{"start":{"line":839,"column":31},"end":{"line":839,"column":43}}},"31":{"name":"FastRpcHandler","line":888,"loc":{"start":{"line":888,"column":0},"end":{"line":889,"column":0}}},"32":{"name":"FastRpcConnection","line":913,"loc":{"start":{"line":913,"column":0},"end":{"line":914,"column":0}}},"33":{"name":"FastRpcConnectionDecoder","line":967,"loc":{"start":{"line":967,"column":0},"end":{"line":968,"column":0}}},"34":{"name":"(anonymous_34)","line":981,"loc":{"start":{"line":981,"column":48},"end":{"line":982,"column":0}}},"35":{"name":"FastMessageHandler","line":1000,"loc":{"start":{"line":1000,"column":0},"end":{"line":1001,"column":0}}},"36":{"name":"(anonymous_36)","line":1015,"loc":{"start":{"line":1015,"column":38},"end":{"line":1016,"column":0}}},"37":{"name":"FastRpcServerRequest","line":1034,"loc":{"start":{"line":1034,"column":0},"end":{"line":1035,"column":0}}},"38":{"name":"ctxConnectionId","line":1086,"loc":{"start":{"line":1086,"column":33},"end":{"line":1086,"column":60}}},"39":{"name":"ctxRequestId","line":1089,"loc":{"start":{"line":1089,"column":30},"end":{"line":1089,"column":54}}},"40":{"name":"ctxMethodName","line":1092,"loc":{"start":{"line":1092,"column":31},"end":{"line":1092,"column":56}}},"41":{"name":"ctxArgv","line":1095,"loc":{"start":{"line":1095,"column":25},"end":{"line":1095,"column":44}}},"42":{"name":"ctxFail","line":1107,"loc":{"start":{"line":1107,"column":25},"end":{"line":1107,"column":47}}},"43":{"name":"FastRpcResponseEncoder","line":1115,"loc":{"start":{"line":1115,"column":0},"end":{"line":1116,"column":0}}},"44":{"name":"(anonymous_44)","line":1130,"loc":{"start":{"line":1130,"column":46},"end":{"line":1131,"column":0}}},"45":{"name":"(anonymous_45)","line":1151,"loc":{"start":{"line":1151,"column":42},"end":{"line":1152,"column":0}}},"46":{"name":"requestMakeMessage","line":1164,"loc":{"start":{"line":1164,"column":0},"end":{"line":1165,"column":0}}},"47":{"name":"NullSink","line":1232,"loc":{"start":{"line":1232,"column":0},"end":{"line":1233,"column":0}}},"48":{"name":"(anonymous_48)","line":1243,"loc":{"start":{"line":1243,"column":28},"end":{"line":1244,"column":0}}},"49":{"name":"fastServerProviderInit","line":1253,"loc":{"start":{"line":1253,"column":0},"end":{"line":1254,"column":0}}}},"statementMap":{"1":{"start":{"line":120,"column":0},"end":{"line":120,"column":44}},"2":{"start":{"line":121,"column":0},"end":{"line":121,"column":44}},"3":{"start":{"line":122,"column":0},"end":{"line":122,"column":35}},"4":{"start":{"line":123,"column":0},"end":{"line":123,"column":35}},"5":{"start":{"line":124,"column":0},"end":{"line":124,"column":41}},"6":{"start":{"line":125,"column":0},"end":{"line":125,"column":35}},"7":{"start":{"line":126,"column":0},"end":{"line":126,"column":31}},"8":{"start":{"line":127,"column":0},"end":{"line":127,"column":31}},"9":{"start":{"line":129,"column":0},"end":{"line":129,"column":46}},"10":{"start":{"line":130,"column":0},"end":{"line":130,"column":33}},"11":{"start":{"line":132,"column":0},"end":{"line":132,"column":32}},"12":{"start":{"line":137,"column":0},"end":{"line":137,"column":30}},"13":{"start":{"line":142,"column":0},"end":{"line":142,"column":30}},"14":{"start":{"line":149,"column":0},"end":{"line":149,"column":17}},"15":{"start":{"line":165,"column":0},"end":{"line":211,"column":1}},"16":{"start":{"line":167,"column":1},"end":{"line":167,"column":17}},"17":{"start":{"line":169,"column":1},"end":{"line":169,"column":37}},"18":{"start":{"line":170,"column":1},"end":{"line":170,"column":45}},"19":{"start":{"line":171,"column":1},"end":{"line":171,"column":51}},"20":{"start":{"line":173,"column":1},"end":{"line":173,"column":24}},"21":{"start":{"line":174,"column":1},"end":{"line":174,"column":30}},"22":{"start":{"line":175,"column":1},"end":{"line":175,"column":23}},"23":{"start":{"line":176,"column":1},"end":{"line":176,"column":20}},"24":{"start":{"line":177,"column":1},"end":{"line":179,"column":4}},"25":{"start":{"line":183,"column":1},"end":{"line":183,"column":39}},"26":{"start":{"line":184,"column":1},"end":{"line":190,"column":4}},"27":{"start":{"line":188,"column":2},"end":{"line":188,"column":44}},"28":{"start":{"line":191,"column":1},"end":{"line":191,"column":24}},"29":{"start":{"line":193,"column":1},"end":{"line":194,"column":61}},"30":{"start":{"line":194,"column":35},"end":{"line":194,"column":57}},"31":{"start":{"line":196,"column":1},"end":{"line":196,"column":29}},"32":{"start":{"line":197,"column":1},"end":{"line":197,"column":30}},"33":{"start":{"line":198,"column":1},"end":{"line":198,"column":29}},"34":{"start":{"line":199,"column":1},"end":{"line":199,"column":34}},"35":{"start":{"line":200,"column":1},"end":{"line":200,"column":31}},"36":{"start":{"line":201,"column":1},"end":{"line":201,"column":33}},"37":{"start":{"line":202,"column":1},"end":{"line":202,"column":30}},"38":{"start":{"line":204,"column":1},"end":{"line":206,"column":2}},"39":{"start":{"line":205,"column":2},"end":{"line":205,"column":48}},"40":{"start":{"line":208,"column":1},"end":{"line":208,"column":43}},"41":{"start":{"line":209,"column":1},"end":{"line":209,"column":31}},"42":{"start":{"line":210,"column":1},"end":{"line":210,"column":34}},"43":{"start":{"line":215,"column":0},"end":{"line":233,"column":2}},"44":{"start":{"line":217,"column":1},"end":{"line":217,"column":24}},"45":{"start":{"line":219,"column":1},"end":{"line":219,"column":37}},"46":{"start":{"line":220,"column":1},"end":{"line":220,"column":57}},"47":{"start":{"line":221,"column":1},"end":{"line":221,"column":57}},"48":{"start":{"line":223,"column":1},"end":{"line":223,"column":28}},"49":{"start":{"line":224,"column":1},"end":{"line":224,"column":27}},"50":{"start":{"line":225,"column":1},"end":{"line":226,"column":68}},"51":{"start":{"line":228,"column":1},"end":{"line":228,"column":71}},"52":{"start":{"line":229,"column":1},"end":{"line":232,"column":4}},"53":{"start":{"line":235,"column":0},"end":{"line":253,"column":2}},"54":{"start":{"line":237,"column":1},"end":{"line":237,"column":19}},"55":{"start":{"line":239,"column":1},"end":{"line":240,"column":37}},"56":{"start":{"line":242,"column":1},"end":{"line":245,"column":2}},"57":{"start":{"line":243,"column":2},"end":{"line":243,"column":65}},"58":{"start":{"line":244,"column":2},"end":{"line":244,"column":9}},"59":{"start":{"line":247,"column":1},"end":{"line":247,"column":35}},"60":{"start":{"line":248,"column":1},"end":{"line":248,"column":23}},"61":{"start":{"line":249,"column":1},"end":{"line":249,"column":47}},"62":{"start":{"line":250,"column":1},"end":{"line":252,"column":2}},"63":{"start":{"line":251,"column":2},"end":{"line":251,"column":51}},"64":{"start":{"line":270,"column":0},"end":{"line":282,"column":2}},"65":{"start":{"line":272,"column":1},"end":{"line":272,"column":13}},"66":{"start":{"line":273,"column":1},"end":{"line":273,"column":62}},"67":{"start":{"line":274,"column":1},"end":{"line":274,"column":56}},"68":{"start":{"line":275,"column":1},"end":{"line":275,"column":58}},"69":{"start":{"line":276,"column":1},"end":{"line":276,"column":56}},"70":{"start":{"line":277,"column":1},"end":{"line":277,"column":58}},"71":{"start":{"line":278,"column":1},"end":{"line":278,"column":52}},"72":{"start":{"line":279,"column":1},"end":{"line":279,"column":56}},"73":{"start":{"line":280,"column":1},"end":{"line":280,"column":50}},"74":{"start":{"line":281,"column":1},"end":{"line":281,"column":13}},"75":{"start":{"line":284,"column":0},"end":{"line":287,"column":2}},"76":{"start":{"line":286,"column":1},"end":{"line":286,"column":46}},"77":{"start":{"line":289,"column":0},"end":{"line":304,"column":2}},"78":{"start":{"line":291,"column":1},"end":{"line":293,"column":2}},"79":{"start":{"line":292,"column":2},"end":{"line":292,"column":38}},"80":{"start":{"line":295,"column":1},"end":{"line":295,"column":13}},"81":{"start":{"line":296,"column":1},"end":{"line":296,"column":43}},"82":{"start":{"line":297,"column":1},"end":{"line":301,"column":4}},"83":{"start":{"line":298,"column":2},"end":{"line":300,"column":5}},"84":{"start":{"line":299,"column":3},"end":{"line":299,"column":30}},"85":{"start":{"line":303,"column":1},"end":{"line":303,"column":13}},"86":{"start":{"line":306,"column":0},"end":{"line":343,"column":2}},"87":{"start":{"line":308,"column":1},"end":{"line":308,"column":14}},"88":{"start":{"line":309,"column":1},"end":{"line":309,"column":16}},"89":{"start":{"line":311,"column":1},"end":{"line":325,"column":2}},"90":{"start":{"line":312,"column":2},"end":{"line":312,"column":27}},"91":{"start":{"line":313,"column":2},"end":{"line":323,"column":4}},"92":{"start":{"line":324,"column":2},"end":{"line":324,"column":14}},"93":{"start":{"line":327,"column":1},"end":{"line":327,"column":43}},"94":{"start":{"line":328,"column":1},"end":{"line":328,"column":23}},"95":{"start":{"line":329,"column":1},"end":{"line":329,"column":39}},"96":{"start":{"line":330,"column":1},"end":{"line":330,"column":32}},"97":{"start":{"line":331,"column":1},"end":{"line":331,"column":33}},"98":{"start":{"line":332,"column":1},"end":{"line":341,"column":3}},"99":{"start":{"line":342,"column":1},"end":{"line":342,"column":13}},"100":{"start":{"line":396,"column":0},"end":{"line":436,"column":2}},"101":{"start":{"line":398,"column":1},"end":{"line":398,"column":17}},"102":{"start":{"line":399,"column":1},"end":{"line":399,"column":19}},"103":{"start":{"line":401,"column":1},"end":{"line":401,"column":36}},"104":{"start":{"line":402,"column":1},"end":{"line":402,"column":24}},"105":{"start":{"line":403,"column":1},"end":{"line":403,"column":55}},"106":{"start":{"line":404,"column":1},"end":{"line":408,"column":4}},"107":{"start":{"line":410,"column":1},"end":{"line":410,"column":32}},"108":{"start":{"line":411,"column":1},"end":{"line":411,"column":31}},"109":{"start":{"line":412,"column":1},"end":{"line":414,"column":4}},"110":{"start":{"line":413,"column":5},"end":{"line":413,"column":64}},"111":{"start":{"line":415,"column":1},"end":{"line":415,"column":36}},"112":{"start":{"line":416,"column":1},"end":{"line":416,"column":67}},"113":{"start":{"line":417,"column":1},"end":{"line":417,"column":45}},"114":{"start":{"line":419,"column":1},"end":{"line":421,"column":4}},"115":{"start":{"line":420,"column":2},"end":{"line":420,"column":38}},"116":{"start":{"line":423,"column":1},"end":{"line":425,"column":4}},"117":{"start":{"line":424,"column":2},"end":{"line":424,"column":45}},"118":{"start":{"line":432,"column":1},"end":{"line":435,"column":2}},"119":{"start":{"line":433,"column":2},"end":{"line":433,"column":66}},"120":{"start":{"line":434,"column":2},"end":{"line":434,"column":60}},"121":{"start":{"line":442,"column":0},"end":{"line":459,"column":2}},"122":{"start":{"line":444,"column":1},"end":{"line":444,"column":54}},"123":{"start":{"line":445,"column":1},"end":{"line":445,"column":54}},"124":{"start":{"line":446,"column":1},"end":{"line":446,"column":47}},"125":{"start":{"line":452,"column":1},"end":{"line":458,"column":2}},"126":{"start":{"line":453,"column":2},"end":{"line":453,"column":58}},"127":{"start":{"line":455,"column":2},"end":{"line":455,"column":23}},"128":{"start":{"line":456,"column":2},"end":{"line":456,"column":36}},"129":{"start":{"line":457,"column":2},"end":{"line":457,"column":23}},"130":{"start":{"line":466,"column":0},"end":{"line":484,"column":2}},"131":{"start":{"line":468,"column":1},"end":{"line":468,"column":54}},"132":{"start":{"line":469,"column":1},"end":{"line":469,"column":41}},"133":{"start":{"line":470,"column":1},"end":{"line":470,"column":54}},"134":{"start":{"line":471,"column":1},"end":{"line":471,"column":47}},"135":{"start":{"line":472,"column":1},"end":{"line":472,"column":50}},"136":{"start":{"line":473,"column":1},"end":{"line":473,"column":28}},"137":{"start":{"line":474,"column":1},"end":{"line":474,"column":39}},"138":{"start":{"line":480,"column":1},"end":{"line":483,"column":2}},"139":{"start":{"line":481,"column":2},"end":{"line":481,"column":36}},"140":{"start":{"line":482,"column":2},"end":{"line":482,"column":23}},"141":{"start":{"line":490,"column":0},"end":{"line":493,"column":2}},"142":{"start":{"line":492,"column":1},"end":{"line":492,"column":40}},"143":{"start":{"line":499,"column":0},"end":{"line":512,"column":2}},"144":{"start":{"line":501,"column":1},"end":{"line":501,"column":54}},"145":{"start":{"line":502,"column":1},"end":{"line":502,"column":41}},"146":{"start":{"line":504,"column":1},"end":{"line":511,"column":2}},"147":{"start":{"line":505,"column":2},"end":{"line":505,"column":61}},"148":{"start":{"line":506,"column":2},"end":{"line":506,"column":29}},"149":{"start":{"line":507,"column":2},"end":{"line":507,"column":36}},"150":{"start":{"line":508,"column":2},"end":{"line":508,"column":23}},"151":{"start":{"line":510,"column":2},"end":{"line":510,"column":58}},"152":{"start":{"line":518,"column":0},"end":{"line":527,"column":2}},"153":{"start":{"line":520,"column":1},"end":{"line":520,"column":11}},"154":{"start":{"line":522,"column":1},"end":{"line":524,"column":2}},"155":{"start":{"line":523,"column":2},"end":{"line":523,"column":49}},"156":{"start":{"line":526,"column":1},"end":{"line":526,"column":26}},"157":{"start":{"line":533,"column":0},"end":{"line":565,"column":2}},"158":{"start":{"line":535,"column":1},"end":{"line":535,"column":17}},"159":{"start":{"line":537,"column":1},"end":{"line":537,"column":58}},"160":{"start":{"line":539,"column":1},"end":{"line":564,"column":2}},"161":{"start":{"line":540,"column":2},"end":{"line":540,"column":59}},"162":{"start":{"line":541,"column":2},"end":{"line":543,"column":34}},"163":{"start":{"line":544,"column":2},"end":{"line":544,"column":26}},"164":{"start":{"line":546,"column":2},"end":{"line":546,"column":61}},"165":{"start":{"line":547,"column":2},"end":{"line":547,"column":50}},"166":{"start":{"line":548,"column":2},"end":{"line":548,"column":41}},"167":{"start":{"line":549,"column":2},"end":{"line":551,"column":5}},"168":{"start":{"line":550,"column":6},"end":{"line":550,"column":48}},"169":{"start":{"line":560,"column":2},"end":{"line":563,"column":3}},"170":{"start":{"line":562,"column":3},"end":{"line":562,"column":28}},"171":{"start":{"line":576,"column":0},"end":{"line":717,"column":2}},"172":{"start":{"line":578,"column":1},"end":{"line":578,"column":18}},"173":{"start":{"line":579,"column":1},"end":{"line":579,"column":16}},"174":{"start":{"line":580,"column":1},"end":{"line":580,"column":26}},"175":{"start":{"line":581,"column":1},"end":{"line":581,"column":17}},"176":{"start":{"line":583,"column":1},"end":{"line":583,"column":25}},"177":{"start":{"line":584,"column":1},"end":{"line":584,"column":27}},"178":{"start":{"line":586,"column":1},"end":{"line":596,"column":2}},"179":{"start":{"line":591,"column":2},"end":{"line":593,"column":49}},"180":{"start":{"line":594,"column":2},"end":{"line":594,"column":28}},"181":{"start":{"line":595,"column":2},"end":{"line":595,"column":9}},"182":{"start":{"line":598,"column":1},"end":{"line":598,"column":30}},"183":{"start":{"line":599,"column":1},"end":{"line":605,"column":2}},"184":{"start":{"line":600,"column":2},"end":{"line":602,"column":51}},"185":{"start":{"line":603,"column":2},"end":{"line":603,"column":29}},"186":{"start":{"line":604,"column":2},"end":{"line":604,"column":9}},"187":{"start":{"line":607,"column":1},"end":{"line":618,"column":2}},"188":{"start":{"line":611,"column":2},"end":{"line":616,"column":42}},"189":{"start":{"line":617,"column":2},"end":{"line":617,"column":9}},"190":{"start":{"line":620,"column":1},"end":{"line":620,"column":23}},"191":{"start":{"line":621,"column":1},"end":{"line":637,"column":2}},"192":{"start":{"line":632,"column":2},"end":{"line":634,"column":54}},"193":{"start":{"line":635,"column":2},"end":{"line":635,"column":28}},"194":{"start":{"line":636,"column":2},"end":{"line":636,"column":9}},"195":{"start":{"line":639,"column":1},"end":{"line":639,"column":67}},"196":{"start":{"line":640,"column":1},"end":{"line":649,"column":2}},"197":{"start":{"line":641,"column":2},"end":{"line":647,"column":42}},"198":{"start":{"line":648,"column":2},"end":{"line":648,"column":9}},"199":{"start":{"line":656,"column":1},"end":{"line":656,"column":20}},"200":{"start":{"line":657,"column":1},"end":{"line":657,"column":29}},"201":{"start":{"line":658,"column":1},"end":{"line":663,"column":4}},"202":{"start":{"line":664,"column":1},"end":{"line":664,"column":38}},"203":{"start":{"line":665,"column":1},"end":{"line":665,"column":31}},"204":{"start":{"line":667,"column":1},"end":{"line":667,"column":55}},"205":{"start":{"line":668,"column":1},"end":{"line":668,"column":42}},"206":{"start":{"line":669,"column":1},"end":{"line":681,"column":2}},"207":{"start":{"line":672,"column":2},"end":{"line":679,"column":40}},"208":{"start":{"line":680,"column":2},"end":{"line":680,"column":9}},"209":{"start":{"line":683,"column":1},"end":{"line":683,"column":41}},"210":{"start":{"line":684,"column":1},"end":{"line":684,"column":34}},"211":{"start":{"line":685,"column":1},"end":{"line":695,"column":2}},"212":{"start":{"line":686,"column":2},"end":{"line":693,"column":57}},"213":{"start":{"line":694,"column":2},"end":{"line":694,"column":9}},"214":{"start":{"line":698,"column":1},"end":{"line":698,"column":47}},"215":{"start":{"line":699,"column":1},"end":{"line":699,"column":23}},"216":{"start":{"line":700,"column":1},"end":{"line":700,"column":34}},"217":{"start":{"line":701,"column":1},"end":{"line":701,"column":27}},"218":{"start":{"line":707,"column":1},"end":{"line":707,"column":30}},"219":{"start":{"line":708,"column":1},"end":{"line":708,"column":60}},"220":{"start":{"line":709,"column":1},"end":{"line":709,"column":65}},"221":{"start":{"line":709,"column":36},"end":{"line":709,"column":62}},"222":{"start":{"line":710,"column":1},"end":{"line":710,"column":47}},"223":{"start":{"line":711,"column":1},"end":{"line":711,"column":38}},"224":{"start":{"line":712,"column":1},"end":{"line":715,"column":4}},"225":{"start":{"line":713,"column":2},"end":{"line":714,"column":27}},"226":{"start":{"line":716,"column":1},"end":{"line":716,"column":30}},"227":{"start":{"line":750,"column":0},"end":{"line":750,"column":27}},"228":{"start":{"line":751,"column":0},"end":{"line":751,"column":29}},"229":{"start":{"line":752,"column":0},"end":{"line":752,"column":30}},"230":{"start":{"line":753,"column":0},"end":{"line":753,"column":31}},"231":{"start":{"line":759,"column":0},"end":{"line":772,"column":2}},"232":{"start":{"line":761,"column":1},"end":{"line":761,"column":60}},"233":{"start":{"line":762,"column":1},"end":{"line":763,"column":57}},"234":{"start":{"line":765,"column":1},"end":{"line":765,"column":27}},"235":{"start":{"line":766,"column":1},"end":{"line":766,"column":35}},"236":{"start":{"line":767,"column":1},"end":{"line":767,"column":48}},"237":{"start":{"line":769,"column":1},"end":{"line":770,"column":52}},"238":{"start":{"line":771,"column":1},"end":{"line":771,"column":30}},"239":{"start":{"line":778,"column":0},"end":{"line":784,"column":2}},"240":{"start":{"line":780,"column":1},"end":{"line":780,"column":55}},"241":{"start":{"line":781,"column":1},"end":{"line":781,"column":35}},"242":{"start":{"line":782,"column":1},"end":{"line":782,"column":53}},"243":{"start":{"line":783,"column":1},"end":{"line":783,"column":30}},"244":{"start":{"line":793,"column":0},"end":{"line":812,"column":2}},"245":{"start":{"line":795,"column":1},"end":{"line":795,"column":60}},"246":{"start":{"line":797,"column":1},"end":{"line":800,"column":2}},"247":{"start":{"line":798,"column":2},"end":{"line":798,"column":57}},"248":{"start":{"line":799,"column":2},"end":{"line":799,"column":9}},"249":{"start":{"line":802,"column":1},"end":{"line":802,"column":47}},"250":{"start":{"line":803,"column":1},"end":{"line":803,"column":51}},"251":{"start":{"line":804,"column":1},"end":{"line":804,"column":47}},"252":{"start":{"line":805,"column":1},"end":{"line":805,"column":49}},"253":{"start":{"line":806,"column":1},"end":{"line":806,"column":60}},"254":{"start":{"line":807,"column":1},"end":{"line":807,"column":67}},"255":{"start":{"line":809,"column":1},"end":{"line":809,"column":40}},"256":{"start":{"line":810,"column":1},"end":{"line":810,"column":49}},"257":{"start":{"line":811,"column":1},"end":{"line":811,"column":60}},"258":{"start":{"line":817,"column":0},"end":{"line":856,"column":2}},"259":{"start":{"line":819,"column":1},"end":{"line":819,"column":10}},"260":{"start":{"line":820,"column":1},"end":{"line":820,"column":17}},"261":{"start":{"line":822,"column":1},"end":{"line":822,"column":56}},"262":{"start":{"line":823,"column":1},"end":{"line":823,"column":25}},"263":{"start":{"line":825,"column":1},"end":{"line":825,"column":70}},"264":{"start":{"line":826,"column":1},"end":{"line":826,"column":66}},"265":{"start":{"line":827,"column":1},"end":{"line":827,"column":45}},"266":{"start":{"line":829,"column":1},"end":{"line":829,"column":22}},"267":{"start":{"line":830,"column":1},"end":{"line":830,"column":31}},"268":{"start":{"line":832,"column":1},"end":{"line":843,"column":2}},"269":{"start":{"line":833,"column":2},"end":{"line":833,"column":38}},"270":{"start":{"line":839,"column":2},"end":{"line":842,"column":5}},"271":{"start":{"line":840,"column":3},"end":{"line":841,"column":44}},"272":{"start":{"line":845,"column":1},"end":{"line":851,"column":2}},"273":{"start":{"line":846,"column":2},"end":{"line":846,"column":20}},"274":{"start":{"line":847,"column":2},"end":{"line":847,"column":29}},"275":{"start":{"line":848,"column":2},"end":{"line":850,"column":3}},"276":{"start":{"line":849,"column":3},"end":{"line":849,"column":36}},"277":{"start":{"line":853,"column":1},"end":{"line":855,"column":2}},"278":{"start":{"line":854,"column":2},"end":{"line":854,"column":23}},"279":{"start":{"line":888,"column":0},"end":{"line":899,"column":1}},"280":{"start":{"line":890,"column":1},"end":{"line":890,"column":37}},"281":{"start":{"line":891,"column":1},"end":{"line":891,"column":57}},"282":{"start":{"line":892,"column":1},"end":{"line":892,"column":57}},"283":{"start":{"line":894,"column":1},"end":{"line":894,"column":36}},"284":{"start":{"line":895,"column":1},"end":{"line":895,"column":35}},"285":{"start":{"line":896,"column":1},"end":{"line":896,"column":22}},"286":{"start":{"line":897,"column":1},"end":{"line":897,"column":24}},"287":{"start":{"line":898,"column":1},"end":{"line":898,"column":21}},"288":{"start":{"line":913,"column":0},"end":{"line":960,"column":1}},"289":{"start":{"line":915,"column":1},"end":{"line":915,"column":37}},"290":{"start":{"line":916,"column":1},"end":{"line":916,"column":47}},"291":{"start":{"line":917,"column":1},"end":{"line":917,"column":51}},"292":{"start":{"line":918,"column":1},"end":{"line":918,"column":45}},"293":{"start":{"line":920,"column":1},"end":{"line":920,"column":30}},"294":{"start":{"line":921,"column":1},"end":{"line":921,"column":30}},"295":{"start":{"line":922,"column":1},"end":{"line":922,"column":66}},"296":{"start":{"line":923,"column":1},"end":{"line":926,"column":4}},"297":{"start":{"line":927,"column":1},"end":{"line":927,"column":22}},"298":{"start":{"line":928,"column":1},"end":{"line":928,"column":22}},"299":{"start":{"line":929,"column":1},"end":{"line":929,"column":24}},"300":{"start":{"line":930,"column":1},"end":{"line":930,"column":21}},"301":{"start":{"line":931,"column":1},"end":{"line":931,"column":26}},"302":{"start":{"line":932,"column":1},"end":{"line":932,"column":23}},"303":{"start":{"line":933,"column":1},"end":{"line":933,"column":29}},"304":{"start":{"line":934,"column":1},"end":{"line":934,"column":29}},"305":{"start":{"line":935,"column":1},"end":{"line":935,"column":26}},"306":{"start":{"line":940,"column":1},"end":{"line":940,"column":60}},"307":{"start":{"line":941,"column":1},"end":{"line":941,"column":41}},"308":{"start":{"line":949,"column":1},"end":{"line":949,"column":39}},"309":{"start":{"line":956,"column":1},"end":{"line":956,"column":60}},"310":{"start":{"line":957,"column":1},"end":{"line":957,"column":41}},"311":{"start":{"line":958,"column":1},"end":{"line":958,"column":73}},"312":{"start":{"line":959,"column":1},"end":{"line":959,"column":45}},"313":{"start":{"line":967,"column":0},"end":{"line":977,"column":1}},"314":{"start":{"line":969,"column":1},"end":{"line":969,"column":37}},"315":{"start":{"line":970,"column":1},"end":{"line":970,"column":55}},"316":{"start":{"line":972,"column":1},"end":{"line":972,"column":31}},"317":{"start":{"line":973,"column":1},"end":{"line":976,"column":4}},"318":{"start":{"line":979,"column":0},"end":{"line":979,"column":66}},"319":{"start":{"line":981,"column":0},"end":{"line":989,"column":2}},"320":{"start":{"line":983,"column":1},"end":{"line":983,"column":28}},"321":{"start":{"line":984,"column":1},"end":{"line":984,"column":34}},"322":{"start":{"line":985,"column":1},"end":{"line":985,"column":50}},"323":{"start":{"line":986,"column":1},"end":{"line":986,"column":38}},"324":{"start":{"line":987,"column":1},"end":{"line":987,"column":16}},"325":{"start":{"line":988,"column":1},"end":{"line":988,"column":24}},"326":{"start":{"line":1000,"column":0},"end":{"line":1011,"column":1}},"327":{"start":{"line":1002,"column":1},"end":{"line":1002,"column":37}},"328":{"start":{"line":1003,"column":1},"end":{"line":1003,"column":51}},"329":{"start":{"line":1005,"column":1},"end":{"line":1005,"column":31}},"330":{"start":{"line":1007,"column":1},"end":{"line":1010,"column":4}},"331":{"start":{"line":1013,"column":0},"end":{"line":1013,"column":59}},"332":{"start":{"line":1015,"column":0},"end":{"line":1019,"column":2}},"333":{"start":{"line":1017,"column":1},"end":{"line":1017,"column":32}},"334":{"start":{"line":1018,"column":1},"end":{"line":1018,"column":24}},"335":{"start":{"line":1034,"column":0},"end":{"line":1112,"column":1}},"336":{"start":{"line":1036,"column":1},"end":{"line":1036,"column":20}},"337":{"start":{"line":1038,"column":1},"end":{"line":1038,"column":37}},"338":{"start":{"line":1039,"column":1},"end":{"line":1039,"column":61}},"339":{"start":{"line":1040,"column":1},"end":{"line":1040,"column":51}},"340":{"start":{"line":1041,"column":1},"end":{"line":1041,"column":45}},"341":{"start":{"line":1042,"column":1},"end":{"line":1042,"column":55}},"342":{"start":{"line":1049,"column":1},"end":{"line":1049,"column":73}},"343":{"start":{"line":1051,"column":1},"end":{"line":1051,"column":37}},"344":{"start":{"line":1052,"column":1},"end":{"line":1052,"column":41}},"345":{"start":{"line":1053,"column":1},"end":{"line":1053,"column":31}},"346":{"start":{"line":1054,"column":1},"end":{"line":1054,"column":31}},"347":{"start":{"line":1055,"column":1},"end":{"line":1055,"column":25}},"348":{"start":{"line":1057,"column":1},"end":{"line":1057,"column":27}},"349":{"start":{"line":1058,"column":1},"end":{"line":1058,"column":25}},"350":{"start":{"line":1059,"column":1},"end":{"line":1059,"column":25}},"351":{"start":{"line":1060,"column":1},"end":{"line":1060,"column":26}},"352":{"start":{"line":1061,"column":1},"end":{"line":1061,"column":28}},"353":{"start":{"line":1062,"column":1},"end":{"line":1062,"column":68}},"354":{"start":{"line":1063,"column":1},"end":{"line":1063,"column":28}},"355":{"start":{"line":1064,"column":1},"end":{"line":1064,"column":23}},"356":{"start":{"line":1065,"column":1},"end":{"line":1065,"column":27}},"357":{"start":{"line":1082,"column":1},"end":{"line":1085,"column":4}},"358":{"start":{"line":1086,"column":1},"end":{"line":1088,"column":3}},"359":{"start":{"line":1087,"column":2},"end":{"line":1087,"column":38}},"360":{"start":{"line":1089,"column":1},"end":{"line":1091,"column":3}},"361":{"start":{"line":1090,"column":2},"end":{"line":1090,"column":29}},"362":{"start":{"line":1092,"column":1},"end":{"line":1094,"column":3}},"363":{"start":{"line":1093,"column":2},"end":{"line":1093,"column":33}},"364":{"start":{"line":1095,"column":1},"end":{"line":1106,"column":3}},"365":{"start":{"line":1105,"column":2},"end":{"line":1105,"column":39}},"366":{"start":{"line":1107,"column":1},"end":{"line":1109,"column":3}},"367":{"start":{"line":1108,"column":2},"end":{"line":1108,"column":56}},"368":{"start":{"line":1111,"column":1},"end":{"line":1111,"column":41}},"369":{"start":{"line":1115,"column":0},"end":{"line":1126,"column":1}},"370":{"start":{"line":1117,"column":1},"end":{"line":1117,"column":37}},"371":{"start":{"line":1118,"column":1},"end":{"line":1118,"column":53}},"372":{"start":{"line":1120,"column":1},"end":{"line":1123,"column":4}},"373":{"start":{"line":1124,"column":1},"end":{"line":1124,"column":33}},"374":{"start":{"line":1125,"column":1},"end":{"line":1125,"column":23}},"375":{"start":{"line":1128,"column":0},"end":{"line":1128,"column":64}},"376":{"start":{"line":1130,"column":0},"end":{"line":1149,"column":2}},"377":{"start":{"line":1132,"column":1},"end":{"line":1142,"column":2}},"378":{"start":{"line":1139,"column":2},"end":{"line":1139,"column":22}},"379":{"start":{"line":1140,"column":2},"end":{"line":1140,"column":25}},"380":{"start":{"line":1141,"column":2},"end":{"line":1141,"column":9}},"381":{"start":{"line":1144,"column":1},"end":{"line":1145,"column":39}},"382":{"start":{"line":1146,"column":1},"end":{"line":1147,"column":44}},"383":{"start":{"line":1148,"column":1},"end":{"line":1148,"column":24}},"384":{"start":{"line":1151,"column":0},"end":{"line":1159,"column":2}},"385":{"start":{"line":1153,"column":1},"end":{"line":1156,"column":2}},"386":{"start":{"line":1154,"column":2},"end":{"line":1155,"column":41}},"387":{"start":{"line":1158,"column":1},"end":{"line":1158,"column":24}},"388":{"start":{"line":1164,"column":0},"end":{"line":1226,"column":1}},"389":{"start":{"line":1166,"column":1},"end":{"line":1166,"column":11}},"390":{"start":{"line":1168,"column":1},"end":{"line":1168,"column":60}},"391":{"start":{"line":1169,"column":1},"end":{"line":1213,"column":2}},"392":{"start":{"line":1170,"column":2},"end":{"line":1170,"column":43}},"393":{"start":{"line":1199,"column":2},"end":{"line":1205,"column":4}},"394":{"start":{"line":1206,"column":8},"end":{"line":1213,"column":2}},"395":{"start":{"line":1207,"column":2},"end":{"line":1207,"column":35}},"396":{"start":{"line":1208,"column":2},"end":{"line":1208,"column":13}},"397":{"start":{"line":1210,"column":2},"end":{"line":1210,"column":60}},"398":{"start":{"line":1211,"column":2},"end":{"line":1211,"column":41}},"399":{"start":{"line":1212,"column":2},"end":{"line":1212,"column":15}},"400":{"start":{"line":1215,"column":1},"end":{"line":1225,"column":4}},"401":{"start":{"line":1232,"column":0},"end":{"line":1239,"column":1}},"402":{"start":{"line":1234,"column":1},"end":{"line":1234,"column":22}},"403":{"start":{"line":1235,"column":1},"end":{"line":1238,"column":4}},"404":{"start":{"line":1241,"column":0},"end":{"line":1241,"column":49}},"405":{"start":{"line":1243,"column":0},"end":{"line":1247,"column":2}},"406":{"start":{"line":1245,"column":1},"end":{"line":1245,"column":20}},"407":{"start":{"line":1246,"column":1},"end":{"line":1246,"column":24}},"408":{"start":{"line":1253,"column":0},"end":{"line":1298,"column":1}},"409":{"start":{"line":1255,"column":1},"end":{"line":1255,"column":9}},"410":{"start":{"line":1257,"column":1},"end":{"line":1257,"column":53}},"411":{"start":{"line":1267,"column":1},"end":{"line":1267,"column":53}},"412":{"start":{"line":1275,"column":1},"end":{"line":1275,"column":44}},"413":{"start":{"line":1285,"column":1},"end":{"line":1285,"column":58}},"414":{"start":{"line":1295,"column":1},"end":{"line":1295,"column":47}},"415":{"start":{"line":1296,"column":1},"end":{"line":1296,"column":14}},"416":{"start":{"line":1297,"column":1},"end":{"line":1297,"column":14}}},"branchMap":{"1":{"line":204,"type":"if","locations":[{"start":{"line":204,"column":1},"end":{"line":204,"column":1}},{"start":{"line":204,"column":1},"end":{"line":204,"column":1}}]},"2":{"line":242,"type":"if","locations":[{"start":{"line":242,"column":1},"end":{"line":242,"column":1}},{"start":{"line":242,"column":1},"end":{"line":242,"column":1}}]},"3":{"line":291,"type":"if","locations":[{"start":{"line":291,"column":1},"end":{"line":291,"column":1}},{"start":{"line":291,"column":1},"end":{"line":291,"column":1}}]},"4":{"line":311,"type":"if","locations":[{"start":{"line":311,"column":1},"end":{"line":311,"column":1}},{"start":{"line":311,"column":1},"end":{"line":311,"column":1}}]},"5":{"line":432,"type":"if","locations":[{"start":{"line":432,"column":1},"end":{"line":432,"column":1}},{"start":{"line":432,"column":1},"end":{"line":432,"column":1}}]},"6":{"line":452,"type":"if","locations":[{"start":{"line":452,"column":1},"end":{"line":452,"column":1}},{"start":{"line":452,"column":1},"end":{"line":452,"column":1}}]},"7":{"line":480,"type":"if","locations":[{"start":{"line":480,"column":1},"end":{"line":480,"column":1}},{"start":{"line":480,"column":1},"end":{"line":480,"column":1}}]},"8":{"line":504,"type":"if","locations":[{"start":{"line":504,"column":1},"end":{"line":504,"column":1}},{"start":{"line":504,"column":1},"end":{"line":504,"column":1}}]},"9":{"line":504,"type":"binary-expr","locations":[{"start":{"line":504,"column":5},"end":{"line":504,"column":34}},{"start":{"line":504,"column":38},"end":{"line":504,"column":67}}]},"10":{"line":539,"type":"if","locations":[{"start":{"line":539,"column":1},"end":{"line":539,"column":1}},{"start":{"line":539,"column":1},"end":{"line":539,"column":1}}]},"11":{"line":560,"type":"if","locations":[{"start":{"line":560,"column":2},"end":{"line":560,"column":2}},{"start":{"line":560,"column":2},"end":{"line":560,"column":2}}]},"12":{"line":560,"type":"binary-expr","locations":[{"start":{"line":560,"column":6},"end":{"line":560,"column":35}},{"start":{"line":561,"column":6},"end":{"line":561,"column":35}}]},"13":{"line":586,"type":"if","locations":[{"start":{"line":586,"column":1},"end":{"line":586,"column":1}},{"start":{"line":586,"column":1},"end":{"line":586,"column":1}}]},"14":{"line":599,"type":"if","locations":[{"start":{"line":599,"column":1},"end":{"line":599,"column":1}},{"start":{"line":599,"column":1},"end":{"line":599,"column":1}}]},"15":{"line":599,"type":"binary-expr","locations":[{"start":{"line":599,"column":5},"end":{"line":599,"column":18}},{"start":{"line":599,"column":22},"end":{"line":599,"column":51}}]},"16":{"line":607,"type":"if","locations":[{"start":{"line":607,"column":1},"end":{"line":607,"column":1}},{"start":{"line":607,"column":1},"end":{"line":607,"column":1}}]},"17":{"line":621,"type":"if","locations":[{"start":{"line":621,"column":1},"end":{"line":621,"column":1}},{"start":{"line":621,"column":1},"end":{"line":621,"column":1}}]},"18":{"line":640,"type":"if","locations":[{"start":{"line":640,"column":1},"end":{"line":640,"column":1}},{"start":{"line":640,"column":1},"end":{"line":640,"column":1}}]},"19":{"line":669,"type":"if","locations":[{"start":{"line":669,"column":1},"end":{"line":669,"column":1}},{"start":{"line":669,"column":1},"end":{"line":669,"column":1}}]},"20":{"line":669,"type":"binary-expr","locations":[{"start":{"line":669,"column":5},"end":{"line":669,"column":20}},{"start":{"line":669,"column":24},"end":{"line":669,"column":44}},{"start":{"line":670,"column":5},"end":{"line":670,"column":45}},{"start":{"line":671,"column":5},"end":{"line":671,"column":20}},{"start":{"line":671,"column":24},"end":{"line":671,"column":54}}]},"21":{"line":685,"type":"if","locations":[{"start":{"line":685,"column":1},"end":{"line":685,"column":1}},{"start":{"line":685,"column":1},"end":{"line":685,"column":1}}]},"22":{"line":797,"type":"if","locations":[{"start":{"line":797,"column":1},"end":{"line":797,"column":1}},{"start":{"line":797,"column":1},"end":{"line":797,"column":1}}]},"23":{"line":832,"type":"if","locations":[{"start":{"line":832,"column":1},"end":{"line":832,"column":1}},{"start":{"line":832,"column":1},"end":{"line":832,"column":1}}]},"24":{"line":845,"type":"if","locations":[{"start":{"line":845,"column":1},"end":{"line":845,"column":1}},{"start":{"line":845,"column":1},"end":{"line":845,"column":1}}]},"25":{"line":848,"type":"if","locations":[{"start":{"line":848,"column":2},"end":{"line":848,"column":2}},{"start":{"line":848,"column":2},"end":{"line":848,"column":2}}]},"26":{"line":853,"type":"if","locations":[{"start":{"line":853,"column":1},"end":{"line":853,"column":1}},{"start":{"line":853,"column":1},"end":{"line":853,"column":1}}]},"27":{"line":1132,"type":"if","locations":[{"start":{"line":1132,"column":1},"end":{"line":1132,"column":1}},{"start":{"line":1132,"column":1},"end":{"line":1132,"column":1}}]},"28":{"line":1144,"type":"binary-expr","locations":[{"start":{"line":1144,"column":19},"end":{"line":1144,"column":43}},{"start":{"line":1144,"column":47},"end":{"line":1144,"column":59}}]},"29":{"line":1153,"type":"if","locations":[{"start":{"line":1153,"column":1},"end":{"line":1153,"column":1}},{"start":{"line":1153,"column":1},"end":{"line":1153,"column":1}}]},"30":{"line":1169,"type":"if","locations":[{"start":{"line":1169,"column":1},"end":{"line":1169,"column":1}},{"start":{"line":1169,"column":1},"end":{"line":1169,"column":1}}]},"31":{"line":1202,"type":"binary-expr","locations":[{"start":{"line":1202,"column":17},"end":{"line":1202,"column":29}},{"start":{"line":1202,"column":33},"end":{"line":1202,"column":35}}]},"32":{"line":1206,"type":"if","locations":[{"start":{"line":1206,"column":8},"end":{"line":1206,"column":8}},{"start":{"line":1206,"column":8},"end":{"line":1206,"column":8}}]}},"code":["/*"," * This Source Code Form is subject to the terms of the Mozilla Public"," * License, v. 2.0. If a copy of the MPL was not distributed with this"," * file, You can obtain one at http://mozilla.org/MPL/2.0/."," */","","/*"," * Copyright (c) 2017, Joyent, Inc."," */","","/*"," * lib/fast_server.js: public node-fast server interface"," *"," * The public interface for this module is the FastServer class, which takes a"," * server socket and manages connections to clients that connect to the server."," * Callers register RPC method handlers with the server, and their handler"," * functions are invoked when RPC requests are received for the registered"," * method.  RPC handlers are functions that take a single argument, an RPC"," * context, through which the handler can access the RPC arguments and send data"," * back to the client."," *"," *"," * Flow control"," *"," * The implementation of the server is structured primarily into object-mode"," * streams to support Node's built-in flow control.  This is only of limited"," * utility at this time, since the client does not support per-request flow"," * control.  However, if a client is itself reading slowly, then this mechanism"," * allows the server manage backpressure appropriately."," *"," * The RPC context argument provided to RPC method handlers is itself an"," * object-mode stream.  Objects written to the stream are sent to the client."," * When the stream is ended, an \"end\" message is written to the client, which"," * signifies the successful completion of the RPC call.  The stream pipeline"," * from the RPC context to the client socket fully supports flow control, so the"," * stream will used a bounded amount of memory as long as the RPC method"," * respects Node's flow-control semantics (e.g., stops writing to the stream"," * when write() returns false).  The pipeline looks like this:"," *"," *     RPC request context    (provided as argument to RPC method handlers)"," *         |"," *         | (pipe: objects)"," *         v"," *     FastRpcResponseEncoder (wraps objects in Fast \"DATA\" messages, and"," *         |                  terminates the stream with an \"END\" message)"," *         | (pipe: objects)"," *         v"," *     FastMessageEncoder     (serializes logical Fast messages into buffers)"," *         |"," *         | (pipe: bytes)"," *         v"," *     Client socket          (usually a net.Socket object for TCP)"," *"," * Of course, many of these pipelines may be piped to the same net.Socket"," * object.  This has an unexpected, unfortunate scaling limitation: the"," * completion of a pipe() operation causes Node to remove event listeners, and"," * EventEmitter.removeListener() is O(N), where N is the number of listeners for"," * the same event.  As a result, if a client maintains N concurrent requests,"," * then completion of each request will run into this O(N) step.  This results"," * in an O(N^2) factor in the overall time to complete N requests.  The Node API"," * does not seem fixable.  We could implement a tree of EventEmitters that"," * funnel into the socket, but it's not clear at this point that this"," * consideration is worthwhile.  In practice, Fast servers are more likely to"," * see many clients making a small number of requests each rather than a small"," * number of clients making a large number of requests each, and this deployment"," * model is recommended to avoid this scaling limiter."," *"," * Flow control is less well-supported on the receiving side because it's less"," * clear what the source of backpressure should be.  The pipeline looks like"," * this:"," *"," *    +---------------------------------------------------------------------+"," *    | Per-connection pipeline                                             |"," *    | -----------------------                                             |"," *    |                                                                     |"," *    |    Client socket             (usually a net.Socket object for TCP)  |"," *    |        |                                                            |"," *    |        | (pipe: bytes)                                              |"," *    |        v                                                            |"," *    |    FastMessageDecoder        (unmarshals Fast messages from bytes   |"," *    |        |                     received on the socket)                |"," *    |        | (pipe: objects)                                            |"," *    |        v                                                            |"," *    |    FastRpcConnectionDecoder  (tags incoming Fast messages with a    |"," *    |        |                     connection identifier for session      |"," *    |        | (pipe: objects)     tracking)                              |"," *    |        |                                                            |"," *    +------- | -----------------------------------------------------------+"," *             |"," *             v"," *       FastMessageHandler          (one for the entire server that invokes"," *                                   server.onMessage() for each message)"," *"," * Since there are many connections and one FastMessageHandler for the server,"," * the whole picture looks like this:"," *"," *                    Connection  Connection  Connection"," *                     pipeline    pipeline    pipeline"," *                         |           |           |"," *                   ...   |   ...     |   ...     | ..."," *                         |           |           |"," *                         v           v           v"," *                       +---------------------------+"," *                       |    FastMessageHandler     |"," *                       +---------------------------+"," *                                     |"," *                                     v"," *                             server.onMessage()"," *"," * The FastMessageHandler currently provides no backpressure.  If desired, a"," * a simple throttle could flow-control the entire pipeline based on concurrent"," * outstanding RPC requests.  A more complex governor could look at the the"," * count of requests per connection and prioritize some notion of fairness among"," * them.  As a result of the lack of flow control here, it's possible for any"," * client to overwhelm the server by blasting messages to it; however, because"," * the intended deployment is not a byzantine environment, this issue is not"," * considered a priority for future work."," */","","var mod_assertplus = require('assert-plus');","var mod_dtrace = require('dtrace-provider');","var mod_events = require('events');","var mod_jsprim = require('jsprim');","var mod_microtime = require('microtime');","var mod_stream = require('stream');","var mod_util = require('util');","var VError = require('verror');","","var mod_protocol = require('./fast_protocol');","var mod_subr = require('./subr');","","exports.FastServer = FastServer;","","/*"," * This maximum is chosen pretty arbitrarily."," */","var FS_MAX_CONNID = (1 << 30);","","/*"," * There's one DTrace provider for all servers using this copy of this module."," */","var fastServerProvider = null;","","/*"," * We have one counter for the number of servers in this process.  This is a"," * true JavaScript global.  See the note in lib/fast_client.js."," */","/* jsl:declare fastNservers */","fastNservers = 0;","","/*"," * Instantiate a new server for handling RPC requests made from remote Fast"," * clients.  This server does not manage the underlying server socket.  That's"," * the responsibility of the caller."," *"," * Named arguments:"," *"," *     log\t\tbunyan-style logger"," *"," *     server\t\tserver object that emits 'connection' events"," *"," * Use the server by invoking the registerRpcMethod() method to register"," * handlers for named RPC methods."," */","function FastServer(args)","{","\tvar self = this;","","\tmod_assertplus.object(args, 'args');","\tmod_assertplus.object(args.log, 'args.log');","\tmod_assertplus.object(args.server, 'args.server');","","\tthis.fs_log = args.log;\t\t/* logger */","\tthis.fs_server = args.server;\t/* server socket */","\tthis.fs_handlers = {};\t\t/* registered handlers, by name */","\tthis.fs_conns = {};\t\t/* active connections */","\tthis.fs_msghandler = new FastMessageHandler({","\t    'server': this","\t});","\t/*","\t * See the comments below on use of setMaxListeners().","\t */","\tthis.fs_msghandler.setMaxListeners(0);","\tthis.fs_connallocator = new mod_subr.IdAllocator({","\t    'min': 1,","\t    'max': FS_MAX_CONNID,","\t    'isAllocated': function isConnIdAllocated(id) {","\t\treturn (self.fs_conns.hasOwnProperty(id));","\t    }","\t});","\tthis.fs_closed = false;\t\t/* server is shutting down */","","\tthis.fs_server.on('connection',","\t    function onConnection(sock) { self.connCreate(sock); });","","\tthis.fs_nignored_noconn = 0;\t/* count of msgs ignored: no conn */","\tthis.fs_nignored_badconn = 0;\t/* count of msgs ignored: bad conn */","\tthis.fs_nignored_aborts = 0;\t/* count of msgs ignored: aborts */","\tthis.fs_nconnections_created = 0;\t/* count of conns created */","\tthis.fs_nrequests_started = 0;\t\t/* count of reqs started */","\tthis.fs_nrequests_completed = 0;\t/* count of reqs completed */","\tthis.fs_nrequests_failed = 0;\t\t/* count of reqs failed */","","\tif (fastServerProvider === null) {","\t\tfastServerProvider = fastServerProviderInit();","\t}","","\tmod_assertplus.object(fastServerProvider);","\tthis.fs_dtid = fastNservers++;","\tthis.fs_dtp = fastServerProvider;","}","","/* public methods */","","FastServer.prototype.registerRpcMethod = function (args)","{","\tvar rpcmethod, handler;","","\tmod_assertplus.object(args, 'args');","\tmod_assertplus.string(args.rpcmethod, 'args.rpcmethod');","\tmod_assertplus.func(args.rpchandler, 'args.rpchandler');","","\trpcmethod = args.rpcmethod;","\thandler = args.rpchandler;","\tmod_assertplus.ok(!this.fs_handlers.hasOwnProperty(rpcmethod),","\t    'duplicate handler registered for method \"' + rpcmethod + '\"');","","\tthis.fs_log.info({ 'rpcmethod': rpcmethod }, 'registered RPC method');","\tthis.fs_handlers[rpcmethod] = new FastRpcHandler({","\t    'rpcmethod': rpcmethod,","\t    'rpchandler': handler","\t});","};","","FastServer.prototype.close = function ()","{","\tvar error, connid;","","\tmod_assertplus.ok(arguments.length === 0,","\t    'close() accepts no arguments');","","\tif (this.fs_closed) {","\t\tthis.fs_log.warn('close() called while already shutting down');","\t\treturn;","\t}","","\tthis.fs_log.info('shutting down');","\tthis.fs_closed = true;","\terror = new VError('server is shutting down');","\tfor (connid in this.fs_conns) {","\t\tthis.connTerminate(this.fs_conns[connid], error);","\t}","};","","/*"," * Public methods for exposing debugging data over kang."," *"," * Over kang, we expose basic statistics about the server (suitable for"," * real-time monitoring of basic activity), as well as objects of types:"," *"," *     fastconnection     describes a client that's currently connected,"," *\t\t\t  including local and remote address information"," *\t\t\t  and basic activity stats"," *"," *     fastrequest\t  describes a request that's currently outstanding,"," *\t\t\t  including which connection received it, how long it's"," *\t\t\t  been running, and what state it's in"," */","","FastServer.prototype.kangStats = function ()","{","\tvar rv = {};","\trv['nConnectionsActive'] = Object.keys(this.fs_conns).length;","\trv['nIgnoredMessagesNoConn'] = this.fs_nignored_noconn;","\trv['nIgnoredMessagesBadConn'] = this.fs_nignored_badconn;","\trv['nIgnoredMessagesAborts'] = this.fs_nignored_aborts;","\trv['nConnectionsCreated'] = this.fs_nconnections_created;","\trv['nRequestsStarted'] = this.fs_nrequests_started;","\trv['nRequestsCompleted'] = this.fs_nrequests_completed;","\trv['nRequestsFailed'] = this.fs_nrequests_failed;","\treturn (rv);","};","","FastServer.prototype.kangListTypes = function ()","{","\treturn ([ 'fastconnection', 'fastrequest' ]);","};","","FastServer.prototype.kangListObjects = function (type)","{","\tif (type == 'fastconnection') {","\t\treturn (Object.keys(this.fs_conns));","\t}","","\tvar rv = [];","\tmod_assertplus.equal(type, 'fastrequest');","\tmod_jsprim.forEachKey(this.fs_conns, function (cid, conn) {","\t\tObject.keys(conn.fc_pending).map(function (msgid) {","\t\t\trv.push(cid + '/' + msgid);","\t\t});","\t});","","\treturn (rv);","};","","FastServer.prototype.kangGetObject = function (type, id)","{","\tvar conn, rv;","\tvar parts, req;","","\tif (type == 'fastconnection') {","\t\tconn = this.fs_conns[id];","\t\trv = {","\t\t    'connid': conn.fc_connid,","\t\t    'addrinfo': conn.fc_addrinfo,","\t\t    'nStarted': conn.fc_nstarted,","\t\t    'nCompleted': conn.fc_ncompleted,","\t\t    'nFailed': conn.fc_nfailed,","\t\t    'draining': conn.fc_draining,","\t\t    'errorSocket': conn.fc_socket_error,","\t\t    'errorServer': conn.fc_server_error,","\t\t    'timeAccepted': conn.fc_taccepted.toISOString()","\t\t};","\t\treturn (rv);","\t}","","\tmod_assertplus.equal(type, 'fastrequest');","\tparts = id.split('/');","\tmod_assertplus.equal(parts.length, 2);","\tconn = this.fs_conns[parts[0]];","\treq = conn.fc_pending[parts[1]];","\trv = {","\t    'connid': parts[0],","\t    'msgid': parts[1],","\t    'rpcmethod': req.fsr_rpcmethod,","\t    'rpcargs': req.fsr_rpcargs,","\t    'state': req.fsr_state,","\t    'error': req.fsr_error,","\t    'blackholed': req.fsr_blackhole !== null,","\t    'timeStarted': req.fsr_tstarted.toISOString()","\t};","\treturn (rv);","};","","/* private methods */","","/*"," * Connection lifecycle"," *"," * Connections are created when the underlying Server (usually either a TCP or"," * UDS server) emits a 'connection' event.  In connCreate(), we set up data"," * structures to manage a FastRpcConnection atop the new socket."," *"," * Connections remain operational until they are abandoned for one of three"," * reasons:"," *"," *     o We read end-of-stream from the socket.  This is a graceful termination"," *       that we might expect when the remote side is shutting down after"," *       completing all of its RPC requests."," *"," *     o We see an 'error' event on the socket.  This is an ungraceful"," *       termination of the connection that we might expect in the face of a"," *       network error."," *"," *     o We proactively terminate the connection because we've read an invalid"," *       Fast protocol message or something else that's confused us as to the"," *       state of the connection, or we're shutting down the server."," *"," * This is managed through the following call chain:"," *"," *                        connection arrives"," *                                |"," *                                v"," *            connCreate() sets up the FastRpcConnection"," *                                |"," *                                v"," *                       normal operation"," *                          |     |    |"," *        +-----------------+     |    +---------------------+"," *        |                       |                          |"," *        | onConnectionEnd():    | onConnectionError():     | connTerminate():"," *        | end-of-stream read    | socket error             | protocol error"," *        |                       |                          | or server"," *        |                       | connDisconnectRequests() | shutdown"," *        |                       |                          |"," *        +---------------------> + <------------------------+"," *                                |"," *                                v"," *                         connDrain():"," *                         wait for pending requests to complete"," *                                |"," *                                v"," *                         connection removed"," */","","FastServer.prototype.connCreate = function (sock)","{","\tvar self = this;","\tvar cid, fastconn;","","\tcid = this.allocConnectionId(sock);","\tmod_assertplus.ok(cid);","\tmod_assertplus.ok(!this.fs_conns.hasOwnProperty(cid));","\tfastconn = new FastRpcConnection({","\t    'connId': cid,","\t    'socket': sock,","\t    'log': this.fs_log","\t});","","\tthis.fs_nconnections_created++;","\tthis.fs_conns[cid] = fastconn;","\tthis.fs_dtp.fire('conn-create', function () {","\t    return ([ self.fs_dtid, cid, fastconn.fc_addrinfo.label ]);","\t});","\tfastconn.fc_taccepted = new Date();","\tfastconn.fc_ckddecoder.pipe(this.fs_msghandler, { 'end': false });","\tfastconn.fc_log.info('connection received');","","\tsock.on('end', function onConnectionEnd() {","\t\tself.onConnectionEnd(cid, fastconn);","\t});","","\tsock.on('error', function onConnectionError(err) {","\t\tself.onConnectionError(cid, fastconn, err);","\t});","","\t/*","\t * We shouldn't get here if the server is closing because the caller","\t * should have shut down the server socket.  If we wind up seeing a","\t * queued connection, terminate it immediately.","\t */","\tif (this.fs_closed) {","\t\tthis.fs_log.warn('unexpected connection after server shutdown');","\t\tthis.connTerminate(new VError('server is shutting down'));","\t}","};","","/*"," * Remove this connection because we've read end-of-stream.  We will wait for"," * pending requests to complete before actually removing the connection."," */","FastServer.prototype.onConnectionEnd = function (cid, conn)","{","\tmod_assertplus.ok(conn instanceof FastRpcConnection);","\tmod_assertplus.ok(this.fs_conns.hasOwnProperty(cid));","\tmod_assertplus.ok(this.fs_conns[cid] == conn);","","\t/*","\t * Due to Node issue 6083, it's possible to see an \"end\" event after","\t * having previously seen an \"error\" event.  Ignore such events.","\t */","\tif (conn.fc_socket_error !== null) {","\t\tconn.fc_log.debug('ignoring end-of-stream after error');","\t} else {","\t\tconn.fc_ended = true;","\t\tconn.fc_log.debug('end of input');","\t\tthis.connDrain(conn);","\t}","};","","/*"," * Abandon this connection because we've seen a socket error.  This can happen"," * after the connection has already read end-of-stream or experienced a"," * protocol-level error."," */","FastServer.prototype.onConnectionError = function (cid, conn, err)","{","\tmod_assertplus.ok(conn instanceof FastRpcConnection);","\tmod_assertplus.ok(err instanceof Error);","\tmod_assertplus.ok(this.fs_conns.hasOwnProperty(cid));","\tmod_assertplus.ok(this.fs_conns[cid] == conn);","\tmod_assertplus.ok(conn.fc_socket_error === null);","\tconn.fc_socket_error = err;","\tconn.fc_log.warn(err, 'socket error');","","\t/*","\t * If we've already seen a server error, then we're already tearing down","\t * the connection.","\t */","\tif (conn.fc_server_error === null) {","\t\tthis.connDisconnectRequests(conn);","\t\tthis.connDrain(conn);","\t}","};","","/*"," * Allocate an internal connection id.  Callers will use this as a string (as an"," * object property name), and callers assume that it cannot be falsey."," */","FastServer.prototype.allocConnectionId = function ()","{","\treturn (this.fs_connallocator.alloc());","};","","/*"," * Terminate this connection because of a protocol error or a server shutdown."," * We do not allow existing requests to complete for this case."," */","FastServer.prototype.connTerminate = function (conn, err)","{","\tmod_assertplus.ok(conn instanceof FastRpcConnection);","\tmod_assertplus.ok(err instanceof Error);","","\tif (conn.fc_server_error === null && conn.fc_socket_error === null) {","\t\tconn.fc_log.warn(err, 'gracefully terminating connection');","\t\tconn.fc_server_error = err;","\t\tthis.connDisconnectRequests(conn);","\t\tthis.connDrain(conn);","\t} else {","\t\tconn.fc_log.warn(err, 'already terminating connection');","\t}","};","","/*"," * Disconnect all requests associated with this connection from the connection"," * itself, generally as a result of a fatal error on the connection."," */","FastServer.prototype.connDisconnectRequests = function (conn)","{","\tvar msgid;","","\tfor (msgid in conn.fc_pending) {","\t\tthis.requestDisconnect(conn.fc_pending[msgid]);","\t}","","\tconn.fc_socket.destroy();","};","","/*"," * Wait for outstanding requests to complete and then remove this connection"," * from the server."," */","FastServer.prototype.connDrain = function (conn)","{","\tvar self = this;","","\tmod_assertplus.ok(this.fs_conns[conn.fc_connid] == conn);","","\tif (!mod_jsprim.isEmpty(conn.fc_pending)) {","\t\tmod_assertplus.ok(conn.fc_nstarted > conn.fc_ncompleted);","\t\tconn.fc_log.debug({","\t\t    'remaining': conn.fc_nstarted - conn.fc_ncompleted","\t\t}, 'waiting for request drain');","\t\tconn.fc_draining = true;","\t} else {","\t\tmod_assertplus.equal(conn.fc_nstarted, conn.fc_ncompleted);","\t\tconn.fc_log.info('removing drained connection');","\t\tdelete (this.fs_conns[conn.fc_connid]);","\t\tthis.fs_dtp.fire('conn-destroy', function () {","\t\t    return ([ self.fs_dtid, conn.fc_connid ]);","\t\t});","","\t\t/*","\t\t * As long as we didn't see a socket error and didn't already","\t\t * terminate the socket, destroy the socket.  We could try to","\t\t * end it gracefully, but we don't actually want to wait for the","\t\t * client to shut it down cleanly.  If we already saw an error,","\t\t * then there's nothing else to do.","\t\t */","\t\tif (conn.fc_socket_error === null &&","\t\t    conn.fc_server_error === null) {","\t\t\tconn.fc_socket.destroy();","\t\t}","\t}","};","","","/*"," * Message handling"," *"," * The only message we actually expect from clients is a DATA message, which"," * represents an RPC call.  This function handles those messages and either"," * ignores or issues appropriate errors for other kinds of messages."," */","","FastServer.prototype.onMessage = function (message)","{","\tvar connid, conn;","\tvar msgid, req;","\tvar handler, handlerfunc;","\tvar self = this;","","\tconnid = message.connId;","\tmod_assertplus.ok(connid);","","\tif (!this.fs_conns.hasOwnProperty(connid)) {","\t\t/*","\t\t * This should only be possible if there were messages queued up","\t\t * from a connection that has since been destroyed.","\t\t */","\t\tthis.fs_log.warn({","\t\t    'fastMessage': message","\t\t}, 'dropping message from unknown connection');","\t\tthis.fs_nignored_noconn++;","\t\treturn;","\t}","","\tconn = this.fs_conns[connid];","\tif (conn.fc_ended || conn.fc_socket_error !== null) {","\t\tthis.fs_log.warn({","\t\t    'fastMessage': message","\t\t}, 'dropping message from abandoned connection');","\t\tthis.fs_nignored_badconn++;","\t\treturn;","\t}","","\tif (message.status === mod_protocol.FP_STATUS_END) {","\t\t/*","\t\t * There's no reason clients should ever send us an \"end\" event.","\t\t */","\t\tthis.connTerminate(conn, new VError({","\t\t    'name': 'FastProtocolError',","\t\t    'info': {","\t\t\t'fastReason': 'unexpected_status'","\t\t    }","\t\t}, 'unexpected END event from client'));","\t\treturn;","\t}","","\tmsgid = message.msgid;","\tif (message.status === mod_protocol.FP_STATUS_ERROR) {","\t\t/*","\t\t * Intermediate versions of node-fast would send ERROR messages","\t\t * to request RPC cancellation.  We don't support this.  See the","\t\t * notes inside lib/fast_client.js for details on why.  Such","\t\t * clients may expect a response from us in the form of an ERROR","\t\t * message, but we just let the RPC complete normally.  After","\t\t * all, because of the inherent race between receiving the abort","\t\t * and completing the RPC, the client has to handle this","\t\t * possibility anyway.","\t\t */","\t\tthis.fs_log.warn({","\t\t    'msgid': msgid","\t\t}, 'ignoring request to abort RPC (not supported)');","\t\tthis.fs_nignored_aborts++;","\t\treturn;","\t}","","\tmod_assertplus.equal(message.status, mod_protocol.FP_STATUS_DATA);","\tif (conn.fc_pending.hasOwnProperty(msgid)) {","\t\tthis.connTerminate(conn, new VError({","\t\t    'name': 'FastProtocolError',","\t\t    'info': {","\t\t\t'fastReason': 'duplicate_msgid',","\t\t\t'rpcMsgid': msgid","\t\t    }","\t\t}, 'client attempted to re-use msgid'));","\t\treturn;","\t}","","\t/*","\t * The message decoder only validates the Fast message and that the","\t * payload in the message is a valid, non-null JSON object.  Here, we","\t * validate the details of the payload.","\t */","\tconn.fc_nstarted++;","\tthis.fs_nrequests_started++;","\treq = new FastRpcServerRequest({","\t    'server': this,","\t    'fastMessage': message,","\t    'fastConn': conn,","\t    'log': conn.fc_log.child({ 'msgid': message.msgid }, true)","\t});","\tconn.fc_pending[req.fsr_msgid] = req;","\treq.fsr_tstarted = new Date();","","\tmod_assertplus.equal(typeof (message.data), 'object');","\tmod_assertplus.ok(message.data !== null);","\tif (!message.data.m || !message.data.m.name ||","\t    typeof (message.data.m.name) != 'string' ||","\t    !message.data.d || !Array.isArray(message.data.d)) {","\t\tthis.requestFail(req, new VError({","\t\t    'name': 'FastError',","\t\t    'info': {","\t\t\t'fastReason': 'bad_data',","\t\t\t'rpcMsgid': message.msgid,","\t\t\t'rpcMessage': message","\t\t    }","\t\t}, 'RPC request is not well-formed'));","\t\treturn;","\t}","","\treq.fsr_rpcmethod = message.data.m.name;","\treq.fsr_rpcargs = message.data.d;","\tif (!this.fs_handlers.hasOwnProperty(req.fsr_rpcmethod)) {","\t\tthis.requestFail(req, new VError({","\t\t    'name': 'FastError',","\t\t    'info': {","\t\t\t'fastReason': 'bad_method',","\t\t\t'rpcMethod': req.fsr_rpcmethod,","\t\t\t'rpcMsgid': message.msgid","\t\t    }","\t\t}, 'unsupported RPC method: \"%s\"', req.fsr_rpcmethod));","\t\treturn;","\t}","","","\thandler = this.fs_handlers[req.fsr_rpcmethod];","\thandler.fh_nstarted++;","\thandlerfunc = handler.fh_handler;","\treq.fsr_handler = handler;","","\t/*","\t * We skip the FR_S_QUEUED state because we do not currently limit","\t * request concurrency.","\t */","\treq.fsr_state = FR_S_RUNNING;","\treq.fsr_encoder.pipe(conn.fc_msgencoder, { 'end': false });","\treq.fsr_docomplete = function () { self.requestComplete(req); };","\treq.fsr_encoder.on('end', req.fsr_docomplete);","\treq.fsr_log.debug('request started');","\tthis.fs_dtp.fire('rpc-start', function () {","\t\treturn ([ self.fs_dtid, conn.fc_connid, req.fsr_msgid,","\t\t    req.fsr_rpcmethod ]);","\t});","\thandlerfunc(req.fsr_context);","};","","/*"," * Request lifecycle"," *"," * Requests are created via server.onMessage() and then advance through the"," * following state machine:"," *"," *        +------------- FR_S_INIT -------------+"," *        |                                     |"," *        | validation okay                     |"," *        v                                     | validation failed"," *     FR_S_QUEUED                              | (invalid or missing method"," *        |                                     | name, missing arguments, etc.)"," *        | request handler invoked             |"," *        v                                     |"," *     FR_S_RUNNING                             |"," *        |                                     |"," *        | request handler ends stream or      |"," *        | invokes stream.fail(error)          |"," *        |                                     |"," *        +----------> FR_S_COMPLETE <----------+"," *"," * There are two paths for reaching FR_S_COMPLETE:"," *"," *     - normal termination (handler ends the stream): server.requestComplete()"," *"," *     - graceful error (handler invokes fail(error)): server.requestFail()"," *"," * In both cases, server.requestCleanup() is invoked to finish processing the"," * request."," */","","var FR_S_INIT     = 'INIT';","var FR_S_QUEUED   = 'QUEUED';","var FR_S_RUNNING  = 'RUNNING';","var FR_S_COMPLETE = 'COMPLETE';","","/*"," * Fail the given RPC request with the specified error.  This entry point is"," * invoked by RPC implementors returning an error."," */","FastServer.prototype.requestFail = function (request, error)","{","\tmod_assertplus.ok(request instanceof FastRpcServerRequest);","\tmod_assertplus.ok(error instanceof Error,","\t    'failure must be represented as an Error instance');","","\trequest.fsr_error = error;","\trequest.fsr_state = FR_S_COMPLETE;","\trequest.fsr_log.debug(error, 'request failed');","","\trequest.fsr_conn.fc_msgencoder.write(requestMakeMessage(","\t    request, mod_protocol.FP_STATUS_ERROR, error));","\tthis.requestCleanup(request);","};","","/*"," * Mark the given RPC request having completed successfully.  This is implicitly"," * invoked by RPC implementors when they end their output stream."," */","FastServer.prototype.requestComplete = function (request)","{","\tmod_assertplus.equal(request.fsr_state, FR_S_RUNNING);","\trequest.fsr_state = FR_S_COMPLETE;","\trequest.fsr_log.debug('request completed normally');","\tthis.requestCleanup(request);","};","","/*"," * Disconnect this request from the underlying connection, usually because the"," * connection has failed.  We do not have a great way to signal cancellation to"," * the RPC method handler, so we allow the request to complete and ignore any"," * data sent.  This should not be a big deal, since Fast RPC requests are"," * intended to be very bounded in size anyway."," */","FastServer.prototype.requestDisconnect = function (request)","{","\tmod_assertplus.ok(request instanceof FastRpcServerRequest);","","\tif (request.fsr_state != FR_S_RUNNING) {","\t\tmod_assertplus.equal(request.fsr_state, FR_S_COMPLETE);","\t\treturn;","\t}","","\tmod_assertplus.ok(request.fsr_error === null);","\tmod_assertplus.ok(request.fsr_blackhole === null);","\trequest.fsr_log.info('disconnecting request');","\trequest.fsr_context.unpipe(request.fsr_encoder);","\trequest.fsr_encoder.unpipe(request.fsr_conn.fc_msgencoder);","\trequest.fsr_encoder.removeListener('end', request.fsr_docomplete);","","\trequest.fsr_blackhole = new NullSink();","\trequest.fsr_context.pipe(request.fsr_blackhole);","\trequest.fsr_blackhole.on('finish', request.fsr_docomplete);","};","","/*"," * Common function for completing execution of the given RPC request."," */","FastServer.prototype.requestCleanup = function (request)","{","\tvar conn;","\tvar self = this;","","\tmod_assertplus.equal(request.fsr_state, FR_S_COMPLETE);","\tconn = request.fsr_conn;","","\tmod_assertplus.ok(conn.fc_pending.hasOwnProperty(request.fsr_msgid));","\tmod_assertplus.ok(conn.fc_pending[request.fsr_msgid] == request);","\tdelete (conn.fc_pending[request.fsr_msgid]);","","\tconn.fc_ncompleted++;","\tthis.fs_nrequests_completed++;","","\tif (request.fsr_handler !== null) {","\t\trequest.fsr_handler.fh_ncompleted++;","","\t\t/*","\t\t * If we never assigned a handler, then we didn't fire the","\t\t * rpc-start probe.","\t\t */","\t\tthis.fs_dtp.fire('rpc-done', function () {","\t\t\treturn ([ self.fs_dtid,","\t\t\t    conn.fc_connid, request.fsr_msgid ]);","\t\t});","\t}","","\tif (request.fsr_error !== null) {","\t\tconn.fc_nfailed++;","\t\tthis.fs_nrequests_failed++;","\t\tif (request.fsr_handler !== null) {","\t\t\trequest.fsr_handler.fh_nerrors++;","\t\t}","\t}","","\tif (conn.fc_draining) {","\t\tthis.connDrain(conn);","\t}","};","","","/*"," * Helper classes"," *"," * The classes below generally contain no methods of their own except as needed"," * to implement various object-mode streams."," */","","/*"," * Each FastRpcHandler instance represents a registered RPC method.  Besides the"," * user's handler, we keep track of basic stats about this handler's usage."," * Named arguments include:"," *"," *     rpcmethod\tstring name of the RPC method"," *"," *     rpchandler\tJavaScript function invoked for each outstanding"," *     \t\t\trequest."," *"," * When RPC requests are received for this method, the function is invoked as:"," *"," *     handler(context);"," *"," * where \"context\" is an object-mode writable stream to which the RPC method"," * implementor should write plain JavaScript objects that will be received on"," * the client.  The RPC is considered successfully completed when the stream is"," * ended.  If the RPC fails, the caller should _not_ end the stream, but instead"," * invoke context.fail(err) with an error that will be sent to the client."," * After the RPC completes (either by ending the stream or by invoking fail()),"," * only read-only operations on \"context\" are allowed."," */","function FastRpcHandler(args)","{","\tmod_assertplus.object(args, 'args');","\tmod_assertplus.string(args.rpcmethod, 'args.rpcmethod');","\tmod_assertplus.func(args.rpchandler, 'args.rpchandler');","","\tthis.fh_rpcmethod = args.rpcmethod;","\tthis.fh_handler = args.rpchandler;","\tthis.fh_nstarted = 0;\t\t/* count of started RPC calls */","\tthis.fh_ncompleted = 0;\t\t/* count of completed RPC calls */","\tthis.fh_nerrors = 0;\t\t/* count of completed, failed calls */","}","","","/*"," * Each FastRpcConnection instance represents a connection to an RPC client."," * See \"Connection lifecycle\" for details about how this object is used."," * Named arguments:"," *"," *     connId\tunique identifier for this connection"," *"," *     socket\tunderlying socket for communicating with client"," *"," *     log      bunyan-style logger"," */","function FastRpcConnection(args)","{","\tmod_assertplus.object(args, 'args');","\tmod_assertplus.ok(args.connId, 'args.connId');","\tmod_assertplus.object(args.socket, 'args.socket');","\tmod_assertplus.object(args.log, 'args.log');","","\tthis.fc_connid = args.connId;\t/* see above */","\tthis.fc_socket = args.socket;\t/* see above */","\tthis.fc_addrinfo = mod_subr.summarizeSocketAddrs(this.fc_socket);","\tthis.fc_log = args.log.child({","\t    'connId': this.fc_connid,","\t    'client': this.fc_addrinfo.label","\t});","\tthis.fc_pending = {};\t\t/* pending requests */","\tthis.fc_nstarted = 0;\t\t/* count of requests started */","\tthis.fc_ncompleted = 0;\t\t/* count of requests completed */","\tthis.fc_nfailed = 0;\t\t/* count of requests failed */","\tthis.fc_taccepted = null;\t/* time when the conn was accepted */","\tthis.fc_ended = false;\t\t/* end-of-stream has been read */","\tthis.fc_socket_error = null;\t/* conn experienced socket error */","\tthis.fc_server_error = null;\t/* proto error or shutdown */","\tthis.fc_draining = false;\t/* waiting for connection to drain */","","\t/*","\t * Messages written to fc_msgencoder are encoded and sent to the socket.","\t */","\tthis.fc_msgencoder = new mod_protocol.FastMessageEncoder();","\tthis.fc_msgencoder.pipe(this.fc_socket);","","\t/*","\t * We'll end up piping each request's encoder to this connection-wide","\t * encoder.  As a result, it may have listeners proportional to the","\t * number of outstanding requests.  Disable Node's ill-considered","\t * warning about the maximum number of listeners.","\t */","\tthis.fc_msgencoder.setMaxListeners(0);","","\t/*","\t * Messages read from the socket are annotated with this connection id","\t * (using the FastRpcConnectionDecoder transform stream) and then","\t * emitted from fc_ckddecoder.","\t */","\tthis.fc_rawdecoder = new mod_protocol.FastMessageDecoder();","\tthis.fc_socket.pipe(this.fc_rawdecoder);","\tthis.fc_ckddecoder = new FastRpcConnectionDecoder({ 'fastConn': this });","\tthis.fc_rawdecoder.pipe(this.fc_ckddecoder);","}","","","/*"," * This object-mode Transform stream annotates Fast protocol messages with the"," * connection on which they were received."," */","function FastRpcConnectionDecoder(args)","{","\tmod_assertplus.object(args, 'args');","\tmod_assertplus.object(args.fastConn, 'args.fastConn');","","\tthis.fcd_conn = args.fastConn;","\tmod_stream.Transform.call(this, {","\t    'objectMode': true,","\t    'highWaterMark': 1","\t});","}","","mod_util.inherits(FastRpcConnectionDecoder, mod_stream.Transform);","","FastRpcConnectionDecoder.prototype._transform = function (msg, _, callback)","{","\tmod_assertplus.object(msg);","\tmod_assertplus.number(msg.msgid);","\tmod_assertplus.ok(!msg.hasOwnProperty('connId'));","\tmsg.connId = this.fcd_conn.fc_connid;","\tthis.push(msg);","\tsetImmediate(callback);","};","","","/*"," * The FastMessageHandler is just a transform stream that takes incoming Fast"," * protocol messages and dispatches them to the FastServer for which this"," * handler was created.  Today, this class does not do any real flow control or"," * concurrency management.  However, by phrasing this as an object-mode Writable"," * stream, this is where we could implement flow control without having to"," * modify much else."," */","function FastMessageHandler(args)","{","\tmod_assertplus.object(args, 'args');","\tmod_assertplus.object(args.server, 'args.server');","","\tthis.fmh_server = args.server;","","\tmod_stream.Writable.call(this, {","\t    'objectMode': true,","\t    'highWaterMark': 0","\t});","}","","mod_util.inherits(FastMessageHandler, mod_stream.Writable);","","FastMessageHandler.prototype._write = function (obj, _, callback)","{","\tthis.fmh_server.onMessage(obj);","\tsetImmediate(callback);","};","","","/*"," * A FastRpcServerRequest represents an RPC request received on the server from"," * a client.  See \"Request lifecycle\" above for details.  Named arguments:"," *"," *     fastMessage (object) incoming Fast protocol message that began this RPC"," *"," *     fastConn    (object) connection on which this request was received"," *"," *     server      (object) handle to the containing Fast server"," *"," *     log         (object) bunyan-style logger"," */","function FastRpcServerRequest(args)","{","\tvar request = this;","","\tmod_assertplus.object(args, 'args');","\tmod_assertplus.object(args.fastMessage, 'args.fastMessage');","\tmod_assertplus.object(args.server, 'args.server');","\tmod_assertplus.object(args.log, 'args.log');","\tmod_assertplus.object(args.fastConn, 'args.fastConn');","","\t/*","\t * This should already have been validated by the Fast parser.  However,","\t * the contents of the message's \"data\" field have not yet been","\t * validated.","\t */","\tmod_assertplus.number(args.fastMessage.msgid, 'args.fastMessage.msgid');","","\tthis.fsr_message = args.fastMessage;","\tthis.fsr_msgid = args.fastMessage.msgid;","\tthis.fsr_server = args.server;","\tthis.fsr_conn = args.fastConn;","\tthis.fsr_log = args.log;","","\tthis.fsr_rpcmethod = null;\t/* filled in after validation */","\tthis.fsr_rpcargs = null;\t/* filled in after validation */","\tthis.fsr_handler = null;\t/* filled in after validation */","\tthis.fsr_tstarted = null;\t/* time the request started */","\tthis.fsr_state = FR_S_INIT;\t/* see state machine above */","\tthis.fsr_encoder = new FastRpcResponseEncoder({ 'request': this });","\tthis.fsr_docomplete = null;\t/* callback for completion */","\tthis.fsr_error = null;\t\t/* error, if any */","\tthis.fsr_blackhole = null;\t/* see requestDisconnect() */","","\t/*","\t * The \"context\" is a handle by which implementors of RPC methods can","\t * inspect the request and send response data.  Per well-established","\t * design patterns, we provide a functional interface to this","\t * information so that we can add additional information in the future","\t * by just adding new methods to the context object.","\t *","\t * We could just use this object, rather than constructing a new object","\t * specifically for this purpose.  Indeed, this author is not generally","\t * a proponent of the following pattern for data hiding, as it disrupts","\t * debuggability.  Sadly, past experience has shown that some","\t * implementations cannot resist the temptation to peek and poke at","\t * private fields.  Given how crisp this interface boundary is, we deem","\t * it worthwhile to eliminate the possibility of malfeasance.","\t */","\tthis.fsr_context = new mod_stream.PassThrough({","\t    'objectMode': true,","\t    'highWaterMark': 1","\t});","\tthis.fsr_context.connectionId = function ctxConnectionId() {","\t\treturn (request.fsr_conn.fc_connid);","\t};","\tthis.fsr_context.requestId = function ctxRequestId() {","\t\treturn (request.fsr_msgid);","\t};","\tthis.fsr_context.methodName = function ctxMethodName() {","\t\treturn (request.fsr_rpcmethod);","\t};","\tthis.fsr_context.argv = function ctxArgv() {","\t\t/*","\t\t * For clarity and debuggability, callers ought to avoid mucking","\t\t * with the arguments that they're given.  Normally, we'd copy","\t\t * them here to eliminate this as a possibility.  But the cost","\t\t * of a deep copy is a relatively high percentage of the on-CPU","\t\t * time for many RPC calls.  Plus, it's unlikely that","\t\t * modifications to these arguments would affect code other than","\t\t * the caller.","\t\t */","\t\treturn (request.fsr_rpcargs.slice());","\t};","\tthis.fsr_context.fail = function ctxFail(err) {","\t\treturn (request.fsr_server.requestFail(request, err));","\t};","","\tthis.fsr_context.pipe(this.fsr_encoder);","}","","","function FastRpcResponseEncoder(args)","{","\tmod_assertplus.object(args, 'args');","\tmod_assertplus.object(args.request, 'args.request');","","\tmod_stream.Transform.call(this, {","\t    'objectMode': true,","\t    'highWaterMark': 1","\t});","\tthis.fse_request = args.request;","\tthis.fse_ndropped = 0;","}","","mod_util.inherits(FastRpcResponseEncoder, mod_stream.Transform);","","FastRpcResponseEncoder.prototype._transform = function (obj, _, callback)","{","\tif (this.fse_request.fsr_state != FR_S_RUNNING) {","\t\t/*","\t\t * The RPC handler should not be writing data after calling","\t\t * fail() (and completing the request).  However, there's some","\t\t * asynchrony between when they write data and when it reaches","\t\t * our transform, so this isn't necessarily invalid.","\t\t */","\t\tthis.fse_ndropped++;","\t\tsetImmediate(callback);","\t\treturn;","\t}","","\tmod_assertplus.ok(typeof (obj) == 'object' && obj !== null,","\t    'can only send non-null objects');","\tthis.push(requestMakeMessage(this.fse_request,","\t    mod_protocol.FP_STATUS_DATA, [ obj ]));","\tsetImmediate(callback);","};","","FastRpcResponseEncoder.prototype._flush = function (callback)","{","\tif (this.fse_request.fsr_state == FR_S_RUNNING) {","\t\tthis.push(requestMakeMessage(this.fse_request,","\t\t    mod_protocol.FP_STATUS_END, null));","\t}","","\tsetImmediate(callback);","};","","/*"," * Construct a Fast RPC message that's part of a response for the given request."," */","function requestMakeMessage(request, status, data)","{","\tvar datum;","","\tmod_assertplus.ok(request instanceof FastRpcServerRequest);","\tif (status == mod_protocol.FP_STATUS_ERROR) {","\t\tmod_assertplus.ok(data instanceof Error);","","\t\t/*","\t\t * The marshaling of Errors is a little sketchy, owing partly to","\t\t * the history of Fast and partly to the sketchy definition of","\t\t * Errors in JavaScript.  The goal is to allow the client","\t\t * program to reconstitute an Error object that looks like the","\t\t * one we have here.","\t\t *","\t\t * We need to provide at least \"name\" and \"message\" to make it","\t\t * look like a JavaScript Error.  As a departure from the","\t\t * previous implementation, we do not provide the \"stack\" field.","\t\t * It's way too confusing for the client to wind up with an","\t\t * Error whose stacktrace is from a different program on a","\t\t * different system.  (The filenames and line numbers in the","\t\t * stack trace may not even exist on the client system, and","\t\t * they certainly may not refer to the same files and line","\t\t * numbers even if they do exist.)","\t\t *","\t\t * We provide \"info\" as VError.info() because this is the modern","\t\t * way to provide information properties on Errors.","\t\t *","\t\t * We provide \"context\" and \"ase_errors\" because the old Fast","\t\t * implementation did so.  \"context\" is how old Fast servers","\t\t * would specify error metadata (before VError.info() existed).","\t\t * \"ase_errors\" is a private implementation property of","\t\t * MultiError, and we never should have exposed it, but things","\t\t * potentially do depend on it.","\t\t */","\t\tdatum = {","\t\t    'name': data.name,","\t\t    'message': data.message,","\t\t    'context': data.context || {},","\t\t    'info': VError.info(data),","\t\t    'ase_errors': data.ase_errors","\t\t};","\t} else if (status == mod_protocol.FP_STATUS_END) {","\t\tmod_assertplus.ok(data === null);","\t\tdatum = [];","\t} else {","\t\tmod_assertplus.equal(status, mod_protocol.FP_STATUS_DATA);","\t\tmod_assertplus.ok(Array.isArray(data));","\t\tdatum = data;","\t}","","\treturn ({","\t    'msgid': request.fsr_msgid,","\t    'status': status,","\t    'data': {","\t\t'm': {","\t\t    'uts': mod_microtime.now(),","\t\t    'name': request.fsr_rpcmethod","\t\t},","\t\t'd': datum","\t    }","\t});","}","","","/*"," * Object-mode data sink that drops all data."," */","function NullSink()","{","\tthis.ns_nwritten = 0;","\tmod_stream.Writable.call(this, {","\t    'objectMode': true,","\t    'highWaterMark': 1","\t});","}","","mod_util.inherits(NullSink, mod_stream.Writable);","","NullSink.prototype._write = function (_1, _2, callback)","{","\tthis.ns_nwritten++;","\tsetImmediate(callback);","};","","","/*"," * Initialize the DTrace provider for the Fast server."," */","function fastServerProviderInit()","{","\tvar dtp;","","\tdtp = mod_dtrace.createDTraceProvider('fastserver');","","\t/*","\t * conn-create: connection was created","\t *","\t *     arg0    int     unique identifier for this server in this process","\t *     arg1    int     unique identifier for this client in this server","\t *     arg2    string  human-readable label for this client (usually","\t *                     a summary of the TCP connection)","\t */","\tdtp.addProbe('conn-create', 'int', 'int', 'char *');","","\t/*","\t * conn-destroy: connection was destroyed","\t *","\t *     arg0    int     see conn-create arg0.","\t *     arg1    int     see conn-create arg1.","\t */","\tdtp.addProbe('conn-destroy', 'int', 'int');","","\t/*","\t * rpc-start: server starts handling RPC request","\t *","\t *     arg0    int     see conn-create arg0.","\t *     arg1    int     see conn-create arg1.","\t *     arg2    int     unique identifier for this request in this client","\t *     arg3    string  RPC method name","\t */","\tdtp.addProbe('rpc-start', 'int', 'int', 'int', 'char *');","","\t/*","\t * rpc-done: server finishes handling RPC request","\t *","\t *     arg0    int     see conn-create arg0.","\t *     arg1    int     see conn-create arg1.","\t *     arg2    int     unique identifier for this request in this","\t *\t\t       process","\t */","\tdtp.addProbe('rpc-done', 'int', 'int', 'int');","\tdtp.enable();","\treturn (dtp);","}",""],"l":{"120":2,"121":2,"122":2,"123":2,"124":2,"125":0,"126":0,"127":0,"129":0,"130":0,"132":0,"137":0,"142":0,"149":0,"165":1,"167":0,"169":0,"170":0,"171":0,"173":0,"174":0,"175":0,"176":0,"177":0,"183":0,"184":0,"188":0,"191":0,"193":0,"194":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"204":0,"205":0,"208":0,"209":0,"210":0,"215":0,"217":0,"219":0,"220":0,"221":0,"223":0,"224":0,"225":0,"228":0,"229":0,"235":0,"237":0,"239":0,"242":0,"243":0,"244":0,"247":0,"248":0,"249":0,"250":0,"251":0,"270":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"284":0,"286":0,"289":0,"291":0,"292":0,"295":0,"296":0,"297":0,"298":0,"299":0,"303":0,"306":0,"308":0,"309":0,"311":0,"312":0,"313":0,"324":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"342":0,"396":0,"398":0,"399":0,"401":0,"402":0,"403":0,"404":0,"410":0,"411":0,"412":0,"413":0,"415":0,"416":0,"417":0,"419":0,"420":0,"423":0,"424":0,"432":0,"433":0,"434":0,"442":0,"444":0,"445":0,"446":0,"452":0,"453":0,"455":0,"456":0,"457":0,"466":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"480":0,"481":0,"482":0,"490":0,"492":0,"499":0,"501":0,"502":0,"504":0,"505":0,"506":0,"507":0,"508":0,"510":0,"518":0,"520":0,"522":0,"523":0,"526":0,"533":0,"535":0,"537":0,"539":0,"540":0,"541":0,"544":0,"546":0,"547":0,"548":0,"549":0,"550":0,"560":0,"562":0,"576":0,"578":0,"579":0,"580":0,"581":0,"583":0,"584":0,"586":0,"591":0,"594":0,"595":0,"598":0,"599":0,"600":0,"603":0,"604":0,"607":0,"611":0,"617":0,"620":0,"621":0,"632":0,"635":0,"636":0,"639":0,"640":0,"641":0,"648":0,"656":0,"657":0,"658":0,"664":0,"665":0,"667":0,"668":0,"669":0,"672":0,"680":0,"683":0,"684":0,"685":0,"686":0,"694":0,"698":0,"699":0,"700":0,"701":0,"707":0,"708":0,"709":0,"710":0,"711":0,"712":0,"713":0,"716":0,"750":0,"751":0,"752":0,"753":0,"759":0,"761":0,"762":0,"765":0,"766":0,"767":0,"769":0,"771":0,"778":0,"780":0,"781":0,"782":0,"783":0,"793":0,"795":0,"797":0,"798":0,"799":0,"802":0,"803":0,"804":0,"805":0,"806":0,"807":0,"809":0,"810":0,"811":0,"817":0,"819":0,"820":0,"822":0,"823":0,"825":0,"826":0,"827":0,"829":0,"830":0,"832":0,"833":0,"839":0,"840":0,"845":0,"846":0,"847":0,"848":0,"849":0,"853":0,"854":0,"888":1,"890":0,"891":0,"892":0,"894":0,"895":0,"896":0,"897":0,"898":0,"913":1,"915":0,"916":0,"917":0,"918":0,"920":0,"921":0,"922":0,"923":0,"927":0,"928":0,"929":0,"930":0,"931":0,"932":0,"933":0,"934":0,"935":0,"940":0,"941":0,"949":0,"956":0,"957":0,"958":0,"959":0,"967":1,"969":0,"970":0,"972":0,"973":0,"979":0,"981":0,"983":0,"984":0,"985":0,"986":0,"987":0,"988":0,"1000":1,"1002":0,"1003":0,"1005":0,"1007":0,"1013":0,"1015":0,"1017":0,"1018":0,"1034":1,"1036":0,"1038":0,"1039":0,"1040":0,"1041":0,"1042":0,"1049":0,"1051":0,"1052":0,"1053":0,"1054":0,"1055":0,"1057":0,"1058":0,"1059":0,"1060":0,"1061":0,"1062":0,"1063":0,"1064":0,"1065":0,"1082":0,"1086":0,"1087":0,"1089":0,"1090":0,"1092":0,"1093":0,"1095":0,"1105":0,"1107":0,"1108":0,"1111":0,"1115":1,"1117":0,"1118":0,"1120":0,"1124":0,"1125":0,"1128":0,"1130":0,"1132":0,"1139":0,"1140":0,"1141":0,"1144":0,"1146":0,"1148":0,"1151":0,"1153":0,"1154":0,"1158":0,"1164":1,"1166":0,"1168":0,"1169":0,"1170":0,"1199":0,"1206":0,"1207":0,"1208":0,"1210":0,"1211":0,"1212":0,"1215":0,"1232":1,"1234":0,"1235":0,"1241":0,"1243":0,"1245":0,"1246":0,"1253":1,"1255":0,"1257":0,"1267":0,"1275":0,"1285":0,"1295":0,"1296":0,"1297":0}},"/home/travis/build/npmtest/node-npmtest-fast/node_modules/fast/lib/subr.js":{"path":"/home/travis/build/npmtest/node-npmtest-fast/node_modules/fast/lib/subr.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0},"b":{"1":[0,0],"2":[0,0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"summarizeSocketAddrs","line":26,"loc":{"start":{"line":26,"column":0},"end":{"line":27,"column":0}}},"2":{"name":"IdAllocator","line":94,"loc":{"start":{"line":94,"column":0},"end":{"line":95,"column":0}}},"3":{"name":"(anonymous_3)","line":110,"loc":{"start":{"line":110,"column":30},"end":{"line":111,"column":0}}}},"statementMap":{"1":{"start":{"line":16,"column":0},"end":{"line":16,"column":44}},"2":{"start":{"line":18,"column":0},"end":{"line":18,"column":52}},"3":{"start":{"line":19,"column":0},"end":{"line":19,"column":34}},"4":{"start":{"line":26,"column":0},"end":{"line":61,"column":1}},"5":{"start":{"line":28,"column":1},"end":{"line":28,"column":15}},"6":{"start":{"line":30,"column":1},"end":{"line":30,"column":24}},"7":{"start":{"line":32,"column":1},"end":{"line":36,"column":2}},"8":{"start":{"line":35,"column":2},"end":{"line":35,"column":62}},"9":{"start":{"line":38,"column":1},"end":{"line":38,"column":9}},"10":{"start":{"line":39,"column":1},"end":{"line":39,"column":42}},"11":{"start":{"line":40,"column":1},"end":{"line":40,"column":36}},"12":{"start":{"line":42,"column":1},"end":{"line":58,"column":2}},"13":{"start":{"line":43,"column":2},"end":{"line":43,"column":31}},"14":{"start":{"line":44,"column":2},"end":{"line":44,"column":26}},"15":{"start":{"line":46,"column":2},"end":{"line":46,"column":61}},"16":{"start":{"line":47,"column":2},"end":{"line":47,"column":37}},"17":{"start":{"line":48,"column":2},"end":{"line":48,"column":31}},"18":{"start":{"line":50,"column":2},"end":{"line":57,"column":3}},"19":{"start":{"line":51,"column":3},"end":{"line":51,"column":36}},"20":{"start":{"line":52,"column":3},"end":{"line":54,"column":4}},"21":{"start":{"line":53,"column":4},"end":{"line":53,"column":41}},"22":{"start":{"line":56,"column":3},"end":{"line":56,"column":27}},"23":{"start":{"line":60,"column":1},"end":{"line":60,"column":13}},"24":{"start":{"line":94,"column":0},"end":{"line":108,"column":1}},"25":{"start":{"line":96,"column":1},"end":{"line":96,"column":37}},"26":{"start":{"line":97,"column":1},"end":{"line":97,"column":45}},"27":{"start":{"line":98,"column":1},"end":{"line":98,"column":45}},"28":{"start":{"line":99,"column":1},"end":{"line":99,"column":59}},"29":{"start":{"line":100,"column":1},"end":{"line":100,"column":69}},"30":{"start":{"line":101,"column":1},"end":{"line":101,"column":62}},"31":{"start":{"line":102,"column":1},"end":{"line":102,"column":66}},"32":{"start":{"line":104,"column":1},"end":{"line":104,"column":25}},"33":{"start":{"line":105,"column":1},"end":{"line":105,"column":25}},"34":{"start":{"line":106,"column":1},"end":{"line":106,"column":37}},"35":{"start":{"line":107,"column":1},"end":{"line":107,"column":32}},"36":{"start":{"line":110,"column":0},"end":{"line":134,"column":2}},"37":{"start":{"line":112,"column":1},"end":{"line":112,"column":17}},"38":{"start":{"line":114,"column":1},"end":{"line":114,"column":25}},"39":{"start":{"line":115,"column":1},"end":{"line":115,"column":14}},"40":{"start":{"line":116,"column":1},"end":{"line":126,"column":2}},"41":{"start":{"line":117,"column":2},"end":{"line":117,"column":9}},"42":{"start":{"line":119,"column":2},"end":{"line":121,"column":3}},"43":{"start":{"line":120,"column":3},"end":{"line":120,"column":23}},"44":{"start":{"line":123,"column":2},"end":{"line":125,"column":3}},"45":{"start":{"line":124,"column":3},"end":{"line":124,"column":42}},"46":{"start":{"line":128,"column":1},"end":{"line":128,"column":28}},"47":{"start":{"line":129,"column":1},"end":{"line":131,"column":2}},"48":{"start":{"line":130,"column":2},"end":{"line":130,"column":33}},"49":{"start":{"line":133,"column":1},"end":{"line":133,"column":15}}},"branchMap":{"1":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":1},"end":{"line":32,"column":1}},{"start":{"line":32,"column":1},"end":{"line":32,"column":1}}]},"2":{"line":32,"type":"binary-expr","locations":[{"start":{"line":32,"column":5},"end":{"line":32,"column":37}},{"start":{"line":33,"column":5},"end":{"line":33,"column":34}},{"start":{"line":34,"column":5},"end":{"line":34,"column":36}}]},"3":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},{"start":{"line":42,"column":1},"end":{"line":42,"column":1}}]},"4":{"line":46,"type":"cond-expr","locations":[{"start":{"line":46,"column":36},"end":{"line":46,"column":48}},{"start":{"line":46,"column":51},"end":{"line":46,"column":60}}]},"5":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":2},"end":{"line":50,"column":2}},{"start":{"line":50,"column":2},"end":{"line":50,"column":2}}]},"6":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":3},"end":{"line":52,"column":3}},{"start":{"line":52,"column":3},"end":{"line":52,"column":3}}]},"7":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":2},"end":{"line":119,"column":2}},{"start":{"line":119,"column":2},"end":{"line":119,"column":2}}]},"8":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":2},"end":{"line":123,"column":2}},{"start":{"line":123,"column":2},"end":{"line":123,"column":2}}]},"9":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":1},"end":{"line":129,"column":1}},{"start":{"line":129,"column":1},"end":{"line":129,"column":1}}]}},"code":["/*"," * This Source Code Form is subject to the terms of the Mozilla Public"," * License, v. 2.0. If a copy of the MPL was not distributed with this"," * file, You can obtain one at http://mozilla.org/MPL/2.0/."," */","","/*"," * Copyright (c) 2016, Joyent, Inc."," */","","/*"," * lib/fast_subr.js: useful utility functions that have not yet been abstracted"," * into separate Node modules."," */","","var mod_assertplus = require('assert-plus');","","exports.summarizeSocketAddrs = summarizeSocketAddrs;","exports.IdAllocator = IdAllocator;","","/*"," * Given a Node socket, return an object summarizing it for debugging purposes."," * It's sad how complicated this is.  This is only tested for Node v0.10 and"," * v0.12."," */","function summarizeSocketAddrs(sock)","{","\tvar laddr, rv;","","\tladdr = sock.address();","","\tif (sock.remoteAddress === undefined &&","\t    sock.remotePort === undefined &&","\t    sock.remoteFamily === undefined) {","\t\treturn ({ 'socketType': 'UDS (inferred)', 'label': 'UDS' });","\t}","","\trv = {};","\trv['remoteAddress'] = sock.remoteAddress;","\trv['remotePort'] = sock.remotePort;","","\tif (laddr === null) {","\t\trv['socketType'] = 'unknown';","\t\trv['label'] = 'unknown';","\t} else {","\t\trv['socketType'] = laddr.family ? laddr.family : 'unknown';","\t\trv['localAddress'] = laddr.address;","\t\trv['localPort'] = laddr.port;","","\t\tif (sock.remoteAddress) {","\t\t\trv['label'] = sock.remoteAddress;","\t\t\tif (sock.remotePort) {","\t\t\t\trv['label'] += ':' + sock.remotePort;","\t\t\t}","\t\t} else {","\t\t\trv['label'] = 'unknown';","\t\t}","\t}","","\treturn (rv);","}","","/*"," * IdAllocator is a cheesy interface for allocating non-negative integer"," * identifiers.  This is similar to the way an OS pid allocator might work,"," * where ids are allocated in increasing order to avoid immediate reuse, but ids"," * eventually will wrap around.  It's expected that callers will use these ids"," * as strings (e.g., as object property names)."," *"," * This is a very simple implementation that we expect to be sufficient for our"," * purposes.  However, it's not very efficient.  We may want to look at"," * something like the Bonwick vmem allocator in the future."," *"," * This interface considers it a programmer error to attempt to allocate more"," * ids than are currently outstanding (i.e., to attempt to allocate when no"," * resources are available).  That will result in a thrown exception that should"," * not be caught.  If we want to make this survivable in the future, we could"," * improve this, but it's extraordinarily unlikely in the use-cases for which"," * this is intended so it's not worth special-casing at this point."," *"," * Arguments:"," *"," *     min (number)    minimum allowed id (absolute minimum: 0)"," *"," *     max (number)    maximum allowed id (absolute maximum: 2^31)"," *"," *     isAllocated     function that takes an id and returns whether or not"," *     (function)      the id is still allocated.  This is a obviously  cheesy,"," *\t\t       but given that callers are keeping track of it, we may as"," *\t\t       well just ask them rather than keep a shadow copy of the"," *\t\t       allocated ids."," *"," */","function IdAllocator(args)","{","\tmod_assertplus.object(args, 'args');","\tmod_assertplus.number(args.min, 'args.min');","\tmod_assertplus.number(args.max, 'args.max');","\tmod_assertplus.func(args.isAllocated, 'args.isAllocated');","\tmod_assertplus.ok(args.min < args.max, 'min must be less than max');","\tmod_assertplus.ok(args.min >= 0, 'min must be non-negative');","\tmod_assertplus.ok(args.max <= Math.pow(2, 31), 'max is too big');","","\tthis.ida_min = args.min;","\tthis.ida_max = args.max;","\tthis.ida_isalloc = args.isAllocated;","\tthis.ida_nextid = this.ida_min;","}","","IdAllocator.prototype.alloc = function ()","{","\tvar start, next;","","\tstart = this.ida_nextid;","\tnext = start;","\twhile (this.ida_isalloc(next)) {","\t\tnext++;","","\t\tif (next > this.ida_max) {","\t\t\tnext = this.ida_min;","\t\t}","","\t\tif (next == start) {","\t\t\tthrow (new Error('all ids allocated'));","\t\t}","\t}","","\tthis.ida_nextid = next + 1;","\tif (this.ida_nextid > this.ida_max) {","\t\tthis.ida_nextid = this.ida_min;","\t}","","\treturn (next);","};",""],"l":{"16":1,"18":1,"19":1,"26":1,"28":0,"30":0,"32":0,"35":0,"38":0,"39":0,"40":0,"42":0,"43":0,"44":0,"46":0,"47":0,"48":0,"50":0,"51":0,"52":0,"53":0,"56":0,"60":0,"94":1,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"104":0,"105":0,"106":0,"107":0,"110":1,"112":0,"114":0,"115":0,"116":0,"117":0,"119":0,"120":0,"123":0,"124":0,"128":0,"129":0,"130":0,"133":0}}}